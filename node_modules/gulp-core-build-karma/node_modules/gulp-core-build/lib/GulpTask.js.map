{"version":3,"sources":["GulpTask.ts"],"names":[],"mappings":";AAGA,wBAAqF,WAAW,CAAC,CAAA;AACjG,IAAO,KAAK,WAAW,WAAW,CAAC,CAAC;AAEpC,IAAO,QAAQ,WAAW,UAAU,CAAC,CAAC;AACtC,IAAM,GAAG,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAErC;IAAA;IAsKA,CAAC;IAhKQ,4BAAS,GAAhB,UAAiB,UAAuB;QACtC,IAAI,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;QAEpC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IAC3D,CAAC;IAEM,gCAAa,GAApB,UAAqB,UAAuB;QAC1C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAEM,4BAAS,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAIM,sBAAG,GAAV,UAAW,OAAe;QACxB,aAAG,CAAC,MAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAK,OAAS,CAAC,CAAC;IACtD,CAAC;IAEM,6BAAU,GAAjB,UAAkB,OAAe;QAC/B,iBAAO,CAAC,MAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAK,OAAS,CAAC,CAAC;IAC1D,CAAC;IAEM,6BAAU,GAAjB,UAAkB,OAAe;QAC/B,cAAI,CAAC,MAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAK,OAAS,CAAC,CAAC;IACvD,CAAC;IAEM,2BAAQ,GAAf,UAAgB,OAAe;QAC7B,eAAK,CAAC,MAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAK,OAAS,CAAC,CAAC;IACxD,CAAC;IAEM,4BAAS,GAAhB,UAAiB,QAAgB,EAAE,IAAY,EAAE,MAAc,EAAE,SAAiB,EAAE,OAAe;QACjG,mBAAS,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IACnE,CAAC;IAEM,+BAAY,GAAnB;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAEM,0BAAO,GAAd,UAAe,MAAoB;QAAnC,iBAyEC;QAxEC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAE1B,IAAI,SAAS,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAEjC,yBAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE3B,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAI,MAAM,CAAC;YAEX,IAAI,CAAC;gBACH,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;oBACtB,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;gBAC5E,CAAC;gBAED,MAAM,GAAG,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,UAAC,MAAY;oBAC5D,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACZ,OAAO,EAAE,CAAC;oBACZ,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,MAAM,CAAC,CAAC;oBACjB,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAE;YAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACX,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACjB,MAAM,CAAC,CAAC,CAAC,CAAC;YACZ,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;oBAChB,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;gBAC/B,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;oBACvB,yBAAyB;oBAEzB,GAAG,CAAC,MAAM,EAAE;wBACV,KAAK,EAAE,IAAI;wBACX,QAAQ,EAAE,MAAM,CAAC,QAAQ;wBACzB,QAAQ,EAAE,MAAM,CAAC,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ;qBAC9C,EAAE,UAAC,GAAQ;wBACV,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BACR,MAAM,CAAC,GAAG,CAAC,CAAC;wBACd,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,OAAO,EAAE,CAAC;wBACZ,CAAC;oBACH,CAAC,CAAC,CAAC;oBAEH,yCAAyC;oBACzC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CACtB,UACE,IAAgB,EAChB,QAAgB,EAChB,QAA2B;wBAC3B,YAAY,CAAC;wBACb,QAAQ,EAAE,CAAC;oBACb,CAAC,EACD,UAAS,QAAoB;wBAC3B,YAAY,CAAC;wBACb,QAAQ,EAAE,CAAC;oBACb,CAAC,CAAC,CAAC,CAAC;gBAER,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBACzC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAClB,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzC,OAAO,CAAC,MAAM,CAAC,CAAC;YAClB,CAAC;QACH,CAAC,CAAC;aACC,IAAI,CAAC;YACJ,uBAAa,CAAC,KAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACtC,CAAC,EACD,UAAC,EAAE;YACD,uBAAa,CAAC,KAAI,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;YACxC,MAAM,EAAE,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,8BAAW,GAAlB,UAAmB,SAAiB;QAClC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACjC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;IACvE,CAAC;IAEM,6BAAU,GAAjB,UAAkB,SAAiB;QACjC,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAE3C,IAAI,CAAC;YACH,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAClC,SAAS,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;QAC7B,CAAE;QAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAa,CAAC;QAE3B,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAEM,2BAAQ,GAAf,UAAgB,eAAuB,EAAE,aAAsB;QAC7D,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3B,IAAI,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;QAE7B,IAAI,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;QAC9D,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAC7B,IAAI,CAAC,WAAW,CAAC,QAAQ,EACzB,CAAC,aAAa,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAErD,EAAE,CAAC,QAAQ,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;IAC5C,CAAC;IAEM,+BAAY,GAAnB,UAAoB,SAAiB;QACnC,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC3C,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QAEvB,IAAI,CAAC;YACH,IAAI,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAChD,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC/B,CAAE;QAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAa,CAAC;QAE3B,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IACH,eAAC;AAAD,CAtKA,AAsKC,IAAA;AAtKqB,gBAAQ,WAsK7B,CAAA","file":"GulpTask.js","sourcesContent":["/* tslint:disable:max-line-length */\nimport { IExecutable } from './IExecutable';\nimport { IBuildConfig } from './IBuildConfig';\nimport { log, verbose, error, fileError, warn, logEndSubtask, logStartSubtask } from './logging';\nimport gutil = require('gulp-util');\nimport gulp = require('gulp');\nimport through2 = require('through2');\nconst eos = require('end-of-stream');\n\nexport abstract class GulpTask<TASK_CONFIG> implements IExecutable {\n  public name: string;\n  public buildConfig: IBuildConfig;\n  public taskConfig: TASK_CONFIG;\n  public nukeMatch: string[];\n\n  public setConfig(taskConfig: TASK_CONFIG) {\n    let merge = require('lodash.merge');\n\n    this.taskConfig = merge({}, this.taskConfig, taskConfig);\n  }\n\n  public replaceConfig(taskConfig: TASK_CONFIG) {\n    this.taskConfig = taskConfig;\n  }\n\n  public isEnabled(): boolean {\n    return true;\n  }\n\n  public abstract executeTask(gulp: gulp.Gulp, completeCallback?: (result?: any) => void): Promise<any> | NodeJS.ReadWriteStream | void;\n\n  public log(message: string) {\n    log(`[${gutil.colors.cyan(this.name)}] ${message}`);\n  }\n\n  public logVerbose(message: string) {\n    verbose(`[${gutil.colors.cyan(this.name)}] ${message}`);\n  }\n\n  public logWarning(message: string) {\n    warn(`[${gutil.colors.cyan(this.name)}] ${message}`);\n  }\n\n  public logError(message: string) {\n    error(`[${gutil.colors.cyan(this.name)}] ${message}`);\n  }\n\n  public fileError(filePath: string, line: number, column: number, errorCode: string, message: string) {\n    fileError(this.name, filePath, line, column, errorCode, message);\n  }\n\n  public getNukeMatch(): string[] {\n    return this.nukeMatch;\n  }\n\n  public execute(config: IBuildConfig): Promise<any> {\n    this.buildConfig = config;\n\n    let startTime = process.hrtime();\n\n    logStartSubtask(this.name);\n\n    return new Promise((resolve, reject) => {\n      let stream;\n\n      try {\n        if (!this.executeTask) {\n          throw new Error('The task subclass is missing the \"executeTask\" method.');\n        }\n\n        stream = this.executeTask(this.buildConfig.gulp, (result?: any) => {\n          if (!result) {\n            resolve();\n          } else {\n            reject(result);\n          }\n        });\n      } catch (e) {\n        this.logError(e);\n        reject(e);\n      }\n\n      if (stream) {\n        if (stream.then) {\n          stream.then(resolve, reject);\n        } else if (stream.pipe) {\n          // wait for stream to end\n\n          eos(stream, {\n            error: true,\n            readable: stream.readable,\n            writable: stream.writable && !stream.readable\n          }, (err: any) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve();\n            }\n          });\n\n          // Make sure the stream is completly read\n          stream.pipe(through2.obj(\n            function(\n              file: gutil.File,\n              encoding: string,\n              callback: (p?: any) => void) {\n              'use strict';\n              callback();\n            },\n            function(callback: () => void) {\n              'use strict';\n              callback();\n            }));\n\n        } else if (this.executeTask.length === 1) {\n          resolve(stream);\n        }\n      } else if (this.executeTask.length === 1) {\n        resolve(stream);\n      }\n    })\n      .then(() => {\n        logEndSubtask(this.name, startTime);\n      },\n      (ex) => {\n        logEndSubtask(this.name, startTime, ex);\n        throw ex;\n      });\n  }\n\n  public resolvePath(localPath: string): string {\n    let path = require('path');\n    if (path.isAbsolute(localPath)) {\n      return path.resolve(localPath);\n    }\n    return path.resolve(path.join(this.buildConfig.rootPath, localPath));\n  }\n\n  public fileExists(localPath: string): boolean {\n    let fs = require('fs');\n    let doesExist = false;\n    let fullPath = this.resolvePath(localPath);\n\n    try {\n      let stats = fs.statSync(fullPath);\n      doesExist = stats.isFile();\n    } catch (e) { /* no-op */ }\n\n    return doesExist;\n  }\n\n  public copyFile(localSourcePath: string, localDestPath?: string) {\n    let path = require('path');\n    let fs = require('fs-extra');\n\n    let fullSourcePath = path.resolve(__dirname, localSourcePath);\n    let fullDestPath = path.resolve(\n      this.buildConfig.rootPath,\n      (localDestPath || path.basename(localSourcePath)));\n\n    fs.copySync(fullSourcePath, fullDestPath);\n  }\n\n  public readJSONSync(localPath: string): string {\n    let fullPath = this.resolvePath(localPath);\n    let result = null;\n    let fs = require('fs');\n\n    try {\n      let content = fs.readFileSync(fullPath, 'utf8');\n      result = JSON.parse(content);\n    } catch (e) { /* no-op */ }\n\n    return result;\n  }\n}\n"],"sourceRoot":"/source/"}