define([], function() { return "import * as React from 'react';\nimport { ISelection } from '../../utilities/selection/interfaces';\nimport { MarqueeSelection } from './MarqueeSelection';\n\nexport interface IMarqueeSelectionProps extends React.Props<MarqueeSelection> {\n  /**\n   * The selection object to interact with when updating selection changes.\n   */\n  selection: ISelection;\n\n  /**\n   * Optional props to mix into the root DIV element.\n   */\n  rootProps?: React.HTMLProps<HTMLDivElement>;\n\n  /**\n   * Optional callback that is called, when the mouse down event occurs, in order to determine\n   * if we should start a marquee selection. If true is returned, we will cancel the mousedown\n   * event to prevent upstream mousedown handlers from executing.\n   */\n  onShouldStartSelection?: (ev: MouseEvent) => boolean;\n\n  /**\n   * Optional flag to control the enabled state of marquee selection. This allows you to render\n   * it and have events all ready to go, but conditionally disable it. That way transitioning\n   * between enabled/disabled generate no difference in the DOM.\n   * @default true\n   */\n  isEnabled?: boolean;\n\n  /**\n   * Optional flag to restrict the drag rect to the root element, instead of allowing the drag\n   * rect to start outside of the root element boundaries.\n   * @default false\n   */\n  isDraggingConstrainedToRoot?: boolean;\n}\n"; });