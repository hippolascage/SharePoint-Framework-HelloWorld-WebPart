{"version":3,"sources":["demo/pages/MarqueeSelectionPage/MarqueeSelectionPage.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,sBAA4B,wBAAwB,CAAC,CAAA;AAErD,+CAA6C,2CAA2C,CAAC,CAAA;AAEzF,IAAM,gCAAgC,GAAG,OAAO,CAAC,+CAA+C,CAAC,CAAC;AAElG;IAA0C,wCAAyB;IAAnE;QAA0C,8BAAyB;IA4BnE,CAAC;IA1BQ,qCAAM,GAAb;QACE,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,yBAAyB,GACtC,qBAAC,EAAE,IAAC,SAAS,EAAC,aAAa,sBAAsB,EACjD,qBAAC,CAAC,wTAGE,EACJ,qBAAC,CAAC,mLAEE,EACJ,qBAAC,CAAC,kFACqE,qBAAC,CAAC,gCAAyB,sLAC9F,EACJ,qBAAC,CAAC,oOAGE,EACJ,qBAAC,EAAE,IAAC,SAAS,EAAC,YAAY,cAAc,EACxC,oBAAC,mBAAW,GAAC,KAAK,EAAC,yBAAyB,EAAC,IAAI,EAAG,gCAAkC,GACpF,oBAAC,6DAA4B,OAAG,CACpB,CACV,CACP,CAAC;IACJ,CAAC;IAEH,2BAAC;AAAD,CA5BA,AA4BC,CA5ByC,KAAK,CAAC,SAAS,GA4BxD;AA5BY,4BAAoB,uBA4BhC,CAAA","file":"demo/pages/MarqueeSelectionPage/MarqueeSelectionPage.js","sourcesContent":["import * as React from 'react';\nimport { ExampleCard } from '../../components/index';\n\nimport { MarqueeSelectionBasicExample } from './examples/MarqueeSelection.Basic.Example';\n\nconst MarqueeSelectionBasicExampleCode = require('./examples/MarqueeSelection.Basic.Example.tsx');\n\nexport class MarqueeSelectionPage extends React.Component<any, any> {\n\n  public render() {\n    return (\n      <div className='ms-MarqueeSelectionPage'>\n        <h1 className='ms-font-xxl'>MarqueeSelection</h1>\n        <p>\n          The MarqueeSelection component provides a service which allows the user to drag a rectangle to be drawn around\n          items to select them. This works in conjunction with a selection object, which can be used to generically store selection state, separate from a component that consumes the state.\n        </p>\n        <p>\n          MarqueeSelection also works in conjunction with the AutoScroll utility to automatically scroll the container when we drag a rectangle within the vicinity of the edges.\n        </p>\n        <p>\n          When a selection rectangle is dragged, we look for elements with the <b>data-selection-index</b> attribute populated. We get these elements' boundingClientRects and compare them with the root's rect to determine selection state. We update the selection state appropriately.\n        </p>\n        <p>\n          In virtualization cases where items that were once selected are dematerialized, we will keep the item in its\n          previous state until we know definitively if it's on/off. (In other words, this works with List.)\n        </p>\n        <h2 className='ms-font-xl'>Examples</h2>\n        <ExampleCard title='Basic Selection Example' code={ MarqueeSelectionBasicExampleCode }>\n          <MarqueeSelectionBasicExample />\n        </ExampleCard>\n      </div>\n    );\n  }\n\n}"],"sourceRoot":"/src"}