"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var React = require('react');
var index_1 = require('../../../index');
var index_2 = require('../../components/index');
var data_1 = require('../CommandBarPage/examples/data');
var Callout_Basic_Example_1 = require('./examples/Callout.Basic.Example');
var Callout_Nested_Example_1 = require('./examples/Callout.Nested.Example');
var Callout_Directional_Example_1 = require('./examples/Callout.Directional.Example');
var Callout_Cover_Example_1 = require('./examples/Callout.Cover.Example');
var CalloutBasicExampleCode = require('./examples/Callout.Basic.Example.tsx');
var CalloutNestedExampleCode = require('./examples/Callout.Nested.Example.tsx');
var CalloutDirectionalExampleCode = require('./examples/Callout.Directional.Example.tsx');
var CalloutCoverExampleCode = require('./examples/Callout.Cover.Example.tsx');
var CalloutPage = (function (_super) {
    __extends(CalloutPage, _super);
    function CalloutPage() {
        _super.apply(this, arguments);
    }
    CalloutPage.prototype.render = function () {
        var cmdBarParamsTextAndIcons = { items: data_1.textOnlyItems, farItems: null };
        return (React.createElement("div", {className: 'ms-CalloutPage'}, React.createElement("h1", {className: 'ms-font-xxl'}, "Callout"), React.createElement("div", null, React.createElement(index_1.Link, {target: '_blank', href: 'http://dev.office.com/fabric/components/callout'}, "Callouts"), React.createElement("span", null, " are used to notify the user of something special.")), React.createElement("h2", {className: 'ms-font-xl'}, "Examples"), React.createElement(index_2.ExampleCard, {title: 'Simple callout', code: CalloutBasicExampleCode}, React.createElement(Callout_Basic_Example_1.CalloutBasicExample, null)), React.createElement(index_2.ExampleCard, {title: 'Nested callout... Callout with a commandbar with a sub menu', code: CalloutNestedExampleCode}, React.createElement(Callout_Nested_Example_1.CalloutNestedExample, React.__spread({}, cmdBarParamsTextAndIcons))), React.createElement(index_2.ExampleCard, {title: 'Callout directional example', code: CalloutDirectionalExampleCode}, React.createElement(Callout_Directional_Example_1.CalloutDirectionalExample, null)), React.createElement(index_2.ExampleCard, {title: 'Callout cover example', code: CalloutCoverExampleCode}, React.createElement(Callout_Cover_Example_1.CalloutCoverExample, null)), React.createElement(index_2.PropertiesTableSet, {componentName: 'Callout'}), React.createElement("p", null, "Besides the above properties, the ", React.createElement("code", null, "Callout"), " component accepts all properties that the React ", React.createElement("code", null, "button"), " and ", React.createElement("code", null, "a"), " components accept.")));
    };
    return CalloutPage;
}(React.Component));
exports.CalloutPage = CalloutPage;

//# sourceMappingURL=CalloutPage.js.map
