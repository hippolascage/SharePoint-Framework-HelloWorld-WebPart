"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var React = require('react');
var index_1 = require('../../components/index');
var Selection_Basic_Example_1 = require('./examples/Selection.Basic.Example');
var SelectionBasicExampleCode = require('./examples/Selection.Basic.Example.tsx');
var SelectionPage = (function (_super) {
    __extends(SelectionPage, _super);
    function SelectionPage() {
        _super.apply(this, arguments);
    }
    SelectionPage.prototype.render = function () {
        return (React.createElement("div", {className: 'ms-SelectionPage'}, React.createElement("h1", {className: 'ms-font-xxl'}, "Selection"), React.createElement("p", null, "Selection is a store that maintains the selection state of items in an efficient way." + ' ' + "It exposes methods for accessing the selection state given an item index." + ' ' + "If the items change, it can resolve the selection if items move in the array."), React.createElement("p", null, "SelectionZone is a React component that handles selection change events." + ' ' + "It can help abstract range selection, unselecting/selecting items based on selection modes," + ' ' + "and handling common keystrokes like ctrl-A for select all and escape to clear selection."), React.createElement("h2", {className: 'ms-font-xl'}, "Examples"), React.createElement(index_1.ExampleCard, {title: 'Basic Selection Example', code: SelectionBasicExampleCode}, React.createElement(Selection_Basic_Example_1.SelectionBasicExample, null))));
    };
    return SelectionPage;
}(React.Component));
exports.SelectionPage = SelectionPage;

//# sourceMappingURL=SelectionPage.js.map
