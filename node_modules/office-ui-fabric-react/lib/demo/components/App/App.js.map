{"version":3,"sources":["demo/components/App/App.tsx"],"names":[],"mappings":"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","file":"demo/components/App/App.js","sourcesContent":["import * as React from 'react';\nimport {\n  css,\n  Fabric,\n  Panel,\n  PanelType\n} from '../../../index';\nimport {\n  Header\n} from '../index';\nimport { Nav } from '../../../Nav';\nimport { AppState, ExampleStatus } from './AppState';\nimport { withResponsiveMode, ResponsiveMode } from '../../../utilities/decorators/withResponsiveMode';\nimport './App.scss';\n\nexport interface IAppProps extends React.Props<App> {\n  responsiveMode?: ResponsiveMode;\n}\nexport interface IAppState {\n  isMenuVisible: boolean;\n}\n\n@withResponsiveMode\nexport class App extends React.Component<IAppProps, any> {\n\n  constructor(props: IAppProps) {\n    super(props);\n\n    this.state = {\n      isMenuVisible: false\n    };\n\n    this._onIsMenuVisibleChanged = this._onIsMenuVisibleChanged.bind(this);\n    this._onLinkClick = this._onLinkClick.bind(this);\n  }\n\n  public render() {\n    let { responsiveMode } = this.props;\n    let { isMenuVisible } = this.state;\n\n    let navPanel = (\n      <Nav groups={ AppState.examplePages } onLinkClick={ this._onLinkClick } onRenderLink={(link) => ([\n        <span key={ 1 } className='Nav-linkText'>{ link.name }</span>,\n        (link.status !== undefined ?\n          <span key={ 2 } className={ 'Nav-linkFlair ' + 'is-state' + link.status } >{ ExampleStatus[link.status]}</span> :\n          null)\n      ]) }\n        />\n    );\n\n    return (\n      <Fabric className={ css('ms-App', 'ms-App--' + ResponsiveMode[responsiveMode]) }>\n\n        <div className='ms-App-header'>\n          <Header\n            title={ AppState.appTitle }\n            sideLinks={ AppState.headerLinks }\n            isMenuVisible={ isMenuVisible }\n            onIsMenuVisibleChanged={ this._onIsMenuVisibleChanged }\n            />\n        </div>\n\n        { (responsiveMode > ResponsiveMode.large) ? (\n          <div className='ms-App-nav'>\n            { navPanel }\n          </div>\n        ) : (null) }\n\n        <div className='ms-App-content' data-is-scrollable='true'>\n          { this.props.children }\n        </div>\n\n        { (responsiveMode <= ResponsiveMode.large) ? (\n          <Panel\n            className='ms-App-navPanel ms-font-m'\n            isOpen={ isMenuVisible }\n            isLightDismiss={ true }\n            type={ PanelType.smallFixedNear }\n            onDismiss={ this._onIsMenuVisibleChanged.bind(this, false) }>\n            { navPanel }\n          </Panel>\n        ) : (null) }\n      </Fabric>\n    );\n  }\n\n  private _onIsMenuVisibleChanged(isMenuVisible: boolean) {\n    this.setState({ isMenuVisible });\n  }\n\n  private _onLinkClick() {\n    this.setState({ isMenuVisible: false });\n  }\n}\n"],"sourceRoot":"/src"}