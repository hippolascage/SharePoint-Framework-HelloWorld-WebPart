{"version":3,"sources":["demo/app.tsx"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,sCAAsC;AACtC,IAAY,QAAQ,WAAM,WAAW,CAAC,CAAA;AACtC,oBAAmB,sBAAsB,CAAC,CAAA;AAC1C,yBAAyB,2BAA2B,CAAC,CAAA;AACrD,sBAA8B,2BAA2B,CAAC,CAAA;AAC1D,mCAAmC,+CAA+C,CAAC,CAAA;AACnF,0BAA2B,wBAAwB,CAAC,CAAA;AACpD,IAAY,SAAS,WAAM,uBAAuB,CAAC,CAAA;AAEnD,QAAO,YAAY,CAAC,CAAA;AACpB,QAAO,oBAAoB,CAAC,CAAA;AAE5B,sBAAU,CAAC,SAAS,CAAC,CAAC;AAEtB,sCAAsC;AACtC,MAAM,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC;AAChC,qCAAqC;AAErC,IAAI,WAAW,CAAC;AAEhB;IACE,WAAW,GAAG,WAAW,IAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IAEhE,QAAQ,CAAC,MAAM,CACb,oBAAC,cAAM,QACL,oBAAC,aAAK,GAAC,SAAS,EAAG,SAAK,GACpB,aAAa,EAAI,CACb,CACD,EACT,WAAW,CAAC,CAAC;AACjB,CAAC;AAED;IACE,IAAI,MAAM,GAAG,EAAE,CAAC;IAEhB,mBAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,KAAK;QACjC,KAAK,CAAC,KAAK;aACR,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAhC,CAAgC,CAAC;aAChD,OAAO,CAAC,UAAC,IAAI,EAAE,SAAS;YACjB,8BAAS,CAAU;YACzB,MAAM,CAAC,IAAI,CAAC,oBAAC,aAAK,GAAC,GAAG,EAAG,SAAW,EAAC,IAAI,EAAG,IAAI,CAAC,GAAK,EAAC,SAAS,EAAG,SAAW,EAAG,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,iBAAiB;IACjB,MAAM,CAAC,IAAI,CACT,oBAAC,aAAK,GAAC,GAAG,EAAC,gBAAgB,EAAC,SAAS,EAAG,uCAAoB,EAAG,CAChE,CAAC;IAEF,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC;AAED;IACE,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QAChB,QAAQ,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;IAC/C,CAAC;AACH,CAAC;AAED,IAAI,OAAO,GAAG,QAAQ,CAAC,UAAU,KAAK,aAAa,IAAI,QAAQ,CAAC,UAAU,KAAK,UAAU,CAAC;AAE1F,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACZ,OAAO,EAAE,CAAC;AACZ,CAAC;AAAC,IAAI,CAAC,CAAC;IACN,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC;AAC1B,CAAC;AAED,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC","file":"demo/app.js","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport * as React from 'react';\n/* tslint:enable:no-unused-variable */\nimport * as ReactDOM from 'react-dom';\nimport { App }from './components/App/App';\nimport { AppState } from './components/App/AppState';\nimport { Router, Route } from '../utilities/router/index';\nimport { GettingStartedPage } from './pages/GettingStartedPage/GettingStartedPage';\nimport { setBaseUrl } from '../utilities/resources';\nimport * as Debugging from './utilities/debugging';\n\nimport './app.scss';\nimport './ColorStyles.scss';\n\nsetBaseUrl('./dist/');\n\n/* tslint:disable:no-string-literal */\nwindow['Debugging'] = Debugging;\n/* tslint:enable:no-string-literal */\n\nlet rootElement;\n\nfunction _onLoad() {\n  rootElement = rootElement || document.getElementById('content');\n\n  ReactDOM.render(\n    <Router>\n      <Route component={ App }>\n        { _getAppRoutes() }\n      </Route>\n    </Router>,\n    rootElement);\n}\n\nfunction _getAppRoutes() {\n  let routes = [];\n\n  AppState.examplePages.forEach(group => {\n    group.links\n      .filter(link => link.hasOwnProperty('component'))\n      .forEach((link, linkIndex) => {\n        let { component } = link;\n        routes.push(<Route key={ linkIndex } path={ link.url } component={ component } />);\n      });\n  });\n\n  // Default route.\n  routes.push(\n    <Route key='gettingstarted' component={ GettingStartedPage } />\n  );\n\n  return routes;\n}\n\nfunction _onUnload() {\n  if (rootElement) {\n    ReactDOM.unmountComponentAtNode(rootElement);\n  }\n}\n\nlet isReady = document.readyState === 'interactive' || document.readyState === 'complete';\n\nif (isReady) {\n  _onLoad();\n} else {\n  window.onload = _onLoad;\n}\n\nwindow.onunload = _onUnload;\n\n"],"sourceRoot":"/src"}