{"version":3,"sources":["components/Layer/Layer.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,IAAY,QAAQ,WAAM,WAAW,CAAC,CAAA;AAEtC,0BAAkC,aAAa,CAAC,CAAA;AAChD,uBAAsB,wBAAwB,CAAC,CAAA;AAC/C,QAAO,cAAc,CAAC,CAAA;AAEtB,IAAM,qBAAqB,GAAG,eAAe,CAAC;AAE9C,IAAI,UAAqB,CAAC;AAE1B;IAA2B,yBAAgC;IAWzD,eAAY,KAAmB;QAC7B,kBAAM,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,MAAM,GAAG;YACZ,EAAE,EAAE,cAAK,CAAC,OAAO,CAAC;YAClB,QAAQ,EAAE,KAAK,CAAC,QAAQ;SACzB,CAAC;IACJ,CAAC;IAEM,sBAAM,GAAb;QACQ,sCAAS,CAAkB;QAEjC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAuB,GAAG,IAAI,CAAC;IAC/D,CAAC;IAEM,kCAAkB,GAAzB;QACE,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YAChB,IAAI,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAChD,WAAW,CAAC,YAAY,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;YACtD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAEvC,IAAI,SAAS,GAAc,QAAQ,CAAC,MAAM,CAAC,CACzC,oBAAC,qBAAS,OAAG,CACd,EAAE,WAAW,CAAc,CAAC;YAE7B,UAAU,GAAG,SAAS,CAAC;QACzB,CAAC;IACH,CAAC;IAEM,iCAAiB,GAAxB;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;YAC5B,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAC9D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;YAC9B,CAAC;QACH,CAAC;IACH,CAAC;IAEM,yCAAyB,GAAhC,UAAiC,KAAkB;QACjD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;YACtC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACtC,CAAC;IACH,CAAC;IAEM,oCAAoB,GAA3B;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;YAC5B,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACtC,CAAC;IACH,CAAC;IA5Da,kBAAY,GAAG;QAC3B,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,IAAI;KAChC,CAAC;IA2DJ,YAAC;AAAD,CA9DA,AA8DC,CA9D0B,KAAK,CAAC,SAAS,GA8DzC;AA9DY,aAAK,QA8DjB,CAAA","file":"components/Layer/Layer.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { ILayerProps } from './Layer.Props';\nimport { LayerHost, ILayer } from './LayerHost';\nimport { getId } from '../../utilities/object';\nimport './Layer.scss';\n\nconst LAYER_HOST_ELEMENT_ID = 'ms-layer-host';\n\nlet _layerHost: LayerHost;\n\nexport class Layer extends React.Component<ILayerProps, {}> {\n  public static contextTypes = {\n    isInLayer: React.PropTypes.bool\n  };\n\n  public context: {\n    isInLayer: boolean;\n  };\n\n  private _layer: ILayer;\n\n  constructor(props?: ILayerProps) {\n    super(props);\n\n    this._layer = {\n      id: getId('Layer'),\n      children: props.children\n    };\n  }\n\n  public render(): JSX.Element {\n    let { isInLayer } = this.context;\n\n    return isInLayer ? this.props.children as JSX.Element : null;\n  }\n\n  public componentWillMount() {\n    if (!_layerHost) {\n      let hostElement = document.createElement('div');\n      hostElement.setAttribute('id', LAYER_HOST_ELEMENT_ID);\n      document.body.appendChild(hostElement);\n\n      let layerHost: LayerHost = ReactDOM.render((\n        <LayerHost />\n      ), hostElement) as LayerHost;\n\n      _layerHost = layerHost;\n    }\n  }\n\n  public componentDidMount() {\n    if (!this.context.isInLayer) {\n      _layerHost.addLayer(this._layer, this.props.onLayerMounted);\n    } else {\n      if (this.props.onLayerMounted) {\n        this.props.onLayerMounted();\n      }\n    }\n  }\n\n  public componentWillReceiveProps(props: ILayerProps) {\n    if (!this.context.isInLayer) {\n      this._layer.children = props.children;\n      _layerHost.updateLayer(this._layer);\n    }\n  }\n\n  public componentWillUnmount() {\n    if (!this.context.isInLayer) {\n      _layerHost.removeLayer(this._layer);\n    }\n  }\n}\n"],"sourceRoot":"/src"}