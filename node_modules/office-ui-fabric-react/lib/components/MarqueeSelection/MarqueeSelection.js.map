{"version":3,"sources":["components/MarqueeSelection/MarqueeSelection.tsx"],"names":[],"mappings":"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","file":"components/MarqueeSelection/MarqueeSelection.js","sourcesContent":["import * as React from 'react';\nimport { AutoScroll } from '../../utilities/AutoScroll/AutoScroll';\nimport { BaseComponent } from '../../common/BaseComponent';\nimport { IMarqueeSelectionProps } from './MarqueeSelection.Props';\nimport { IPoint } from '../../common/IPoint';\nimport { IRectangle } from '../../common/IRectangle';\nimport { css } from '../../utilities/css';\nimport { findScrollableParent } from '../../utilities/scrollUtilities';\nimport { getDistanceBetweenPoints } from '../../utilities/math';\n\nimport './MarqueeSelection.scss';\n\nexport interface IMarqueeSelectionState {\n  dragOrigin?: IPoint;\n  dragRect?: IRectangle;\n}\n\n// We want to make the marquee selection start when the user drags a minimum distance. Otherwise we'd start\n// the drag even if they just click an item without moving.\nconst MIN_DRAG_DISTANCE = 5;\n\n/**\n * MarqueeSelection component abstracts managing a draggable rectangle which sets items selected/not selected.\n * Elements which have data-selectable-index attributes are queried and measured once to determine if they\n * fall within the bounds of the rectangle. The measure is memoized during the drag as a performance optimization\n * so if the items change sizes while dragging, that could cause incorrect results.\n */\nexport class MarqueeSelection extends BaseComponent<IMarqueeSelectionProps, IMarqueeSelectionState> {\n  public static defaultProps = {\n    rootTagName: 'div',\n    rootProps: {},\n    isEnabled: true\n  };\n\n  public refs: {\n    [key: string]: React.ReactInstance;\n    root: HTMLElement;\n  };\n\n  private _dragOrigin: IPoint;\n  private _rootRect: IRectangle;\n  private _lastMouseEvent: MouseEvent;\n  private _autoScroll: AutoScroll;\n  private _selectedIndicies: { [key: string]: boolean };\n  private _itemRectCache: { [key: string]: IRectangle };\n  private _scrollableParent: HTMLElement;\n  private _scrollTop: number;\n\n  constructor(props: IMarqueeSelectionProps) {\n    super(props);\n\n    this.state = {\n      dragRect: undefined\n    };\n\n    this._onMouseDown = this._onMouseDown.bind(this);\n  }\n\n  public componentDidMount() {\n    this._scrollableParent = findScrollableParent(this.refs.root);\n\n    if (this._scrollableParent) {\n      this._events.on(\n        this.props.isDraggingConstrainedToRoot ? this.refs.root : this._scrollableParent,\n        'mousedown',\n        this._onMouseDown);\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this._autoScroll) {\n      this._autoScroll.dispose();\n    }\n  }\n\n  public render(): JSX.Element {\n    let { rootProps, children } = this.props;\n    let { dragRect } = this.state;\n\n    return (\n      <div\n        { ...rootProps }\n        className={ css('ms-MarqueeSelection', rootProps.className) }\n        ref='root'\n        >\n        { children }\n        { dragRect && (<div className='ms-MarqueeSelection-dragMask' />) }\n        { dragRect && (\n          <div className='ms-MarqueeSelection-box' style={ dragRect }>\n            <div className='ms-MarqueeSelection-boxFill' />\n          </div>\n        ) }\n      </div>\n    );\n  }\n\n  private _onMouseDown(ev: MouseEvent) {\n    let { isEnabled, onShouldStartSelection } = this.props;\n\n    if (isEnabled && (!onShouldStartSelection || onShouldStartSelection(ev))) {\n      let scrollableParent = findScrollableParent(this.refs.root);\n\n      if (scrollableParent && ev.button === 0) {\n        this._selectedIndicies = {};\n        this._events.on(window, 'mousemove', this._onMouseMove);\n        this._events.on(scrollableParent, 'scroll', this._onMouseMove);\n        this._events.on(window, 'mouseup', this._onMouseUp, true);\n        this._autoScroll = new AutoScroll(this.refs.root);\n        this._scrollableParent = scrollableParent;\n        this._scrollTop = scrollableParent.scrollTop;\n        this._rootRect = this.refs.root.getBoundingClientRect();\n      }\n    }\n  }\n\n  private _getRootRect(): IRectangle {\n    return {\n      left: this._rootRect.left,\n      top: this._rootRect.top + (this._scrollTop - this._scrollableParent.scrollTop),\n      width: this._rootRect.width,\n      height: this._rootRect.height\n    };\n  }\n\n  private _onMouseMove(ev: MouseEvent) {\n    if (ev.clientX !== undefined) {\n      this._lastMouseEvent = ev;\n    }\n\n    let rootRect = this._getRootRect();\n    let currentPoint = { x: ev.clientX - rootRect.left, y: ev.clientY - rootRect.top };\n\n    if (!this._dragOrigin) {\n      this._dragOrigin = currentPoint;\n    }\n\n    if (ev.buttons !== undefined && ev.buttons === 0) {\n      this._onMouseUp(ev);\n    } else {\n      if (this.state.dragRect || getDistanceBetweenPoints(this._dragOrigin, currentPoint) > MIN_DRAG_DISTANCE) {\n        // We need to constrain the current point to the rootRect boundaries.\n        let constrainedPoint = this.props.isDraggingConstrainedToRoot ? {\n          x: Math.max(0, Math.min(rootRect.width, this._lastMouseEvent.clientX - rootRect.left)),\n          y: Math.max(0, Math.min(rootRect.height, this._lastMouseEvent.clientY - rootRect.top))\n        } : {\n          x: this._lastMouseEvent.clientX - rootRect.left,\n          y: this._lastMouseEvent.clientY - rootRect.top\n        };\n\n        let dragRect = {\n          left: Math.min(this._dragOrigin.x, constrainedPoint.x),\n          top: Math.min(this._dragOrigin.y, constrainedPoint.y),\n          width: Math.abs(constrainedPoint.x - this._dragOrigin.x),\n          height: Math.abs(constrainedPoint.y - this._dragOrigin.y)\n        };\n\n        this.setState({ dragRect });\n        this._evaluateSelection(dragRect);\n      }\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n\n    return false;\n  }\n\n  private _onMouseUp(ev: MouseEvent) {\n    let scrollableParent = findScrollableParent(this.refs.root);\n\n    this._events.off(window);\n    this._events.off(scrollableParent, 'scroll');\n\n    this._autoScroll.dispose();\n    this._autoScroll = this._dragOrigin = this._lastMouseEvent = this._selectedIndicies = this._itemRectCache = undefined;\n\n    if (this.state.dragRect) {\n      this.setState({\n        dragRect: undefined\n      });\n\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  }\n\n  private _evaluateSelection(dragRect: IRectangle) {\n    // Break early if we don't need to evaluate.\n    if (!dragRect) {\n      return;\n    }\n\n    let { selection } = this.props;\n    let rootRect = this._getRootRect();\n    let allElements = this.refs.root.querySelectorAll('[data-selection-index]');\n\n    if (!this._itemRectCache) {\n      this._itemRectCache = {};\n    }\n\n    // Stop change events, clear selection to re-populate.\n    selection.setChangeEvents(false);\n    selection.setAllSelected(false);\n\n    for (let i = 0; i < allElements.length; i++) {\n      let element = allElements[i];\n      let index = element.getAttribute('data-selection-index');\n\n      // Pull the memoized rectangle for the item, or the get the rect and memoize.\n      let itemRect = this._itemRectCache[index];\n\n      if (!itemRect) {\n        itemRect = element.getBoundingClientRect();\n\n        // Normalize the item rect to the dragRect coordinates.\n        itemRect = {\n          left: itemRect.left - rootRect.left,\n          top: itemRect.top - rootRect.top,\n          width: itemRect.width,\n          height: itemRect.height,\n          right: (itemRect.left - rootRect.left) + itemRect.width,\n          bottom: (itemRect.top - rootRect.top) + itemRect.height\n        };\n\n        if (itemRect.width > 0 && itemRect.height > 0) {\n          this._itemRectCache[index] = itemRect;\n        }\n      }\n\n      if (\n        itemRect.top < (dragRect.top + dragRect.height) &&\n        itemRect.bottom > dragRect.top &&\n        itemRect.left < (dragRect.left + dragRect.width) &&\n        itemRect.right > dragRect.left\n      ) {\n        this._selectedIndicies[index] = true;\n      } else {\n        delete this._selectedIndicies[index];\n      }\n    }\n\n    for (let index in this._selectedIndicies) {\n      if (this._selectedIndicies.hasOwnProperty(index)) {\n        selection.setIndexSelected(Number(index), true, false);\n      }\n    }\n\n    selection.setChangeEvents(true);\n  }\n}\n\n"],"sourceRoot":"/src"}