{"version":3,"sources":["components/Spinner/Spinner.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,8BAA2C,iBAAiB,CAAC,CAAA;AAC7D,oBAAuB,qBAAqB,CAAC,CAAA;AAC7C,oBAAoB,qBAAqB,CAAC,CAAA;AAC1C,QAAO,gBAAgB,CAAC,CAAA;AAExB,IAAM,YAAY,GAAG,CAAC,CAAC;AACvB,IAAM,iBAAiB,GAAG,EAAE,CAAC;AAC7B,IAAM,kBAAkB,GAAG,EAAE,CAAC;AAC9B,IAAM,iBAAiB,GAAG,KAAK,CAAC;AAChC,IAAM,kBAAkB,GAAG,GAAG,CAAC;AAE/B;IAA6B,2BAAmC;IAAhE;QAA6B,8BAAmC;IAwChE,CAAC;IAnCQ,wBAAM,GAAb;QACE,IAAA,eAA2C,EAArC,cAAI,EAAE,gBAAK,EAAE,wBAAS,CAAgB;QAC5C,IAAI,KAAK,GAAG,YAAM,EAAE,CAAC;QACrB,IAAI,UAAU,GAAW,IAAI,KAAK,2BAAW,CAAC,KAAK,GAAG,iBAAiB,GAAG,kBAAkB,CAAC;QAC7F,IAAI,UAAU,GAAW,IAAI,KAAK,2BAAW,CAAC,KAAK,GAAG,iBAAiB,GAAG,kBAAkB,CAAC;QAC7F,IAAI,MAAM,GAAG,UAAU,GAAG,UAAU,CAAC;QACrC,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC;QACxC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,GAAG,YAAY,CAAC;QACrB,IAAI,MAAM,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC;QACzC,IAAI,aAAa,GAAG,EAAE,CAAC;QAEvB,OAAO,CAAC,EAAE,EAAE,CAAC;YACX,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,GAAG,GAAG,CAAC;YAC/E,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,GAAG,GAAG,CAAC;YAC/E,IAAI,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC;YACzB,IAAI,KAAK,GAAG,EAAE,IAAI,EAAE,CAAC,KAAK,GAAG,CAAC,GAAG,MAAM,EAAE,KAAK,EAAE,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;YAEzG,KAAK,IAAI,IAAI,CAAC;YACd,aAAa,CAAC,IAAI,CAAC,qBAAC,GAAG,IAAC,SAAS,EAAC,mBAAmB,EAAC,GAAG,EAAG,CAAG,EAAC,KAAK,EAAG,KAAO,EAAG,CAAE,CAAC;QACvF,CAAC;QAED,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAG,SAAG,CAAC,YAAY,EAAE,SAAS,EAAE;YAC5C,mBAAmB,EAAE,IAAI,KAAK,2BAAW,CAAC,KAAK;SAChD,CAAG,GAEA,KAAK,IAAI,CACT,qBAAC,GAAG,IAAC,SAAS,EAAC,kBAAkB,EAAC,IAAI,EAAC,OAAO,GAAG,KAAO,CAAM,CAC7D,EAED,aAAe,CACb,CACP,CAAC;IACJ,CAAC;IAtCa,oBAAY,GAAkB;QAC1C,IAAI,EAAE,2BAAW,CAAC,MAAM;KACzB,CAAC;IAqCJ,cAAC;AAAD,CAxCA,AAwCC,CAxC4B,KAAK,CAAC,SAAS,GAwC3C;AAxCY,eAAO,UAwCnB,CAAA","file":"components/Spinner/Spinner.js","sourcesContent":["import * as React from 'react';\nimport { ISpinnerProps, SpinnerType } from './Spinner.Props';\nimport { getRTL } from '../../utilities/rtl';\nimport { css } from '../../utilities/css';\nimport './Spinner.scss';\n\nconst CIRCLE_COUNT = 8;\nconst PARENT_SIZE_LARGE = 28;\nconst PARENT_SIZE_NORMAL = 20;\nconst OFFSET_SIZE_LARGE = 0.179;\nconst OFFSET_SIZE_NORMAL = 0.2;\n\nexport class Spinner extends React.Component<ISpinnerProps, any> {\n  public static defaultProps: ISpinnerProps = {\n    type: SpinnerType.normal\n  };\n\n  public render() {\n    let { type, label, className } = this.props;\n    let isRTL = getRTL();\n    let parentSize: number = type === SpinnerType.large ? PARENT_SIZE_LARGE : PARENT_SIZE_NORMAL;\n    let offsetSize: number = type === SpinnerType.large ? OFFSET_SIZE_LARGE : OFFSET_SIZE_NORMAL;\n    let offset = parentSize * offsetSize;\n    let step = (2 * Math.PI) / CIRCLE_COUNT;\n    let angle = 0;\n    let i = CIRCLE_COUNT;\n    let radius = (parentSize - offset) * 0.5;\n    let circleObjects = [];\n\n    while (i--) {\n      let x = Math.round(parentSize * 0.5 + radius * Math.cos(angle)) - offset * 0.5;\n      let y = Math.round(parentSize * 0.5 + radius * Math.sin(angle)) - offset * 0.5;\n      let size = offset + 'px';\n      let style = { left: !isRTL ? x : 'auto', right: !isRTL ? 'auto' : x, top: y, width: size, height: size };\n\n      angle += step;\n      circleObjects.push(<div className='ms-Spinner-circle' key={ i } style={ style } /> );\n    }\n\n    return (\n      <div className={ css('ms-Spinner', className, {\n        'ms-Spinner--large': type === SpinnerType.large\n      }) }>\n\n        { label && (\n          <div className='ms-Spinner-label' role='alert'>{ label }</div>\n        ) }\n\n        { circleObjects }\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"/src"}