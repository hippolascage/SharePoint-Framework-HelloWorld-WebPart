{"version":3,"sources":["components/ProgressIndicator/ProgressIndicator.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAE/B,oBAAoB,qBAAqB,CAAC,CAAA;AAC1C,QAAO,0BAA0B,CAAC,CAAA;AAElC,sDAAsD;AACtD,mDAAmD;AACnD,IAAM,cAAc,GAAG,IAAI,CAAC;AAE5B;IAAuC,qCAA6C;IAApF;QAAuC,8BAA6C;IA+BpF,CAAC;IAxBQ,kCAAM,GAAb;QACE,IAAA,eAAwD,EAAlD,gBAAK,EAAE,4BAAW,EAAE,oCAAe,CAAgB;QAEzD,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,eAAe,GAAG,GAAG,CAAC,CAAC,CAAC;QAEpE,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,sBAAsB,GACnC,qBAAC,GAAG,IAAC,SAAS,EAAC,+BAA+B,GAAG,KAAO,CAAM,EAC9D,qBAAC,GAAG,IAAC,SAAS,EAAC,mCAAmC,GAChD,qBAAC,GAAG,IAAC,SAAS,EAAC,oCAAoC,EAAO,EAC1D,qBAAC,GAAG,IAAC,SAAS,EAAG,SAAG,CAAC,kCAAkC,EAAE;YACrD,kBAAkB,EAAE,eAAe,GAAG,cAAc;SACrD,CAAE,EACH,KAAK,EAAG,EAAE,KAAK,EAAE,eAAe,GAAG,GAAG,EAAI,EAC1C,IAAI,EAAC,aAAa,GAClB,aAAa,GAAC,GAAG,GACjB,aAAa,GAAC,KAAK,GACnB,aAAa,GAAG,eAAe,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAI,EAClD,CACF,EACN,qBAAC,GAAG,IAAC,SAAS,EAAC,sCAAsC,GAAG,WAAa,CAAM,CACvE,CACP,CAAC;IACJ,CAAC;IA7Ba,8BAAY,GAAG;QAC3B,KAAK,EAAE,EAAE;QACT,WAAW,EAAE,EAAE;QACf,eAAe,EAAE,CAAC;KACnB,CAAC;IA0BJ,wBAAC;AAAD,CA/BA,AA+BC,CA/BsC,KAAK,CAAC,SAAS,GA+BrD;AA/BY,yBAAiB,oBA+B7B,CAAA","file":"components/ProgressIndicator/ProgressIndicator.js","sourcesContent":["import * as React from 'react';\nimport { IProgressIndicatorProps } from './ProgressIndicator.Props';\nimport { css } from '../../utilities/css';\nimport './ProgressIndicator.scss';\n\n// if the percentComplete is near 0, don't animate it.\n// This prevents animations on reset to 0 scenarios\nconst ZERO_THRESHOLD = 0.01;\n\nexport class ProgressIndicator extends React.Component<IProgressIndicatorProps, any> {\n  public static defaultProps = {\n    title: '',\n    description: '',\n    percentComplete: 0\n  };\n\n  public render() {\n    let { title, description, percentComplete } = this.props;\n\n    percentComplete = Math.min(100, Math.max(0, percentComplete * 100));\n\n    return (\n      <div className='ms-ProgressIndicator'>\n        <div className='ms-ProgressIndicator-itemName'>{ title }</div>\n        <div className='ms-ProgressIndicator-itemProgress'>\n          <div className='ms-ProgressIndicator-progressTrack'></div>\n          <div className={ css('ms-ProgressIndicator-progressBar', {\n              'smoothTransition': percentComplete > ZERO_THRESHOLD\n            })}\n            style={ { width: percentComplete + '%' } }\n            role='progressbar'\n            aria-valuemin='0'\n            aria-valuemax='100'\n            aria-valuenow={ percentComplete.toFixed().toString() }>\n          </div>\n        </div>\n        <div className='ms-ProgressIndicator-itemDescription'>{ description }</div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"/src"}