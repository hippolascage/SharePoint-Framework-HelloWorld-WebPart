{"version":3,"sources":["components/Dialog/Dialog.Props.ts"],"names":[],"mappings":";AAkEA,WAAY,UAAU;IACpB,sBAAsB;IACtB,+CAAM,CAAA;IACN,sCAAsC;IACtC,yDAAW,CAAA;IACX,gEAAgE;IAChE,6CAAK,CAAA;AACP,CAAC,EAPW,kBAAU,KAAV,kBAAU,QAOrB;AAPD,IAAY,UAAU,GAAV,kBAOX,CAAA","file":"components/Dialog/Dialog.Props.js","sourcesContent":["import * as React from 'react';\nimport { Dialog } from './Dialog';\nimport { IWithResponsiveModeState } from '../../utilities/decorators/withResponsiveMode';\nimport { IAccessiblePopupProps } from '../../common/IAccessiblePopupProps';\n\nexport interface IDialogProps extends React.Props<Dialog>, IWithResponsiveModeState, IAccessiblePopupProps {\n  /**\n  * Whether the dialog is displayed.\n  * @default false\n  */\n  isOpen?: boolean;\n\n  /**\n  * The type of Dialog to display.\n  * @default DialogType.normal\n  */\n  type?: DialogType;\n\n  /**\n  * Whether the overlay is dark themed.\n  * @default true\n  */\n  isDarkOverlay?: boolean;\n\n  /**\n  * A callback function for when the Dialog is dismissed from the close button or light dismiss.\n  */\n  onDismiss?: (ev?: React.MouseEvent) => any;\n\n  /**\n  * The title text to display at the top of the dialog.\n  */\n  title?: string;\n\n  /**\n  * The subtext to display in the dialog.\n  */\n  subText?: string;\n\n  /**\n  * Whether the dialog can be light dismissed by clicking outside the dialog (on the overlay).\n  * @default false\n  */\n  isBlocking?: boolean;\n\n  /**\n   * Optional class name to be added to the root class\n   */\n  className?: string;\n\n  /**\n  * Optional override for container class\n  */\n  containerClassName?: string;\n\n  /**\n  * Optional override content class\n  */\n  contentClassName?: string;\n\n  /**\n   * A callback function for when the Dialog content is mounted on the overlay layer\n   */\n  onLayerMounted?: () => void;\n}\n\nexport enum DialogType {\n  /** Standard dialog */\n  normal,\n  /** Dialog with large header banner */\n  largeHeader,\n  /** Dialog with an 'x' close button in the upper-right corner */\n  close\n}"],"sourceRoot":"/src"}