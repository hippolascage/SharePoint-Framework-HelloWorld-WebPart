{"version":3,"sources":["components/Dialog/Dialog.tsx"],"names":[],"mappings":"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","file":"components/Dialog/Dialog.js","sourcesContent":["import * as React from 'react';\nimport { FocusTrapZone } from '../FocusTrapZone/index';\nimport { IDialogProps, DialogType } from './Dialog.Props';\nimport { Overlay } from '../../Overlay';\nimport { Layer } from '../../Layer';\nimport { DialogFooter } from './DialogFooter';\nimport { css } from '../../utilities/css';\nimport { Popup } from '../Popup/index';\nimport { withResponsiveMode, ResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\nimport { getId } from '../../utilities/object';\nimport './Dialog.scss';\n\n// @TODO - need to add animations, pending Fabric Team + Coulton work\n// @TODO - need to change this to a panel whenever the breakpoint is under medium (verify the spec)\n\n@withResponsiveMode\nexport class Dialog extends React.Component<IDialogProps, any> {\n\n  public static defaultProps: IDialogProps = {\n    isOpen: false,\n    type: DialogType.normal,\n    isDarkOverlay: true,\n    isBlocking: false,\n    className: '',\n    containerClassName: '',\n    contentClassName: ''\n  };\n\n  constructor(props: IDialogProps) {\n    super(props);\n\n    this.state = {\n      id: getId('Dialog'),\n    };\n  }\n\n  public render() {\n    let { isOpen, type, isDarkOverlay, onDismiss, title, subText, isBlocking, responsiveMode, elementToFocusOnDismiss, ignoreExternalFocusing, forceFocusInsideTrap, firstFocusableSelector, closeButtonAriaLabel, onLayerMounted } = this.props;\n    let { id } = this.state;\n    // @TODO - the discussion on whether the Dialog contain a property for rendering itself is still being discussed\n    if (!isOpen) {\n      return null;\n    }\n\n    let subTextContent;\n    const dialogClassName = css('ms-Dialog', this.props.className, {\n      'ms-Dialog--lgHeader': type === DialogType.largeHeader,\n      'ms-Dialog--close': type === DialogType.close\n    });\n    let groupings = this._groupChildren();\n\n    if (subText) {\n      subTextContent = <p className='ms-Dialog-subText' id={ id + '-subText'}>{ subText }</p>;\n    }\n\n    // @temp tuatology - Will adjust this to be a panel at certain breakpoints\n    if (responsiveMode >= ResponsiveMode.small) {\n      return (\n        <Layer onLayerMounted={ onLayerMounted }>\n          <Popup\n            className= { dialogClassName }\n            role='dialog'\n            ariaLabelledBy={ title ? id + '-title' : '' }\n            ariaDescribedBy={ subText ? id + '-subText' : '' }\n            onDismiss={ onDismiss }\n            >\n            <div className={ dialogClassName }>\n              <Overlay isDarkThemed={ isDarkOverlay } onClick={ isBlocking ? null : onDismiss } />\n              <FocusTrapZone\n                className={ css('ms-Dialog-main', this.props.containerClassName) }\n                elementToFocusOnDismiss={ elementToFocusOnDismiss }\n                isClickableOutsideFocusTrap={ !isBlocking }\n                ignoreExternalFocusing={ ignoreExternalFocusing }\n                forceFocusInsideTrap={ forceFocusInsideTrap }\n                firstFocusableSelector={ firstFocusableSelector }>\n                <button className='ms-Dialog-button ms-Dialog-button--close'\n                  onClick={ onDismiss }\n                  aria-label= { closeButtonAriaLabel }>\n                  <i className='ms-Icon ms-Icon--x'></i>\n                </button>\n                <div className='ms-Dialog-header'>\n                  <p className='ms-Dialog-title' id={ id + '-title'}>{ title }</p>\n                </div>\n                <div className='ms-Dialog-inner'>\n                  <div className={ css('ms-Dialog-content', this.props.contentClassName) }>\n                    { subTextContent }\n                    { groupings.contents }\n                  </div>\n                  { groupings.footers }\n                </div>\n              </FocusTrapZone>\n            </div>\n          </Popup>\n        </Layer>\n      );\n    }\n  }\n\n  // @TODO - typing the footers as an array of DialogFooter is difficult because\n  // casing \"child as DialogFooter\" causes a problem because\n  // \"Neither type 'ReactElement<any>' nor type 'DialogFooter' is assignable to the other.\"\n  private _groupChildren(): { footers: any[]; contents: any[]; } {\n\n    let groupings: { footers: any[]; contents: any[]; } = {\n      footers: [],\n      contents: []\n    };\n\n    React.Children.map(this.props.children, child => {\n      if (typeof child === 'object' && child.type === DialogFooter) {\n        groupings.footers.push(child);\n      } else {\n        groupings.contents.push(child);\n      }\n    });\n\n    return groupings;\n  }\n}\n"],"sourceRoot":"/src"}