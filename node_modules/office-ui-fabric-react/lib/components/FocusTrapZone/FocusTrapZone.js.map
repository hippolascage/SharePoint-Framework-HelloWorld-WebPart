{"version":3,"sources":["components/FocusTrapZone/FocusTrapZone.tsx"],"names":[],"mappings":"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","file":"components/FocusTrapZone/FocusTrapZone.js","sourcesContent":["import * as React from 'react';\nimport { KeyCodes } from '../../utilities/KeyCodes';\nimport { EventGroup } from '../../utilities/eventGroup/EventGroup';\nimport { IFocusTrapZone, IFocusTrapZoneProps } from './FocusTrapZone.Props';\nimport {\n  getFirstFocusable,\n  getLastFocusable,\n  getNextElement\n} from '../../utilities/focus';\n\nexport class FocusTrapZone extends React.Component<IFocusTrapZoneProps, {}> implements IFocusTrapZone {\n\n  public refs: {\n    [key: string]: React.ReactInstance,\n    root: HTMLElement\n  };\n\n  private _previouslyFocusedElement: HTMLElement;\n  private _events: EventGroup;\n\n  constructor(props) {\n    super(props);\n\n    this._onKeyboardHandler = this._onKeyboardHandler.bind(this);\n    this._events = new EventGroup(this);\n  }\n\n  public componentDidMount() {\n    let { elementToFocusOnDismiss, isClickableOutsideFocusTrap = false, forceFocusInsideTrap = true } = this.props;\n\n    this._previouslyFocusedElement = elementToFocusOnDismiss ? elementToFocusOnDismiss : document.activeElement as HTMLElement;\n    this.focus();\n\n    if (forceFocusInsideTrap) {\n        this._events.on(window, 'focus', this._forceFocusInTrap, true);\n    }\n\n    if (!isClickableOutsideFocusTrap) {\n      this._events.on(window, 'click', this._forceClickInTrap, true);\n    }\n  }\n\n  public componentWillUnmount() {\n    let { ignoreExternalFocusing } = this.props;\n    this._events.dispose();\n\n    if (!ignoreExternalFocusing && this._previouslyFocusedElement) {\n      this._previouslyFocusedElement.focus();\n    }\n  }\n\n  public render() {\n    let { className, ariaLabelledBy } = this.props;\n\n    return (\n      <div\n        { ...this.props as any }\n        className={ className }\n        ref='root'\n        aria-labelledby={ ariaLabelledBy }\n        onKeyDown={ this._onKeyboardHandler }>\n        { this.props.children }\n      </div>\n    );\n  }\n\n/**\n * Need to expose this method in case of popups since focus needs to be set when popup is opened\n **/\n  public focus() {\n    let { firstFocusableSelector } = this.props;\n    let _firstFocusableChild;\n    let root = this.refs.root;\n\n    if (firstFocusableSelector) {\n      _firstFocusableChild = root.querySelector('.' + firstFocusableSelector);\n    } else {\n        _firstFocusableChild = getNextElement(root, root.firstChild as HTMLElement, true, false, false, true);\n    }\n    if (_firstFocusableChild) {\n        _firstFocusableChild.focus();\n    }\n  }\n\n  private _onKeyboardHandler(ev: React.KeyboardEvent) {\n    if (ev.which !== KeyCodes.tab) {\n      return;\n    }\n\n    let { root } = this.refs;\n\n    const _firstFocusableChild = getFirstFocusable(root, root.firstChild as HTMLElement, true);\n    const _lastFocusableChild = getLastFocusable(root, root.lastChild as HTMLElement, true);\n\n    if (ev.shiftKey && _firstFocusableChild === ev.target) {\n      _lastFocusableChild.focus();\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else if (!ev.shiftKey && _lastFocusableChild === ev.target) {\n      _firstFocusableChild.focus();\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  }\n\n  private _forceFocusInTrap(ev: FocusEvent) {\n    const focusedElement = document.activeElement;\n\n    if (!this.refs.root.contains(focusedElement)) {\n      this.focus();\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  }\n\n private _forceClickInTrap(ev: MouseEvent) {\n    const clickedElement = ev.target as HTMLElement;\n\n    if (clickedElement && !this.refs.root.contains(clickedElement)) {\n      this.focus();\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  }\n}"],"sourceRoot":"/src"}