{"version":3,"sources":["components/Panel/Panel.tsx"],"names":[],"mappings":"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","file":"components/Panel/Panel.js","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport * as React from 'react';\n/* tslint:enable:no-unused-variable */\n\nimport { BaseComponent } from '../../common/BaseComponent';\nimport { IPanelProps, PanelType } from './Panel.Props';\nimport { Layer } from '../Layer/Layer';\nimport { Overlay } from '../../Overlay';\nimport { Popup } from '../Popup/index';\nimport { css } from '../../utilities/css';\nimport { getId } from '../../utilities/object';\nimport { getRTL } from '../../utilities/rtl';\nimport './Panel.scss';\n\nexport interface IPanelState {\n  isOpen?: boolean;\n  isAnimatingOpen?: boolean;\n  isAnimatingClose?: boolean;\n  id?: string;\n}\n\nexport class Panel extends BaseComponent<IPanelProps, IPanelState> {\n\n  public static defaultProps: IPanelProps = {\n    isOpen: false,\n    hasCloseButton: true,\n    type: PanelType.smallFixedFar,\n  };\n\n  constructor(props: IPanelProps) {\n    super(props);\n\n    this._onPanelClick = this._onPanelClick.bind(this);\n    this._onPanelRef = this._onPanelRef.bind(this);\n\n    this.state = {\n      isOpen: !!props.isOpen,\n      isAnimatingOpen: props.isOpen,\n      isAnimatingClose: false,\n      id: getId('Panel')\n    };\n  }\n\n  public componentDidMount() {\n    if (this.state.isOpen) {\n      this._async.setTimeout(() => {\n        this.setState({\n          isAnimatingOpen: false\n        });\n      }, 2000);\n    }\n  }\n\n  public componentWillReceiveProps(newProps: IPanelProps) {\n    if (newProps.isOpen !== this.state.isOpen) {\n      this.setState({\n        isOpen: newProps.isOpen,\n        isAnimatingOpen: newProps.isOpen ? true : false,\n        isAnimatingClose: newProps.isOpen ? false : true\n      });\n    }\n  }\n\n  public render() {\n    let { children, className = '', type, hasCloseButton, isLightDismiss, headerText, closeButtonAriaLabel, headerClassName = ''  } = this.props;\n    let { isOpen, isAnimatingOpen, isAnimatingClose, id } = this.state;\n    let isLeft = type === PanelType.smallFixedNear ? true : false;\n    let isRTL = getRTL();\n    let isOnRightSide = isRTL ? isLeft : !isLeft;\n    const headerTextId = id + '-headerText';\n\n    let pendingCommandBarContent = '';\n\n    let header;\n    if (headerText) {\n      header = <p className={ css('ms-Panel-headerText', headerClassName ) } id={ headerTextId }>{ headerText }</p>;\n    }\n\n    let closeButton;\n    if (hasCloseButton) {\n      closeButton = <button className='ms-Panel-closeButton ms-PanelAction-close' onClick={ this._onPanelClick }  aria-label={ closeButtonAriaLabel } data-is-visible={ true }>\n        <i className='ms-Panel-closeIcon ms-Icon ms-Icon--x'></i>\n      </button>;\n    }\n\n    return (\n      <Layer>\n        <Popup\n          role='dialog'\n          ariaLabelledBy={ headerText ? headerTextId : undefined }\n          onDismiss={ this.props.onDismiss }>\n          <div\n            ref={ this._onPanelRef }\n            className={\n              css('ms-Panel', className, {\n                'ms-Panel--openLeft': !isOnRightSide,  // because the RTL animations are not being used, we need to set a class\n                'ms-Panel--openRight': isOnRightSide,  // because the RTL animations are not being used, we need to set a class\n                'is-open': isOpen,\n                'ms-Panel-animateIn': isAnimatingOpen,\n                'ms-Panel-animateOut': isAnimatingClose,\n                'ms-Panel--smFluid': type === PanelType.smallFluid,\n                'ms-Panel--smLeft': type === PanelType.smallFixedNear,\n                'ms-Panel--sm': type === PanelType.smallFixedFar,\n                'ms-Panel--md': type === PanelType.medium,\n                'ms-Panel--lg': type === PanelType.large || type === PanelType.largeFixed,\n                'ms-Panel--fixed': type === PanelType.largeFixed,\n                'ms-Panel--xl': type === PanelType.extraLarge,\n              })\n            }\n            >\n            <Overlay\n              isDarkThemed={ true }\n              onClick={ isLightDismiss ? this._onPanelClick : null }\n              />\n            <div className='ms-Panel-main'>\n              <div className='ms-Panel-commands' data-is-visible={ true } >\n                { pendingCommandBarContent }\n                { closeButton }\n              </div>\n              <div className='ms-Panel-contentInner'>\n                { header }\n                <div className='ms-Panel-content'>\n                  { children }\n                </div>\n              </div>\n            </div>\n          </div>\n        </Popup>\n      </Layer>\n\n    );\n  }\n\n  public dismiss() {\n    if (this.state.isOpen) {\n      this.setState({\n        isAnimatingOpen: false,\n        isAnimatingClose: true\n      });\n    }\n  }\n\n  private _onPanelClick() {\n    this.dismiss();\n  }\n\n  private _onPanelRef(ref: HTMLDivElement) {\n    if (ref) {\n      this._events.on(ref, 'animationend', this._onAnimationEnd);\n    } else {\n      this._events.off();\n    }\n  }\n\n  private _onAnimationEnd(ev: AnimationEvent) {\n    if (ev.animationName.indexOf('In') > -1) {\n      this.setState({\n        isOpen: true,\n        isAnimatingOpen: false\n      });\n    }\n    if (ev.animationName.indexOf('Out') > -1) {\n      this.setState({\n        isOpen: false,\n        isAnimatingClose: false\n      });\n\n      if (this.props.onDismiss) {\n        this.props.onDismiss();\n      }\n    }\n  }\n}\n"],"sourceRoot":"/src"}