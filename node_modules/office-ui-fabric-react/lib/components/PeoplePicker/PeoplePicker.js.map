{"version":3,"sources":["components/PeoplePicker/PeoplePicker.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,mCAAqD,sBAAsB,CAAC,CAAA;AAC5E,wBAKO,eAAe,CAAC,CAAA;AACvB,wBAGO,eAAe,CAAC,CAAA;AACvB,uBAAuB,wBAAwB,CAAC,CAAA;AAChD,0BAA0B,iBAAiB,CAAC,CAAA;AAC5C,oBAAoB,qBAAqB,CAAC,CAAA;AAC1C,yBAAyB,0BAA0B,CAAC,CAAA;AACpD,2BAA2B,uCAAuC,CAAC,CAAA;AACnE,QAAO,qBAAqB,CAAC,CAAA;AAU7B,IAAM,aAAa,GAAG,CAAC,CAAC,CAAC;AAEzB;IAAkC,gCAAuD;IAwBvF,sBAAY,KAAyB;QACnC,kBAAM,KAAK,CAAC,CAAC;QALP,sBAAiB,GAAW,CAAC,CAAC;QAE9B,yBAAoB,GAAW,aAAa,CAAC;QAInD,IAAI,CAAC,OAAO,GAAG,IAAI,uBAAU,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjE,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3E,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3E,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrE,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAM,gBAAgB,GAAoB,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,GAAG,EAAE,CAAC;QACvF,IAAI,CAAC,KAAK,GAAG;YACX,QAAQ,EAAE,KAAK;YACf,WAAW,EAAE,KAAK;YAClB,eAAe,EAAE,EAAE;YACnB,4BAA4B,EAAE,aAAa;YAC3C,gBAAgB,EAAE,gBAAgB;SACnC,CAAC;IACJ,CAAC;IAEM,wCAAiB,GAAxB;QACE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAEM,2CAAoB,GAA3B;QACE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAEM,yCAAkB,GAAzB;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACnB,wCAAW,CAAgB;QAEjC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,iBAAiB,KAAK,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC;QACxC,CAAC;QACD,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,MAAM,CAAC;QAE5C,wFAAwF;QACxF,mFAAmF;QACnF,wEAAwE;QACxE,IAAM,oBAAoB,GAAW,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC;QACxE,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,KAAK,aAAa,IAAI,IAAI,CAAC,oBAAoB,IAAI,oBAAoB,CAAC,CAAC,CAAC;YACrG,EAAE,CAAC,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,GAAG,CAAC,CAAC;gBACpD,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAiB,CAAC,KAAK,EAAE,CAAC;YAC5E,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,oBAAoB,GAAG,aAAa,CAAC;gBAC1C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAChC,CAAC;QACH,CAAC;IACH,CAAC;IAEM,6BAAM,GAAb;QAAA,iBAmCC;QAlCO,0BAAI,CAAgB;QAC1B,IAAI,WAAW,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5C,IAAI,aAAa,GAAG,IAAI,KAAK,qCAAgB,CAAC,UAAU,GAAG,IAAI,CAAC,iCAAiC,EAAE,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAElI,gCAAgC;QAChC,mEAAmE;QACnE,IAAI,gBAAgB,GAAG,IAAI,KAAK,qCAAgB,CAAC,UAAU,GAAG,IAAI,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACpG,IAAI,UAAU,GAAG,IAAI,KAAK,qCAAgB,CAAC,UAAU,GAAG,IAAI,CAAC,mCAAmC,EAAE,GAAG,IAAI,CAAC;QAE1G,IAAI,SAAS,GAAG,SAAG,CAAE,iBAAiB,EAAE;YACtC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;YAChC,0BAA0B,EAAE,IAAI,KAAK,qCAAgB,CAAC,OAAO;YAC7D,8BAA8B,EAAE,IAAI,KAAK,qCAAgB,CAAC,UAAU;SACrE,CAAC,CAAC;QAEH,MAAM,CAAC,CACL,qBAAC,GAAG,IACF,SAAS,EAAG,SAAW,EACvB,GAAG,EAAC,MAAM,EACV,GAAG,EAAC,MAAM,GAEV,qBAAC,GAAG,IAAC,SAAS,EAAC,2BAA2B,EAAC,GAAG,EAAG,UAAC,SAAS,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,UAAU,GAAG,SAAS,EAAhC,CAAkC,EAAC,SAAS,EAAG,IAAI,CAAC,mBAAqB,GACvI,oBAAC,qBAAS,GACR,sBAAsB,EAAG,IAAI,CAAC,uBAAyB,EACvD,GAAG,EAAG,UAAC,SAAS,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,EAA/B,CAAiC,GAEpD,gBAAkB,EAClB,WAAa,CACL,CACR,EACJ,aAAe,EACf,UAAY,CACV,CACP,CAAC;IACJ,CAAC;IAEO,0CAAmB,GAA3B,UAA4B,EAAuB;QACjD,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACjB,yBAAyB;YACzB,KAAK,mBAAQ,CAAC,SAAS,CAAC;YACxB,KAAK,mBAAQ,CAAC,GAAG;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,KAAK,aAAa,CAAC,CAAC,CAAC;oBAChD,IAAI,CAAC,sBAAsB,CAAE,IAAI,CAAC,oBAAoB,CAAE,CAAC;oBACzD,EAAE,CAAC,eAAe,EAAE,CAAC;oBACrB,EAAE,CAAC,cAAc,EAAE,CAAC;gBACtB,CAAC;QACL,CAAC;IACH,CAAC;IAED;;OAEG;IACK,8CAAuB,GAA/B,UAAgC,OAAoB,EAAE,EAAoB;QACxE,oCAAoC;QACpC,qGAAqG;QACrG,IAAI,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IAED;;OAEG;IACK,qCAAc,GAAtB,UAAuB,EAAE;QACvB,6DAA6D;QAC7D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,CAAC;eAChD,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,CAAE,CAAC,CAAC,CAAC;YAC1D,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC;IACH,CAAC;IAED;;OAEG;IACK,sCAAe,GAAvB,UAAwB,EAAoB;QAC1C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAqB,CAAC;eACxD,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAqB,CAAE,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC;IACH,CAAC;IAED;;OAEG;IACK,4CAAqB,GAA7B,UAA8B,KAAK;QAC3B,8DAAsB,CAAgB;QAC5C,IAAI,CAAC,QAAQ,CAAC;YACZ,aAAa,EAAE,IAAI;SACpB,CAAC,CAAC;QACH,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,EAAE,CAAC,CAAC,OAAO,sBAAsB,KAAK,WAAW,CAAC,CAAC,CAAC;YAClD,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACtD,CAAC;IACH,CAAC;IAED;;OAEG;IACK,4CAAqB,GAA7B;QACE,IAAI,CAAC,QAAQ,CAAC;YACZ,UAAU,EAAE,IAAI;YAChB,8BAA8B,EAAE,aAAa;SAC9C,CAAC,CAAC;QACH,IAAI,CAAC,wBAAwB,GAAG,SAAS,CAAC;IAC5C,CAAC;IAED;;OAEG;IACK,2CAAoB,GAA5B;QACE,IAAI,CAAC,QAAQ,CAAC;YACZ,UAAU,EAAE,KAAK;YACjB,aAAa,EAAE,KAAK;YACpB,8BAA8B,EAAE,aAAa;SAC9C,CAAC,CAAC;QACH,IAAI,CAAC,wBAAwB,GAAG,SAAS,CAAC;IAC5C,CAAC;IAED;;OAEG;IACK,8CAAuB,GAA/B,UAAgC,KAAK,EAAE,WAAW;QAC1C,sDAAkB,CAAgB;QACxC,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACvB,kBAAkB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;QACzC,CAAC;IACH,CAAC;IAED;;OAEG;IACK,gDAAyB,GAAjC,UAAkC,WAAW;QACnC,kDAAgB,CAAgB;QAChC,wCAAW,CAAgB;QACnC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YAChB,WAAW,CAAC,WAAW,CAAC,CAAC;QAC3B,CAAC;QAED,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC;YACZ,eAAe,EAAE,EAAE;YACnB,gBAAgB,EAAE,gBAAgB;SACnC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACnC,CAAC;IAED;;OAEG;IACK,sDAA+B,GAAvC;QACI,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;QAChD,EAAE,CAAC,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,WAAW,GAAG;gBAChB,aAAa,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;gBACrD,WAAW,EAAE,cAAc;gBAC3B,aAAa,EAAE,cAAc;aAC9B,CAAC;YACF,IAAI,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC;QAC9C,CAAC;IACL,CAAC;IAED;;OAEG;IACK,4CAAqB,GAA7B,UAA8B,EAAuB;QAC7C,0BAAI,CAAgB;QAC1B,IAAA,eAA+E,EAAvE,sBAAQ,EAAE,8DAA4B,EAAE,sCAAgB,CAAgB;QAEhF,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YAEjB,kBAAkB;YAClB,wEAAwE;YACxE,8EAA8E;YAC9E,KAAK,mBAAQ,CAAC,KAAK;gBACjB,EAAE,CAAC,CAAC,QAAQ,IAAI,4BAA4B,KAAK,aAAa,CAAC,CAAC,CAAC;oBAC7D,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;gBAClE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,+BAA+B,EAAE,CAAC;gBAC3C,CAAC;gBACD,KAAK,CAAC;YAER,mBAAmB;YACnB,2CAA2C;YAC3C,KAAK,mBAAQ,CAAC,MAAM;gBAClB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACb,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC9B,CAAC;gBACD,KAAK,CAAC;YAER,sBAAsB;YACtB,2CAA2C;YAC3C,uEAAuE;YACvE,gCAAgC;YAChC,KAAK,mBAAQ,CAAC,SAAS;gBACrB,yDAAyD;gBACzD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC7C,MAAM,CAAC,CAAC,uBAAuB;gBACjC,CAAC;gBAED,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACb,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC9B,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,KAAK,qCAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;oBAC/E,IAAI,KAAK,GAAG,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;oBACvC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAiB,CAAC,KAAK,EAAE,CAAC;gBACxD,CAAC;gBACD,KAAK,CAAC;YAER,eAAe;YACf,qEAAqE;YACrE,2FAA2F;YAC3F,KAAK,mBAAQ,CAAC,EAAE;gBACd,EAAE,CAAC,CAAC,QAAQ,IAAI,4BAA4B,KAAK,aAAa,CAAC,CAAC,CAAC;oBAC/D,IAAI,CAAC,6BAA6B,CAAC,4BAA4B,GAAG,CAAC,CAAC,CAAC;gBACvE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,CAAC,CAAC,uBAAuB;gBACjC,CAAC;gBACD,KAAK,CAAC;YAER,iBAAiB;YACjB,kDAAkD;YAClD,qEAAqE;YACrE,KAAK,mBAAQ,CAAC,IAAI;gBAChB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACb,IAAI,CAAC,6BAA6B,CAAC,4BAA4B,GAAG,CAAC,CAAC,CAAC;gBACvE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,qBAAqB,EAAE,CAAC;oBAC7B,IAAI,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC;gBACxC,CAAC;gBACD,KAAK,CAAC;YAER,iBAAiB;YACjB,yDAAyD;YACzD,2FAA2F;YAC3F,KAAK,mBAAQ,CAAC,IAAI;gBAChB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC7C,EAAE,CAAC,eAAe,EAAE,CAAC;gBACvB,CAAC;gBACD,MAAM,CAAC,CAAC,uBAAuB;YAEjC,gBAAgB;YAChB,wEAAwE;YACxE,mCAAmC;YACnC,KAAK,mBAAQ,CAAC,GAAG;gBACf,uCAAuC;gBACvC,EAAE,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAChB,MAAM,CAAC;gBACT,CAAC;gBACD,EAAE,CAAC,CAAC,QAAQ,IAAI,4BAA4B,KAAK,aAAa,CAAC,CAAC,CAAC;oBAC/D,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;gBAChE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,CAAC,CAAC,uBAAuB;gBACjC,CAAC;gBACD,KAAK,CAAC;YAER,gCAAgC;YAChC,8EAA8E;YAC9E,KAAK,mBAAQ,CAAC,SAAS,CAAC;YACxB,KAAK,mBAAQ,CAAC,KAAK;gBACjB,IAAI,CAAC,+BAA+B,EAAE,CAAC;gBACvC,KAAK,CAAC;YAER,4BAA4B;YAC5B,gFAAgF;YAChF,+CAA+C;YAC/C;gBACE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACd,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAE/B,CAAC;gBACD,MAAM,CAAC,CAAC,uBAAuB;QACnC,CAAC;QAED,sEAAsE;QACtE,EAAE,CAAC,eAAe,EAAE,CAAC;QACrB,EAAE,CAAC,cAAc,EAAE,CAAC;IACtB,CAAC;IAED;;OAEG;IACK,oDAA6B,GAArC,UAAsC,KAAa;QAC3C,0EAA4B,CAAgB;QAC5C,wCAAW,CAAgB;QAEjC,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3B,0DAA0D;YAC1D,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;QAC/D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,KAAK,GAAG,aAAa,CAAC;QACxB,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,KAAK,4BAA4B,CAAC,CAAC,CAAC;YAC3C,2BAA2B;YAC3B,IAAI,CAAC,QAAQ,CAAC;gBACZ,4BAA4B,EAAE,KAAK;aACpC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED;;;OAGG;IACK,gDAAyB,GAAjC;QACQ,0DAAoB,CAAgB;QAC1C,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC;YACZ,eAAe,EAAE,SAAS;SAC3B,CAAC,CAAC;QACH,EAAE,CAAC,CAAC,OAAO,oBAAoB,KAAK,WAAW,CAAC,CAAC,CAAC;YAChD,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAClC,CAAC;IACH,CAAC;IAED;;;OAGG;IACK,wCAAiB,GAAzB;QACE,IAAM,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC;QAC5D,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,EAAE,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;YACzB,IAAM,iBAAiB,GAAG,oBAAoB,CAAC,SAAS,CAAC;YACzD,IAAM,cAAc,GAAG,oBAAoB,CAAC,YAAY,CAAC;YACzD,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC;YAC1D,IAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC;YAC9D,MAAM,GAAG,UAAU,CAAC;YAEpB,uBAAuB;YACvB,IAAI,gBAAgB,GAAG,CAAC,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,iBAAiB,GAAG,cAAc,CAAC,CAAC;YACzF,EAAE,CAAC,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;gBACzB,MAAM,GAAG,UAAU,GAAG,gBAAgB,CAAC;YACzC,CAAC;YAED,qBAAqB;YACrB,IAAI,cAAc,GAAG,iBAAiB,GAAG,cAAc,CAAC;YACxD,EAAE,CAAC,CAAC,cAAc,GAAG,UAAW,CAAC,CAAC,CAAC;gBACjC,MAAM,GAAG,cAAc,CAAC;YAC1B,CAAC;QACH,CAAC;QACD,qBAAqB;QACrB,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,MAAM,CAAC;IAClD,CAAC;IAED;;OAEG;IACK,6CAAsB,GAA9B,UAA+B,KAAK;QAC1B,kDAAgB,CAAgB;QAChC,4CAAa,CAAgB;QACrC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAClB,aAAa,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;QACzC,CAAC;QAED,gBAAgB,CAAC,MAAM,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC;YACZ,gBAAgB,EAAE,gBAAgB;SACnC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACK,0DAAmC,GAA3C;QAAA,iBAsCC;QArCS,kDAAgB,CAAgB;QAChC,sEAA0B,CAAgB;QAClD,IAAI,KAAK,GAAG,gBAAgB,CAAC,MAAM,CAAC;QACpC,IAAI,SAAS,GAAG,SAAG,CAAC,0BAA0B,EAAE;YAC9C,WAAW,EAAE,KAAK,GAAG,CAAC;SACvB,CAAC,CAAC;QACH,IAAI,EAAE,GAAG,CAAC,CAAC;QAEX,MAAM,CAAC,qBAAC,GAAG,IAAC,SAAS,EAAG,SAAW,GAC/B,0BAA0B;YAC1B,qBAAC,GAAG,IAAC,SAAS,EAAC,gCAAgC,GAC7C,qBAAC,IAAI,IAAC,SAAS,EAAC,+BAA+B,GAC3C,eAAM,CAAC,0BAA0B,EAAE,KAAK,CAAG,CACxC,CACH,GAAG,qBAAC,GAAG,IAAC,SAAS,EAAC,qCAAqC,EAAM,EAErE,qBAAC,EAAE,IAAC,SAAS,EAAC,gCAAgC,GAC5C,oBAAC,qBAAS,QACN,gBAAgB,CAAC,GAAG,CAAE,UAAC,KAAK;YAC1B,MAAM,CAAC,CACL,qBAAC,EAAE,IAAC,SAAS,EAAC,gCAAgC,EAAC,GAAG,EAAE,EAAE,EAAG,GACvD,oBAAC,iBAAO,qBACD,KAAK,GACV,IAAI,EAAG,qBAAW,CAAC,KAAO,EAC1B,QAAQ,EAAG,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,GAAG,yBAAe,CAAC,MAAQ,GACrE,EACF,qBAAC,MAAM,IAAC,SAAS,EAAC,8BAA8B,EAAC,OAAO,EAAG;gBACvD,KAAI,CAAC,sBAAsB,CAAE,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAE,CAAC;YACnE,CAAE,GACA,qBAAC,CAAC,IAAC,SAAS,EAAC,oBAAoB,EAAK,CAC/B,CACN,CAAC,CAAC;QACX,CAAC,CACF,CACS,CACT,CACD,CAAC;IACT,CAAC;IAED;;;OAGG;IACK,8CAAuB,GAA/B;QAAA,iBAqBC;QApBC,IAAI,EAAE,GAAG,CAAC,CAAC;QACH,kDAAgB,CAAgB;QACxC,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAE,UAAC,KAAK;YACjC,IAAI,GAAG,GAAG,EAAE,EAAE,CAAC;YACf,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,yBAAyB,EAAC,GAAG,EAAG,SAAS,GAAG,GAAK,EAAC,GAAG,EAAE,GAAI,GAAC,oBAAoB,GAAE,GAAI,GAAC,iBAAiB,GAAE,IAAK,EAAC,QAAQ,EAAE,CAAC,CAAE,GAC1I,qBAAC,GAAG,IAAC,SAAS,EAAC,gCAAgC,GAC7C,oBAAC,iBAAO,qBACD,KAAK,GACV,IAAI,EAAG,qBAAW,CAAC,UAAY,EAC/B,QAAQ,EAAG,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,GAAG,yBAAe,CAAC,MAAQ,GACrE,EACF,qBAAC,MAAM,IAAC,SAAS,EAAC,+BAA+B,EAAC,QAAQ,EAAE,CAAC,CAAE,GAAC,iBAAiB,GAAE,KAAM,EAAC,OAAO,EAAG;gBAChG,KAAI,CAAC,sBAAsB,CAAE,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAE,CAAC;YACjE,CAAG,GACH,qBAAC,CAAC,IAAC,SAAS,EAAC,oBAAoB,EAAK,CAC/B,CACL,CACF,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACK,yCAAkB,GAA1B;QAAA,iBAYC;QAXC,MAAM,CAAC,CACL,qBAAC,KAAK,IACJ,SAAS,EAAC,6BAA6B,EACvC,IAAI,EAAC,MAAM,EACX,GAAG,EAAC,aAAa,EAAC,GAAG,EAAC,aAAa,GACnC,iBAAiB,GAAG,IAAM,EAC1B,OAAO,EAAG,cAAO,KAAI,CAAC,oBAAoB,GAAG,aAAa,CAAC,CAAA,CAAE,EAC7D,QAAQ,EAAG,IAAI,CAAC,yBAA2B,EAC3C,SAAS,EAAG,IAAI,CAAC,qBAAuB,EACxC,CACH,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,2CAAoB,GAA5B;QAAA,iBAmEC;QAlEC,IAAA,eASc,EATR,4BAAW,EACf,0CAAkB,EAClB,gCAAa,EACb,cAAI,EACJ,4BAAW,EACX,wCAAiB,EACjB,4CAAmB,EACnB,sCAAgB,EAChB,gCAAa,CACA;QACT,wCAAW,CAAgB;QAEjC,4EAA4E;QAC5E,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,IAAI,iBAAiB,GAAG,EAAE,CAAC;QAC3B,WAAW,CAAC,OAAO,CAAE,UAAC,OAAsB;YAC1C,iBAAiB,CAAC,IAAI,CAAC,KAAI,CAAC,uBAAuB,CAAE,OAAO,EAAE,YAAY,EAAE,CAAE,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;QACH,IAAI,aAAa,GAAG,CAChB,qBAAC,GAAG,IACF,SAAS,EAAC,6BAA6B,EACvC,GAAG,EAAE,aAAa,EAAG,GAErB,qBAAC,GAAG,IAAC,SAAS,EAAC,kCAAkC,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,kBAAkB,GAAG,aAAe,CAAM,EACvH,qBAAC,EAAE,IAAC,SAAS,EAAC,4BAA4B,GACtC,iBAAmB,CAClB,CACD,CACP,CAAC;QAEJ,IAAI,mBAAmB,GAAG,SAAG,CAAC,4BAA4B,EAAE;YAC1D,cAAc,EAAE,WAAW;YAC3B,0CAA0C,EAAE,CAAC,WAAW;SACzD,CAAC,CAAC;QACH,IAAI,yBAAyB,GAAG,SAAG,CAAC,+BAA+B,EAAE;YACnE,wCAAwC,EAAE,IAAI,KAAK,qCAAgB,CAAC,OAAO;SAC5E,CAAC,CAAC;QACH,IAAI,mBAAmB,GAAG,SAAG,CAAC,SAAS,EAAE;YACvC,iBAAiB,EAAE,WAAW;YAC9B,gBAAgB,EAAE,CAAC,WAAW;SAC/B,CAAC,CAAC;QACH,IAAI,UAAU,GAAG,aAAa,GAAG,CAC/B,qBAAC,GAAG,IAAC,SAAS,EAAG,mBAAqB,EAAC,OAAO,EAAG,WAAW,GAAG,IAAI,CAAC,qBAAqB,GAAG,IAAM,GAChG,qBAAC,MAAM,IAAC,SAAS,EAAG,yBAA2B,GAC3C,WAAW,GAAG,oBAAC,iBAAO,GAAC,IAAI,EAAG,qBAAW,CAAC,KAAO,EAAE;YACnD,qBAAC,GAAG,IAAC,SAAS,EAAC,gCAAgC,GAC7C,qBAAC,CAAC,IAAC,SAAS,EAAG,mBAAqB,EAAK,CAE5C,EACC,WAAW,GAAG,qBAAC,GAAG,IAAC,SAAS,EAAC,qCAAqC,GAAG,mBAAqB,CAAM,GAAG,IAAM,EAC3G,qBAAC,GAAG,IAAC,SAAS,EAAC,mCAAmC,GAAG,WAAW,GAAG,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,WAAW,GAAG,iBAAiB,GAAG,gBAAkB,CAAM,CACvK,CACL,CAAC,GAAG,SAAS,CAAC;QAEtB,MAAM,CAAC,CACL,qBAAC,GAAG,IACF,SAAS,EAAC,yBAAyB,EACnC,GAAG,EAAC,eAAe,EAAC,GAAG,EAAG,UAAC,aAAa,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,aAAa,GAAG,aAAa,EAAvC,CAAyC,GAEtF,qBAAC,GAAG,IAAC,SAAS,EAAC,8BAA8B,EAAC,GAAG,EAAC,oBAAoB,GAChE,aAAe,CACf,EACJ,UAAY,CACV,CACP,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,wDAAiC,GAAzC;QAAA,iBA0BC;QAzBO,wCAAW,CAAgB;QAEjC,yCAAyC;QACzC,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,iBAAiB,GAAG,EAAE,CAAC;QAC3B,WAAW,CAAC,OAAO,CAAE,UAAC,OAAsB;YAC1C,iBAAiB,CAAC,IAAI,CAAC,KAAI,CAAC,uBAAuB,CAAE,OAAO,EAAE,YAAY,EAAE,CAAE,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;QACH,IAAI,aAAa,GAAG,CAClB,qBAAC,GAAG,IAAC,SAAS,EAAC,6BAA6B,GAC1C,qBAAC,EAAE,IAAC,SAAS,EAAC,4BAA4B,GACtC,iBAAmB,CAClB,CACD,CAAC,CAAC;QAEV,MAAM,CAAC,CACL,qBAAC,GAAG,IACF,SAAS,EAAC,yBAAyB,EACnC,GAAG,EAAC,eAAe,EAAC,GAAG,EAAC,eAAe,GAEvC,qBAAC,GAAG,IAAC,SAAS,EAAC,8BAA8B,EAAC,GAAG,EAAC,oBAAoB,GAChE,aAAe,CACf,CACF,CACP,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,8CAAuB,GAA/B,UAAgC,WAA0B,EAAE,EAAU;QAAtE,iBAkCC;QAjCO,0BAAI,CAAgB;QAC1B,IAAI,UAAU,GAAG,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,4BAA4B,CAAC;QAChE,IAAI,eAAe,GAAG,SAAG,CAAE,2BAA2B,EAAE;YACtD,oCAAoC,EAAE,IAAI,KAAK,qCAAgB,CAAC,OAAO;YACvE,qCAAqC,EAAE,UAAU;SAClD,CAAC,CAAC;QACH,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,wBAAwB,GAAG,WAAW,CAAC;QAC9C,CAAC;QACD,IAAI,WAAW,GAAG,IAAI,KAAK,qCAAgB,CAAC,OAAO,GAAG,qBAAW,CAAC,UAAU,GAAG,qBAAW,CAAC,OAAO,CAAC;QACnG,MAAM,CAAC,CACL,qBAAC,EAAE,IACD,SAAS,EAAC,wBAAwB,EAClC,GAAG,EAAE,EAAG,EACR,GAAG,EAAG,UAAU,GAAG,sBAAsB,GAAG,IAAM,GAElD,qBAAC,GAAG,IAAC,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAG,eAAiB,GAC9C,oBAAC,iBAAO,qBACD,WAAW,GAChB,QAAQ,EAAG,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,GAAG,yBAAe,CAAC,MAAQ,EACjF,IAAI,EAAG,WAAa,EACpB,WAAW,EAAG,cAAQ,KAAI,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAE,EACrE,OAAO,EAAG,cAAQ,KAAI,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAE,GACjE,EACA,IAAI,KAAK,qCAAgB,CAAC,UAAU;YACpC,qBAAC,MAAM,IACL,SAAS,EAAC,8BAA8B,EACxC,QAAQ,EAAE,CAAC,CAAE,EACb,OAAO,EAAG,cAAQ,KAAI,CAAC,uBAAuB,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC,CAAE,GACnE,qBAAC,CAAC,IAAC,SAAS,EAAC,oBAAoB,EAAK,CAAS;cAC/C,IAAM,CACN,CACH,CAAC,CAAC;IACX,CAAC;IAhqBa,yBAAY,GAAuB;QAC/C,IAAI,EAAE,qCAAgB,CAAC,MAAM;QAC7B,WAAW,EAAE,IAAI;QACjB,aAAa,EAAE,IAAI;KACpB,CAAC;IA6pBJ,mBAAC;AAAD,CAlqBA,AAkqBC,CAlqBiC,KAAK,CAAC,SAAS,GAkqBhD;AAlqBY,oBAAY,eAkqBxB,CAAA","file":"components/PeoplePicker/PeoplePicker.js","sourcesContent":["import * as React from 'react';\nimport { IPeoplePickerProps, PeoplePickerType } from './PeoplePicker.Props';\nimport {\n  Persona,\n  PersonaSize,\n  IPersonaProps,\n  PersonaPresence\n} from '../../Persona';\nimport {\n  Spinner,\n  SpinnerType\n} from '../../Spinner';\nimport { format } from '../../utilities/string';\nimport { FocusZone } from '../../FocusZone';\nimport { css } from '../../utilities/css';\nimport { KeyCodes } from '../../utilities/KeyCodes';\nimport { EventGroup } from '../../utilities/eventGroup/EventGroup';\nimport './PeoplePicker.scss';\n\nexport interface IPeoplePickerState {\n  isActive?: boolean;\n  isSearching?: boolean;\n  searchTextValue?: string;\n  highlightedSearchResultIndex?: number;\n  selectedPersonas?: IPersonaProps[];\n}\n\nconst INVALID_INDEX = -1;\n\nexport class PeoplePicker extends React.Component<IPeoplePickerProps, IPeoplePickerState> {\n  public static defaultProps: IPeoplePickerProps = {\n    type: PeoplePickerType.normal,\n    isConnected: true,\n    canSearchMore: true\n  };\n\n  // @TODO cleanup - unify naming scheme here\n  public refs: {\n    [key: string]: React.ReactInstance;\n    root: HTMLElement;\n    _searchBox: HTMLElement;\n    searchField: HTMLInputElement;\n    pickerResults: HTMLElement;\n    pickerResultGroups: HTMLElement;\n    selectedSearchResult: HTMLElement;\n    focusZone: HTMLElement;\n  };\n\n  private _events: EventGroup;\n  private _suggestionsCount: number = 0;\n  private _highlightedSearchResult: Object;\n  private _focusedPersonaIndex: number = INVALID_INDEX;\n\n  constructor(props: IPeoplePickerProps) {\n    super(props);\n    this._events = new EventGroup(this);\n    this._activatePeoplePicker = this._activatePeoplePicker.bind(this);\n    this._dismissPeoplePicker = this._dismissPeoplePicker.bind(this);\n    this._addPersonaToSelectedList = this._addPersonaToSelectedList.bind(this);\n    this._searchForMoreResults = this._searchForMoreResults.bind(this);\n    this._onSearchFieldTextChanged = this._onSearchFieldTextChanged.bind(this);\n    this._onSearchFieldKeyDown = this._onSearchFieldKeyDown.bind(this);\n    this._onBlurCapture = this._onBlurCapture.bind(this);\n    this._removeSelectedPersona = this._removeSelectedPersona.bind(this);\n    this._onSelectedPersonaFocus = this._onSelectedPersonaFocus.bind(this);\n    this._onSearchBoxKeyDown = this._onSearchBoxKeyDown.bind(this);\n    const selectedPersonas: IPersonaProps[] = props.initialItems ? props.initialItems : [];\n    this.state = {\n      isActive: false,\n      isSearching: false,\n      searchTextValue: '',\n      highlightedSearchResultIndex: INVALID_INDEX,\n      selectedPersonas: selectedPersonas\n    };\n  }\n\n  public componentDidMount() {\n    this._events.on(window, 'blur', this._onBlurCapture, true);\n    this._events.on(window, 'click', this._onClickCapture, true);\n    this._events.on(window, 'touchstart', this._onClickCapture, true);\n  }\n\n  public componentWillUnmount() {\n    this._events.dispose();\n  }\n\n  public componentDidUpdate() {\n    this._setScollPosition();\n    let { suggestions } = this.props;\n\n    if (this.state.isActive && this._suggestionsCount !== suggestions.length) {\n      this._setSelectedSearchResultIndex(0);\n    }\n    this._suggestionsCount = suggestions.length;\n\n    // if the selected persona is out of range after an update, it means the user deleted it\n    // and we need to set focus on the last one (which isn't handled by the FocusZone).\n    // Unless there are no more personas, then set focus on the input field.\n    const selectedPersonaCount: number = this.state.selectedPersonas.length;\n    if (this._focusedPersonaIndex !== INVALID_INDEX && this._focusedPersonaIndex >= selectedPersonaCount) {\n      if (selectedPersonaCount > 0) {\n        this._focusedPersonaIndex = selectedPersonaCount - 1;\n        (this.refs['persona' + this._focusedPersonaIndex] as HTMLElement).focus();\n      } else {\n        this._focusedPersonaIndex = INVALID_INDEX;\n        this.refs.searchField.focus();\n      }\n    }\n  }\n\n  public render() {\n    let { type } = this.props;\n    let searchField = this._renderSearchField();\n    let searchResults = type === PeoplePickerType.memberList ? this._renderSearchResultsForMemberList() : this._renderSearchResults();\n\n    // Render the selected personas.\n    // There are two layouts to choose from, based on the Persona type.\n    let selectedPersonas = type === PeoplePickerType.memberList ? null : this._renderSelectedPersonas();\n    let memberList = type === PeoplePickerType.memberList ? this._renderSelectedPersonasAsMemberList() : null;\n\n    let className = css( 'ms-PeoplePicker', {\n      'is-active': this.state.isActive,\n      'ms-PeoplePicker--compact': type === PeoplePickerType.compact,\n      'ms-PeoplePicker--membersList': type === PeoplePickerType.memberList,\n    });\n\n    return (\n      <div\n        className={ className }\n        ref='root'\n        key='root'\n      >\n        <div className='ms-PeoplePicker-searchBox' ref={ (searchBox) => this.refs._searchBox = searchBox } onKeyDown={ this._onSearchBoxKeyDown }>\n          <FocusZone\n            onActiveElementChanged={ this._onSelectedPersonaFocus }\n            ref={ (focusZone) => this.refs.focusZone = focusZone }\n          >\n            { selectedPersonas }\n            { searchField }\n          </FocusZone>\n        </div>\n        { searchResults }\n        { memberList }\n      </div>\n    );\n  }\n\n  private _onSearchBoxKeyDown(ev: React.KeyboardEvent) {\n    switch (ev.which) {\n      // remove focused persona\n      case KeyCodes.backspace:\n      case KeyCodes.del:\n        if (this._focusedPersonaIndex !== INVALID_INDEX) {\n          this._removeSelectedPersona( this._focusedPersonaIndex );\n          ev.stopPropagation();\n          ev.preventDefault();\n        }\n    }\n  }\n\n  /**\n   *\n   */\n  private _onSelectedPersonaFocus(element: HTMLElement, ev: React.FocusEvent) {\n    // store a reference to this element\n    // in keydown handler, if there's a focused persona, we want to delete it on certain key press events\n    let index = element.getAttribute('data-selection-index');\n    if (index) {\n      this._focusedPersonaIndex = Number(index);\n    }\n  }\n\n  /**\n   * Handles closing the people picker whenever focus is lost\n   */\n  private _onBlurCapture(ev) {\n    // onBlur, relatedTarget refers to the element that got focus\n    if (!this.refs.searchField.contains(ev.relatedTarget)\n      && !this.refs.pickerResults.contains(ev.relatedTarget) ) {\n      this._dismissPeoplePicker();\n    }\n  }\n\n  /**\n   * Handles closing the people picker whenever focus is lost through mouse.\n   */\n  private _onClickCapture(ev: React.MouseEvent) {\n    if (!this.refs.searchField.contains(ev.target as HTMLElement)\n      && !this.refs.pickerResults.contains(ev.target as HTMLElement) ) {\n      this._dismissPeoplePicker();\n    }\n  }\n\n  /**\n   * Click handler for when the user clicks on the Search For Results button.\n   */\n  private _searchForMoreResults(event) {\n    let { onSearchForMoreResults } = this.props;\n    this.setState({\n      'isSearching': true\n    });\n    event.preventDefault();\n    event.stopPropagation();\n    if (typeof onSearchForMoreResults !== 'undefined') {\n      onSearchForMoreResults(this.refs.searchField.value);\n    }\n  }\n\n  /**\n   * Opens the people picker dropdown.\n   */\n  private _activatePeoplePicker() {\n    this.setState({\n      'isActive': true,\n      'highlightedSearchResultIndex': INVALID_INDEX,\n    });\n    this._highlightedSearchResult = undefined;\n  }\n\n  /**\n   * Closes the people picker dropdown.\n   */\n  private _dismissPeoplePicker() {\n    this.setState({\n      'isActive': false,\n      'isSearching': false,\n      'highlightedSearchResultIndex': INVALID_INDEX,\n    });\n    this._highlightedSearchResult = undefined;\n  }\n\n  /**\n   *\n   */\n  private _removeSuggestedPersona(index, personaInfo) {\n    let { onRemoveSuggestion } = this.props;\n    if (onRemoveSuggestion) {\n      onRemoveSuggestion(index, personaInfo);\n    }\n  }\n\n  /**\n   * Selects the persona, dismisses the people picker, and clears out the search field.\n   */\n  private _addPersonaToSelectedList(personaInfo) {\n    const { selectedPersonas } = this.state;\n    const { onItemAdded } = this.props;\n    if (onItemAdded) {\n      onItemAdded(personaInfo);\n    }\n\n    selectedPersonas.push(personaInfo);\n    this._dismissPeoplePicker();\n    this.refs.searchField.value = '';\n    this.setState({\n      searchTextValue: '',\n      selectedPersonas: selectedPersonas\n    });\n    this.refs.searchField.focus();\n    this._onSearchFieldTextChanged();\n  }\n\n  /**\n   * Creates a new persona based on what the user has typed (non search result persona)\n   */\n  private _addManualPersonaToSelectedList() {\n      let newPersonaName = this.state.searchTextValue;\n      if (newPersonaName.length > 0) {\n        let personaInfo = {\n          imageInitials: newPersonaName.charAt(0).toUpperCase(),\n          primaryText: newPersonaName,\n          secondaryText: newPersonaName\n        };\n        this._addPersonaToSelectedList(personaInfo);\n      }\n  }\n\n  /**\n   * Handles keyboard inputs for the PeoplePicker.\n   */\n  private _onSearchFieldKeyDown(ev: React.KeyboardEvent) {\n    let { type } = this.props;\n    const { isActive, highlightedSearchResultIndex, selectedPersonas } = this.state;\n\n    switch (ev.which) {\n\n      // Enter behavior:\n      // - Adds the highlighted persona from the search results (autocomplete)\n      // - creates a new persona from the user's input (not from the search results)\n      case KeyCodes.enter:\n        if (isActive && highlightedSearchResultIndex !== INVALID_INDEX) {\n            this._addPersonaToSelectedList(this._highlightedSearchResult);\n        } else {\n            this._addManualPersonaToSelectedList();\n        }\n        break;\n\n      // Escape behavior:\n      // - closes the people picker if it is open\n      case KeyCodes.escape:\n        if (isActive) {\n          this._dismissPeoplePicker();\n        }\n        break;\n\n      // Backspace behavior:\n      // - closes the people picker if it is open\n      // - sets focus to the last selected persona if people picker is closed\n      // - removes the focused persona\n      case KeyCodes.backspace:\n        // allow normal event handling when there is text entered\n        if (this.refs.searchField.value.length !== 0) {\n          return; // continue propagation\n        }\n\n        if (isActive) {\n          this._dismissPeoplePicker();\n        } else if (selectedPersonas.length > 0 && type !== PeoplePickerType.memberList) {\n          let index = selectedPersonas.length - 1;\n          (this.refs['persona' + index] as HTMLElement).focus();\n        }\n        break;\n\n      // Up behavior:\n      // - Moves the focus through the people picker dropdown if it is open\n      // - Blurs out of the search field so that the Focus Zone sets focus on a selected personas\n      case KeyCodes.up:\n        if (isActive && highlightedSearchResultIndex !== INVALID_INDEX) {\n          this._setSelectedSearchResultIndex(highlightedSearchResultIndex - 1);\n        } else {\n          return; // continue propagation\n        }\n        break;\n\n      // Down behavior:\n      // - Activates the people picker if it is not open\n      // - Moves the focus through the people picker dropdown if it is open\n      case KeyCodes.down:\n        if (isActive) {\n          this._setSelectedSearchResultIndex(highlightedSearchResultIndex + 1);\n        } else {\n          this._activatePeoplePicker();\n          this._setSelectedSearchResultIndex(0);\n        }\n        break;\n\n      // Left behavior:\n      // - Default cursor behavior if there is any text entered\n      // - Blurs out of the search field so that the Focus Zone sets focus on a selected personas\n      case KeyCodes.left:\n        if (this.refs.searchField.value.length !== 0) {\n          ev.stopPropagation();\n        }\n        return; // continue propagation\n\n      // Tab behavior:\n      // - Adds the highlighted persona from the search results (autocomplete)\n      // - Shift-tab out of the FocusZone\n      case KeyCodes.tab:\n        // allow default behavior for shift tab\n        if (ev.shiftKey) {\n          return;\n        }\n        if (isActive && highlightedSearchResultIndex !== INVALID_INDEX) {\n          this._addPersonaToSelectedList(this._highlightedSearchResult);\n        } else {\n          return; // continue propagation\n        }\n        break;\n\n      // Semicolon and comma behavior:\n      // - creates a new persona from the user's input (not from the search results)\n      case KeyCodes.semicolon:\n      case KeyCodes.comma:\n        this._addManualPersonaToSelectedList();\n        break;\n\n      // Default keyboard behavior\n      // - If any key is pressed on the search field input, activate the people picker\n      // and set the first search result as selected.\n      default:\n        if (!isActive) {\n          this._activatePeoplePicker();\n          // this._setSelectedSearchResultIndex(0);\n        }\n        return; // continue propagation\n    }\n\n    // Only stop propagation if the event was handles and we didn't return\n    ev.stopPropagation();\n    ev.preventDefault();\n  }\n\n  /**\n   * Sets which persona in the search results is currently selected/highlighted.\n   */\n  private _setSelectedSearchResultIndex(index: number) {\n    let { highlightedSearchResultIndex } = this.state;\n    let { suggestions } = this.props;\n\n    if (suggestions.length > 0) {\n      // Cap index to stay in bounds of available search results\n      index = Math.max(0, Math.min(suggestions.length - 1, index));\n    } else {\n      index = INVALID_INDEX;\n    }\n    if (index !== highlightedSearchResultIndex) {\n      // Set the selected option.\n      this.setState({\n        highlightedSearchResultIndex: index\n      });\n    }\n  }\n\n  /**\n   * Handles changes in the input text box value, so we can notify the host\n   * of the search value change.\n   */\n  private _onSearchFieldTextChanged() {\n    let { onSearchFieldChanged } = this.props;\n    let textValue = this.refs.searchField.value;\n    this.setState({\n      searchTextValue: textValue\n    });\n    if (typeof onSearchFieldChanged !== 'undefined') {\n      onSearchFieldChanged(textValue);\n    }\n  }\n\n  /**\n   * Handles keeping the currently selected persona in view.\n   * If there's no search result selected, then reset the scroll to 0.\n   */\n  private _setScollPosition() {\n    const selectedSearchResult = this.refs.selectedSearchResult;\n    let newTop = 0;\n    if (selectedSearchResult) {\n      const selectedResultTop = selectedSearchResult.offsetTop;\n      const menuItemHeight = selectedSearchResult.clientHeight;\n      const currentTop = this.refs.pickerResultGroups.scrollTop;\n      const totalHeight = this.refs.pickerResultGroups.clientHeight;\n      newTop = currentTop;\n\n      // check to scroll down\n      let amountCutOffDown = (currentTop + totalHeight) - (selectedResultTop + menuItemHeight);\n      if (amountCutOffDown < 0) {\n        newTop = currentTop - amountCutOffDown;\n      }\n\n      // check to scroll up\n      let amountCutOffUp = selectedResultTop - menuItemHeight;\n      if (amountCutOffUp < currentTop ) {\n        newTop = amountCutOffUp;\n      }\n    }\n    // set the new scroll\n    this.refs.pickerResultGroups.scrollTop = newTop;\n  }\n\n  /**\n   * Removes one of the selected personas\n   */\n  private _removeSelectedPersona(index) {\n    const { selectedPersonas } = this.state;\n    const { onItemRemoved } = this.props;\n    if (onItemRemoved) {\n      onItemRemoved(selectedPersonas[index]);\n    }\n\n    selectedPersonas.splice( index, 1 );\n    this.setState({\n      selectedPersonas: selectedPersonas\n    });\n  }\n\n  /**\n   * Renders a list of personas using the list of selected personas, for the Member List variant.\n   */\n  private _renderSelectedPersonasAsMemberList() {\n    const { selectedPersonas } = this.state;\n    const { addedMemberCountFormatText } = this.props;\n    let count = selectedPersonas.length;\n    let className = css('ms-PeoplePicker-selected', {\n      'is-active': count > 0\n    });\n    let id = 0;\n\n    return <div className={ className }>\n      { addedMemberCountFormatText ?\n        <div className='ms-PeoplePicker-selectedHeader'>\n          <span className='ms-PeoplePicker-selectedCount'>\n            { format(addedMemberCountFormatText, count) }\n          </span>\n        </div> : <div className='ms-PeoplePicker-memberListTopMargin' />  }\n\n      <ul className='ms-PeoplePicker-selectedPeople'>\n        <FocusZone>\n          { selectedPersonas.map( (child) => {\n              return (\n                <li className='ms-PeoplePicker-selectedPerson' key={id++}>\n                  <Persona\n                    { ...child }\n                    size={ PersonaSize.small }\n                    presence={ child.presence ? child.presence : PersonaPresence.online }\n                  />\n                  <button className='ms-PeoplePicker-resultAction' onClick={ () => {\n                      this._removeSelectedPersona( selectedPersonas.indexOf(child) );\n                  }}>\n                    <i className='ms-Icon ms-Icon--x'></i>\n                  </button>\n                </li>);\n            })\n          }\n        </FocusZone>\n      </ul>\n    </div>;\n  }\n\n  /**\n   * Renders a list of personas using the list of selected personas. Uses the default layout\n   * of displaying the personas in the search box.\n   */\n  private _renderSelectedPersonas() {\n    let id = 0;\n    const { selectedPersonas } = this.state;\n    return selectedPersonas.map( (child) => {\n      let key = id++;\n      return (\n        <div className='ms-PeoplePicker-persona' ref={ 'persona' + key } key={key} data-selection-index={key} data-is-focusable={true} tabIndex={-1}>\n          <div className='ms-PeoplePicker-personaContent'>\n            <Persona\n              { ...child }\n              size={ PersonaSize.extraSmall }\n              presence={ child.presence ? child.presence : PersonaPresence.online }\n            />\n            <button className='ms-PeoplePicker-personaRemove' tabIndex={-1} data-is-focusable={false} onClick={ () => {\n                this._removeSelectedPersona( selectedPersonas.indexOf(child) );\n              } }>\n              <i className='ms-Icon ms-Icon--x'></i>\n            </button>\n          </div>\n        </div>);\n    });\n  }\n\n  /**\n   * Renders the search field, which is the input element inside the searchbox.\n   */\n  private _renderSearchField() {\n    return (\n      <input\n        className='ms-PeoplePicker-searchField'\n        type='text'\n        ref='searchField' key='searchField'\n        data-is-focusable={ true }\n        onFocus={ () => {this._focusedPersonaIndex = INVALID_INDEX;}}\n        onChange={ this._onSearchFieldTextChanged }\n        onKeyDown={ this._onSearchFieldKeyDown }\n      />\n    );\n  }\n\n  /**\n   * Renders the popup search results\n   */\n  private _renderSearchResults() {\n    let { suggestions,\n      searchCategoryName,\n      noResultsText,\n      type,\n      isConnected,\n      primarySearchText,\n      secondarySearchText,\n      disconnectedText,\n      canSearchMore\n    } = this.props;\n    let { isSearching } = this.state;\n\n    // Generate a result group section for each item in the array of suggestions\n    let resultItemId = 0;\n    let resultGroupId = 0;\n    let searchResultItems = [];\n    suggestions.forEach( (persona: IPersonaProps) => {\n      searchResultItems.push(this._renderSearchResultItem( persona, resultItemId++ ));\n    });\n    let searchResults = (\n        <div\n          className='ms-PeoplePicker-resultGroup'\n          key={resultGroupId++}\n        >\n          <div className='ms-PeoplePicker-resultGroupTitle'>{ suggestions.length > 0 ? searchCategoryName : noResultsText }</div>\n          <ul className='ms-PeoplePicker-resultList'>\n            { searchResultItems }\n          </ul>\n        </div>\n      );\n\n    let searchMoreClassName = css('ms-PeoplePicker-searchMore', {\n      'is-searching': isSearching,\n      'ms-PeoplePicker-searchMore--disconnected': !isConnected\n    });\n    let searchMoreButtonClassName = css('ms-PeoplePicker-searchMoreBtn', {\n      'ms-PeoplePicker-searchMoreBtn--compact': type === PeoplePickerType.compact\n    });\n    let searchIconClassName = css('ms-Icon', {\n      'ms-Icon--search': isConnected,\n      'ms-Icon--alert': !isConnected\n    });\n    let searchMore = canSearchMore ? (\n      <div className={ searchMoreClassName } onClick={ isConnected ? this._searchForMoreResults : null }>\n        <button className={ searchMoreButtonClassName }>\n          { isSearching ? <Spinner type={ SpinnerType.large }/> :\n            <div className='ms-PeoplePicker-searchMoreIcon'>\n              <i className={ searchIconClassName }></i>\n            </div>\n          }\n          { isConnected ? <div className='ms-PeoplePicker-searchMoreSecondary'>{ secondarySearchText }</div> : null }\n          <div className='ms-PeoplePicker-searchMorePrimary'>{ isSearching ? 'Searching for ' + this.refs.searchField.value : isConnected ? primarySearchText : disconnectedText }</div>\n        </button>\n      </div>) : undefined;\n\n    return (\n      <div\n        className='ms-PeoplePicker-results'\n        key='pickerResults' ref={ (pickerResults) => this.refs.pickerResults = pickerResults }\n      >\n        <div className='ms-PeoplePicker-resultGroups' ref='pickerResultGroups'>\n            { searchResults }\n        </div>\n        { searchMore }\n      </div>\n    );\n  }\n\n  /**\n   * Renders the popup search results, for the Member List variant.\n   */\n  private _renderSearchResultsForMemberList() {\n    let { suggestions } = this.props;\n\n    // MemberList variant doesn't show groups\n    let resultItemId = 0;\n    let searchResultItems = [];\n    suggestions.forEach( (persona: IPersonaProps) => {\n      searchResultItems.push(this._renderSearchResultItem( persona, resultItemId++ ));\n    });\n    let searchResults = (\n      <div className='ms-PeoplePicker-resultGroup'>\n        <ul className='ms-PeoplePicker-resultList'>\n          { searchResultItems }\n        </ul>\n      </div>);\n\n    return (\n      <div\n        className='ms-PeoplePicker-results'\n        key='pickerResults' ref='pickerResults'\n      >\n        <div className='ms-PeoplePicker-resultGroups' ref='pickerResultGroups'>\n            { searchResults }\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Renders a single persona as part of a list to be displayed in the search results.\n   */\n  private _renderSearchResultItem(personaInfo: IPersonaProps, id: number) {\n    let { type } = this.props;\n    let isSelected = id === this.state.highlightedSearchResultIndex;\n    let buttonClassName = css( 'ms-PeoplePicker-resultBtn', {\n      'ms-PeoplePicker-resultBtn--compact': type === PeoplePickerType.compact,\n      'ms-PeoplePicker-resultBtn--selected': isSelected\n    });\n    if (isSelected) {\n      this._highlightedSearchResult = personaInfo;\n    }\n    let personaSize = type === PeoplePickerType.compact ? PersonaSize.extraSmall : PersonaSize.regular;\n    return (\n      <li\n        className='ms-PeoplePicker-result'\n        key={id}\n        ref={ isSelected ? 'selectedSearchResult' : null }\n      >\n        <div role='button' className={ buttonClassName }>\n          <Persona\n            { ...personaInfo }\n            presence={ personaInfo.presence ? personaInfo.presence : PersonaPresence.online }\n            size={ personaSize }\n            onMouseDown={ () => { this._addPersonaToSelectedList(personaInfo); }}\n            onClick={ () => { this._addPersonaToSelectedList(personaInfo); }}\n          />\n          { type !== PeoplePickerType.memberList ?\n            <button\n              className='ms-PeoplePicker-resultAction'\n              tabIndex={-1}\n              onClick={ () => { this._removeSuggestedPersona(id, personaInfo); }} >\n              <i className='ms-Icon ms-Icon--x'></i></button>\n            : null }\n        </div>\n      </li>);\n  }\n}\n"],"sourceRoot":"/src"}