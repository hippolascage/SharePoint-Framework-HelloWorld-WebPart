{"version":3,"sources":["components/PeoplePicker/PeoplePicker.Props.ts"],"names":[],"mappings":";AA6FA,WAAY,gBAAgB;IAC1B;;OAEG;IACH,2DAAM,CAAA;IACN;;OAEG;IACH,6DAAO,CAAA;IACP;;OAEG;IACH,mEAAU,CAAA;AACZ,CAAC,EAbW,wBAAgB,KAAhB,wBAAgB,QAa3B;AAbD,IAAY,gBAAgB,GAAhB,wBAaX,CAAA","file":"components/PeoplePicker/PeoplePicker.Props.js","sourcesContent":["import * as React from 'react';\nimport { PeoplePicker } from './PeoplePicker';\nimport { IPersonaProps } from '../Persona/Persona.Props';\n\nexport interface IPeoplePickerProps extends React.Props<PeoplePicker> {\n  /**\n  * The list of people to choose from.\n  */\n  suggestions?: Array<IPersonaProps>;\n\n  /**\n   * A list of items that are already selected when the picker is rendered for the\n   * first time. Used in edit form mode. In new form mode it should be empty.\n   */\n  initialItems?: Array<IPersonaProps>;\n\n  /**\n   * The search category name that appears just above the search results.\n   * Not displayed in the MemberList variant.\n   */\n  searchCategoryName?: string;\n\n  /**\n   * The no results text that appears when no results are available.\n   * Not displayed in the MemberList variant.\n   */\n  noResultsText?: string;\n\n  /**\n  * The type of PeoplePickerType to display.\n  * @default PeoplePickerType.normal\n  */\n  type?: PeoplePickerType;\n\n  /**\n   * Whether there is a connection to the server.\n   * @default true\n   */\n  isConnected?: boolean;\n\n  /**\n   * Whether to show the search more button at the bottom of the picker.\n   * @default true\n   */\n  canSearchMore?: boolean;\n\n  /**\n   * Text to display in the section where the user clicks to search for more results.\n   */\n  primarySearchText?: string;\n\n  /**\n   * Text to display in the section where the user clicks to search for more results.\n   */\n  secondarySearchText?: string;\n\n  /**\n   * Text to display in the section where the user clicks to search for more results, used whenever isConnected is false.\n   */\n  disconnectedText?: string;\n\n  /**\n   * The format for the text that should display the number of members added so far in the picker.\n   * Should support singular/plural\n   */\n  addedMemberCountFormatText?: string;\n\n  /**\n   * Callback for the onChanged event.\n   */\n  onSearchFieldChanged?: (newValue: any) => void;\n\n  /**\n   * Callback for when the user wants to search for more than the results displayed.\n   */\n  onSearchForMoreResults?: (searchString: string) => void;\n\n  /**\n   * Callback for when the user wants to remove a suggested result\n   */\n  onRemoveSuggestion?: (index: number, persona: IPersonaProps) => void;\n\n  /**\n   * This gets called when an item is added to the currently selected items\n   */\n  onItemAdded?: (item: IPersonaProps) => void;\n\n  /**\n   * This gets called when an item is removed from the currently selected items\n   */\n  onItemRemoved?: (item: IPersonaProps) => void;\n}\n\nexport enum PeoplePickerType {\n  /**\n   * Standard People Picker.\n   */\n  normal,\n  /**\n   * Compact layout. It uses small personas when displaying search results.\n   */\n  compact,\n  /**\n   * MemberList layout. The selected people show up below the search box.\n   */\n  memberList,\n}"],"sourceRoot":"/src"}