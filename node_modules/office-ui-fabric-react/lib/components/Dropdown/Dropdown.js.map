{"version":3,"sources":["components/Dropdown/Dropdown.tsx"],"names":[],"mappings":"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","file":"components/Dropdown/Dropdown.js","sourcesContent":["import * as React from 'react';\nimport { IDropdownProps, IDropdownOption } from './Dropdown.Props';\nimport { css } from '../../utilities/css';\nimport { EventGroup } from '../../utilities/eventGroup/EventGroup';\nimport { findIndex } from '../../utilities/array';\nimport { KeyCodes } from '../../utilities/KeyCodes';\nimport { getId } from '../../utilities/object';\nimport './Dropdown.scss';\n\nexport interface IDropdownState {\n  isOpen: boolean;\n  selectedIndex: number;\n  isDisabled: boolean;\n}\n\nexport class Dropdown extends React.Component<IDropdownProps, any> {\n\n  public static defaultProps = {\n    options: [],\n    isDisabled: false\n  };\n\n  private static Option: string = 'option';\n\n  public refs: {\n    [key: string]: React.ReactInstance,\n    root: HTMLElement\n  };\n\n  private _events: EventGroup;\n  private _optionList: HTMLElement;\n  private _dropDown: HTMLDivElement;\n\n  constructor(props?: IDropdownProps) {\n    super(props);\n\n    this._events = new EventGroup(this);\n\n    this.state = {\n      id: getId('Dropdown'),\n      isOpen: false,\n      selectedIndex: this._getSelectedIndex(props.options, props.selectedKey),\n      isDisabled: this.props.isDisabled\n    };\n\n    this._onDropdownKeyDown = this._onDropdownKeyDown.bind(this);\n    this._onDropdownClick = this._onDropdownClick.bind(this);\n    this._onFocusChange = this._onFocusChange.bind(this);\n  }\n\n  public componentWillReceiveProps(newProps: IDropdownProps) {\n    this.setState({\n      selectedIndex: this._getSelectedIndex(newProps.options, newProps.selectedKey)\n    });\n  }\n\n  public componentWillUpdate(nextProps: IDropdownProps, nextState: IDropdownState) {\n    if (this.state.isOpen !== nextState.isOpen) {\n      if (nextState.isOpen) {\n        this._events.on(window, 'focus', this._onFocusChange, true);\n      } else {\n        this._events.off();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    this._events.dispose();\n  }\n\n  public componentDidUpdate(prevProps: IDropdownProps, prevState: IDropdownState) {\n    if (prevState.isOpen === false && this.state.isOpen === true) {\n      this._scrollOnOpen();\n    } else if (prevState.selectedIndex !== this.state.selectedIndex) {\n      this._scrollSelectedItemIntoView();\n    }\n  }\n\n  public render() {\n    let { label, options } = this.props;\n    let { id, isOpen, selectedIndex, isDisabled } = this.state;\n    let selectedOption = options[selectedIndex];\n\n    // Need to assign role application on containing div because JAWS doesnt call OnKeyDown without this role\n    return (\n      <div ref='root'>\n        <label id={ id + '-label' } className='ms-Label'>{ label }</label>\n        <div\n          data-is-focusable={ true }\n          ref={ (c): HTMLElement => this._dropDown = c }\n          id={ id }\n          className={ css('ms-Dropdown', {\n            'is-open': isOpen, 'is-disabled': isDisabled\n          }) }\n          tabIndex={ isDisabled ? -1 : 0 }\n          onKeyDown={ this._onDropdownKeyDown }\n          onClick={ this._onDropdownClick }\n          aria-expanded={ isOpen ? 'true' : 'false' }\n          role='application'\n          aria-activedescendant={ selectedIndex >= 0 ? (id + '-list' + selectedIndex) : (id + '-list') }\n          aria-controls={ id + '-list' }\n          >\n          <i className='ms-Dropdown-caretDown ms-Icon ms-Icon--caretDown'></i>\n          <span className='ms-Dropdown-title'>{ selectedOption ? selectedOption.text : '' }</span>\n          <ul ref={ (c: HTMLElement) => this._optionList = c }\n            id={ id + '-list' }\n            className='ms-Dropdown-items'\n            role='listbox'\n            aria-labelledby={ id + '-label' }>\n            { options.map((option, index) => (\n              <li id={ id + '-list' + index.toString() }\n                ref= { Dropdown.Option + index.toString() }\n                key={ option.key }\n                data-index={ index }\n                className={ css('ms-Dropdown-item', { 'is-selected': selectedIndex === index }) }\n                onClick={ this.setSelectedIndex.bind(this, index) }\n                role='option'\n                aria-selected={ selectedIndex === index ? 'true' : 'false' }\n                aria-label={ option.text }\n                >\n                { option.text }\n              </li>\n            )) }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  public focus() {\n    if (this._dropDown && this._dropDown.tabIndex !== -1) {\n      this._dropDown.focus();\n    }\n  }\n\n  public setSelectedIndex(index: number) {\n    let { onChanged, options } = this.props;\n    let { selectedIndex } = this.state;\n\n    index = Math.max(0, Math.min(options.length - 1, index));\n\n    if (index !== selectedIndex) {\n      // Set the selected option.\n      this.setState({\n        selectedIndex: index\n      });\n\n      if (onChanged) {\n        onChanged(options[index], index);\n      }\n    }\n  }\n\n  private _getSelectedIndex(options: IDropdownOption[], selectedKey: string | number) {\n    return findIndex(options, (option => (option.isSelected || selectedKey && option.key === selectedKey)));\n  }\n\n  private _onDropdownKeyDown(ev: React.KeyboardEvent) {\n    switch (ev.which) {\n      case KeyCodes.enter:\n        this.setState({\n          isOpen: !this.state.isOpen\n        });\n        break;\n\n      case KeyCodes.escape:\n        this.setState({\n          isOpen: false\n        });\n        break;\n\n      case KeyCodes.up:\n        this.setSelectedIndex(this.state.selectedIndex - 1);\n        break;\n\n      case KeyCodes.down:\n        this.setSelectedIndex(this.state.selectedIndex + 1);\n        break;\n\n      case KeyCodes.home:\n        this.setSelectedIndex(0);\n        break;\n\n      case KeyCodes.end:\n        this.setSelectedIndex(this.props.options.length - 1);\n        break;\n\n      default:\n        return;\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  }\n\n  private _onDropdownClick() {\n    let { isDisabled, isOpen } = this.state;\n\n    if (!isDisabled) {\n      this.setState({\n        isOpen: !isOpen\n      });\n    }\n  }\n\n  private _onFocusChange(ev: React.FocusEvent) {\n    if (this.state.isOpen && !this.refs.root.contains(ev.target as HTMLElement)) {\n      let context: Dropdown = this;\n\n      context.setState({\n        isOpen: false\n      });\n    }\n  }\n\n  private _scrollSelectedItemIntoView() {\n    const { posTop, posBottom } = this._getCurrentItemPositionDetails();\n\n    // if the selected item is too far down\n    if (posBottom > this._optionList.offsetHeight + this._optionList.scrollTop) {\n      this._optionList.scrollTop = posBottom - this._optionList.offsetHeight;\n      // else if it's too far up\n    } else if (posTop < this._optionList.scrollTop) {\n      this._optionList.scrollTop = posTop;\n    }\n  }\n\n  private _scrollOnOpen() {\n    const { currentItem, posBottom } = this._getCurrentItemPositionDetails();\n\n    // the selected item should be in the center of the dropdown if possible\n    if (currentItem) {\n      this._optionList.scrollTop = posBottom - (currentItem.offsetHeight + this._optionList.offsetHeight) / 2;\n    }\n  }\n\n  private _getCurrentItemPositionDetails() {\n    const currentItem: HTMLElement = this.refs[Dropdown.Option + this.state.selectedIndex] as HTMLElement;\n    const posTop: number = currentItem ? currentItem.offsetTop : 0;\n    const posBottom: number = currentItem ? posTop + currentItem.offsetHeight : 0;\n\n    return { currentItem: currentItem,\n      posTop: posTop,\n      posBottom: posBottom };\n  }\n\n}\n"],"sourceRoot":"/src"}