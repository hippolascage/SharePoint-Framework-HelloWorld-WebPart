{"version":3,"sources":["components/Nav/Nav.tsx"],"names":[],"mappings":"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","file":"components/Nav/Nav.js","sourcesContent":["import * as React from 'react';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport './Nav.scss';\n\nimport {\n  INavProps,\n  INavLinkGroup,\n  INavLink } from './Nav.Props';\n\nexport interface INavState {\n  isGroupExpanded: boolean[];\n}\n\nexport class Nav extends React.Component<INavProps, INavState> {\n\n  public static defaultProps: INavProps = {\n    groups: null,\n    onRenderLink: (link: INavLink) => (<span className='ms-Nav-linkText'>{ link.name }</span>)\n  };\n\n  constructor() {\n    super();\n\n    this.state = {\n      isGroupExpanded: []\n    };\n  }\n\n  public render(): React.ReactElement<{}> {\n    if (!this.props.groups) {\n      return null;\n    }\n\n    const groupElements: React.ReactElement<{}>[] = this.props.groups.map(\n      (group: INavLinkGroup, groupIndex: number) => this._renderGroup(group, groupIndex));\n\n    return (\n      <FocusZone direction={ FocusZoneDirection.vertical }>\n        <nav role='navigation' className={'ms-Nav' + (this.props.isOnTop ? ' is-onTop ms-u-slideRightIn40' : '')}>\n          { groupElements }\n        </nav>\n      </FocusZone>\n    );\n  }\n\n  private _renderLink(link: INavLink, linkIndex: number): React.ReactElement<{}> {\n    let { onLinkClick } = this.props;\n    return (\n      <li key={ linkIndex }>\n        <a\n          className={'ms-Nav-link' + (_isLinkSelected(link) ? ' is-selected' : '')}\n          href={ link.url || 'javascript:' }\n          onClick={ onLinkClick }\n          aria-label={ link.ariaLabel }\n          title={ link.title ? link.title : '' }\n          target={ link.target || '' }\n        >\n          { (link.iconClassName ?\n          <i className={'ms-Icon ms-Nav-IconLink ' + link.iconClassName}></i>\n          : '') }\n         { this.props.onRenderLink(link)}\n        </a> { this._renderLinks(link.links) }\n    </li>\n    );\n  }\n\n  private _renderLinks(links: INavLink[]): React.ReactElement<{}> {\n    if (!links || !links.length) {\n      return null;\n    }\n\n    const linkElements: React.ReactElement<{}>[] = links.map(\n      (link: INavLink, linkIndex: number) => this._renderLink(link, linkIndex));\n\n    return (\n      <ul>\n        { linkElements }\n      </ul>\n    );\n  }\n\n  private _renderGroup(group: INavLinkGroup, groupIndex: number): React.ReactElement<{}> {\n    const isGroupExpanded: boolean = this.state.isGroupExpanded[groupIndex] !== false;\n\n    return (\n      <div key={ groupIndex } className={ 'ms-Nav-group' + (isGroupExpanded ? ' is-expanded' : '') }>\n        { (group.name ?\n        <button\n          className='ms-Nav-groupButton'\n          onClick={ this._onGroupHeaderClicked.bind(this, groupIndex) }\n        >\n          <i className='ms-Nav-groupChevron ms-Icon ms-Icon--chevronDown'></i>\n          { group.name }\n        </button> : null)\n        }\n\n        <div className='ms-Nav-groupContent ms-u-slideDownIn20'>\n        { this._renderLinks(group.links) }\n        </div>\n      </div>\n    );\n  }\n\n  private _onGroupHeaderClicked(groupIndex: number, ev: React.MouseEvent): void {\n    const currentState: boolean = this.state.isGroupExpanded[groupIndex] !== false;\n\n    this.state.isGroupExpanded[groupIndex] = !currentState;\n    this.forceUpdate();\n\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n}\n\n// A tag used for resolving links.\nconst _urlResolver = document.createElement('a');\n\nfunction _isLinkSelected(link: INavLink): boolean {\n    if (!link.url) {\n      return false;\n    }\n    _urlResolver.href = link.url || '';\n    const target: string = _urlResolver.href;\n\n    if (location.protocol + '//' + location.host + location.pathname === target) {\n      return true;\n    }\n\n    if (location.href === target) {\n      return true;\n    }\n\n    if (location.hash) {\n      // Match the hash to the url.\n      if (location.hash === link.url) {\n        return true;\n      }\n\n      // Match a rebased url. (e.g. #foo becomes http://hostname/foo)\n      _urlResolver.href = location.hash.substring(1);\n\n      return _urlResolver.href === target;\n    }\n\n    return false;\n  }\n"],"sourceRoot":"/src"}