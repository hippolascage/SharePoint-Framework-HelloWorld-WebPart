{"version":3,"sources":["components/DocumentCard/DocumentCardActivity.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAE/B,sBAAsB,aAAa,CAAC,CAAA;AACpC,wBAGO,eAAe,CAAC,CAAA;AACvB,oBAAoB,qBAAqB,CAAC,CAAA;AAC1C,QAAO,6BAA6B,CAAC,CAAA;AAErC;IAA0C,wCAAgD;IAA1F;QAA0C,8BAAgD;IAuD1F,CAAC;IAtDQ,qCAAM,GAAb;QACE,IAAA,eAAqC,EAA/B,sBAAQ,EAAE,kBAAM,CAAgB;QAEtC,MAAM,CAAC,CACL,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC;YAC3B,qBAAC,GAAG,IAAC,SAAS,EAAE,SAAG,CAAC,yBAAyB,EAAE;gBAC7C,yCAAyC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC;aAC7D,CAAE,GACC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAG,EAC/B,qBAAC,GAAG,IAAC,SAAS,EAAC,iCAAiC,GAC9C,qBAAC,IAAI,IAAC,SAAS,EAAC,8BAA8B,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAG,CAAO,EACrF,qBAAC,IAAI,IAAC,SAAS,EAAC,kCAAkC,GAAG,QAAU,CAAO,CAClE,CACF,CACP,CAAC;IACJ,CAAC;IAEO,6CAAc,GAAtB,UAAuB,MAAqC;QAC1D,IAAI,YAAY,GAAG,UAAC,MAAmC;YACrD,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;gBAC1B,MAAM,CAAC,aAAa,GAAG,8BAAoB,CAAC,IAAI,CAAC;YACnD,CAAC;YAED,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,gCAAgC,GAC3C,MAAM,CAAC,QAAQ,IAAI,CACnB,qBAAC,GAAG,IAAC,SAAS,EAAG,SAAG,CAAC,qBAAqB,EAAE,gCAAsB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAG,EAAC,IAAI,EAAC,cAAc,GAC3G,MAAM,CAAC,QAAU,CACb,CACP,EACD,MAAM,CAAC,eAAe,IAAI,CAC1B,oBAAC,aAAK,GAAC,GAAG,EAAG,MAAM,CAAC,eAAiB,EAAC,IAAI,EAAC,cAAc,EAAE,CAC1D,CACC,CACP,CAAC;QACJ,CAAC,CAAC;QAEF,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,iCAAiC,GAC5C,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAM,EACpD,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAG,CACvB,CACP,CAAC;IACJ,CAAC;IAEO,6CAAc,GAAtB,UAAuB,MAAqC;QAC1D,IAAI,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAEhC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YACvB,UAAU,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC3C,CAAC;QAED,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;IACH,2BAAC;AAAD,CAvDA,AAuDC,CAvDyC,KAAK,CAAC,SAAS,GAuDxD;AAvDY,4BAAoB,uBAuDhC,CAAA","file":"components/DocumentCard/DocumentCardActivity.js","sourcesContent":["import * as React from 'react';\nimport { IDocumentCardActivityProps, IDocumentCardActivityPerson } from './DocumentCard.Props';\nimport { Image } from '../../Image';\nimport {\n  PERSONA_INITIALS_COLOR,\n  PersonaInitialsColor\n} from '../../Persona';\nimport { css } from '../../utilities/css';\nimport './DocumentCardActivity.scss';\n\nexport class DocumentCardActivity extends React.Component<IDocumentCardActivityProps, any> {\n  public render() {\n    let { activity, people } = this.props;\n\n    return (\n      people && people.length > 0 &&\n      <div className={css('ms-DocumentCardActivity', {\n        'ms-DocumentCardActivity--multiplePeople': people.length > 1\n      })}>\n        { this._renderAvatars(people) }\n        <div className='ms-DocumentCardActivity-details'>\n          <span className='ms-DocumentCardActivity-name'>{ this._getNameString(people) }</span>\n          <span className='ms-DocumentCardActivity-activity'>{ activity }</span>\n        </div>\n      </div>\n    );\n  }\n\n  private _renderAvatars(people: IDocumentCardActivityPerson[]): React.ReactElement<{}> {\n    let renderAvatar = (person: IDocumentCardActivityPerson) => {\n      if (!person.initialsColor) {\n        person.initialsColor = PersonaInitialsColor.blue;\n      }\n\n      return (\n        <div className='ms-DocumentCardActivity-avatar'>\n          { person.initials && (\n            <div className={ css('ms-Persona-initials', PERSONA_INITIALS_COLOR[person.initialsColor]) } role='presentation'>\n              { person.initials }\n              </div>\n          ) }\n          { person.profileImageSrc && (\n            <Image src={ person.profileImageSrc } role='presentation'/>\n          ) }\n        </div>\n      );\n    };\n\n    return (\n      <div className='ms-DocumentCardActivity-avatars'>\n        { people.length > 1 ? renderAvatar(people[1]) : null }\n        { renderAvatar(people[0]) }\n      </div>\n    );\n  }\n\n  private _getNameString(people: IDocumentCardActivityPerson[]): string {\n    let nameString = people[0].name;\n\n    if (people.length >= 2) {\n      nameString += ' +' + (people.length - 1);\n    }\n\n    return nameString;\n  }\n}\n"],"sourceRoot":"/src"}