{"version":3,"sources":["components/Link/Link.tsx"],"names":[],"mappings":"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","file":"components/Link/Link.js","sourcesContent":["import * as React from 'react';\nimport { css } from '../../utilities/css';\nimport './Link.scss';\nimport { ILinkProps, IPopupWindowProps, PopupWindowPosition } from './Link.Props';\n\ninterface IMyScreen extends Screen {\n  left: number;\n  top: number;\n}\n\ndeclare var screen: IMyScreen;\n\nexport class Link extends React.Component<ILinkProps, any> {\n\n  constructor(props: ILinkProps) {\n    super(props);\n\n    this._onClick = this._onClick.bind(this);\n    this._popupWindow = this._popupWindow.bind(this);\n  }\n\n  public render() {\n    let { children, className, href } = this.props;\n\n    return (\n      href ? (\n      <a\n        role='link'\n        { ...this.props as any }\n        className={ css('ms-Link', className) }\n        onClick={ this._onClick }>\n        { children }\n      </a>\n      ) : (\n      <button\n        role='button'\n        { ...this.props as any }\n        className={ css('ms-Link', className) }\n        onClick={ this._onClick } >\n        { children }\n      </button>\n      ));\n  }\n\n  private _onClick(ev: React.MouseEvent) {\n    let { popupWindowProps, onClick } = this.props;\n\n    if (popupWindowProps) {\n      this._popupWindow(popupWindowProps);\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n\n    if (onClick) {\n      onClick(ev);\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  }\n\n  private _popupWindow(popupWindowProps: IPopupWindowProps) {\n      const dualScreenLeft: number = window.screenLeft !== undefined ? window.screenLeft : screen.left;\n      const dualScreenTop: number = window.screenTop !== undefined ? window.screenTop : screen.top;\n\n      const width: number = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ?\n          document.documentElement.clientWidth : screen.width;\n      const height: number = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ?\n          document.documentElement.clientHeight : screen.height;\n\n      let left: number = 0;\n      let top: number = 0;\n      switch (popupWindowProps.positionWindowPosition) {\n        case PopupWindowPosition.center:\n          left = ((width / 2) - (popupWindowProps.width / 2)) + dualScreenLeft;\n          top = ((height / 2) - (popupWindowProps.height / 2)) + dualScreenTop;\n          break;\n        case PopupWindowPosition.leftBottom:\n          left = dualScreenLeft;\n          top = (height - popupWindowProps.height) + dualScreenTop;\n          break;\n        case PopupWindowPosition.leftTop:\n          left =  dualScreenLeft;\n          top = dualScreenTop;\n          break;\n        case PopupWindowPosition.rightBottom:\n          left = (width - popupWindowProps.width) + dualScreenLeft;\n          top = (height - popupWindowProps.height) + dualScreenTop;\n          break;\n        case PopupWindowPosition.rightTop:\n          left = (width - popupWindowProps.width) + dualScreenLeft;\n          top = dualScreenTop;\n          break;\n        default:\n          break;\n      }\n\n      const newWindow = window.open(this.props.href, popupWindowProps.title, 'scrollbars=yes, width='\n          + popupWindowProps.width + ', height=' + popupWindowProps.height + ', top=' + top + ', left=' + left);\n      // Puts focus on the newWindow\n      if (window.focus && newWindow) {\n          newWindow.focus();\n      }\n  }\n}\n"],"sourceRoot":"/src"}