{"version":3,"sources":["components/Pivot/Pivot.tsx"],"names":[],"mappings":"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","file":"components/Pivot/Pivot.js","sourcesContent":["import * as React from 'react';\nimport { IPivotProps } from './Pivot.Props';\nimport { IPivotItemProps} from './PivotItem.Props';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { KeyCodes } from '../../utilities/KeyCodes';\nimport { PivotItem } from './PivotItem';\nimport { PivotLinkFormat } from './Pivot.Props';\nimport { PivotLinkSize } from './Pivot.Props';\nimport { getId } from '../../utilities/object';\n\nimport './Pivot.scss';\nimport { css } from '../../utilities/css';\n\n/**\n *  Usage:\n *\n *   <Pivot>\n *     <PivotItem linkText=\"Foo\">\n *       <Label>Pivot #1</Label>\n *     </PivotItem>\n *     <PivotItem linkText=\"Bar\">\n *       <Label>Pivot #2</Label>\n *     </PivotItem>\n *     <PivotItem linkText=\"Bas\">\n *     <Label>Pivot #3</Label>\n *     </PivotItem>\n *   </Pivot>\n */\n\nexport interface IPivotState {\n  links: IPivotItemProps[];\n  selectedKey: string;\n  id: string;\n}\n\nexport class Pivot extends React.Component<IPivotProps, IPivotState> {\n  private _keyToIndexMapping: { [key: string]: number };\n\n  constructor(props: IPivotProps) {\n    super(props);\n\n    const links: IPivotItemProps[] = this._getPivotLinks(this.props);\n    let selectedKey: string;\n\n    if (props.initialSelectedKey) {\n      selectedKey = props.initialSelectedKey;\n    } else if (props.initialSelectedIndex) {\n      selectedKey = links[props.initialSelectedIndex].itemKey;\n    } else {\n      selectedKey = links[0].itemKey;\n    }\n\n    this.state = {\n      links,\n      selectedKey,\n      id: getId('Pivot')\n    } as IPivotState;\n\n    this._renderLink = this._renderLink.bind(this);\n  }\n\n  public componentWillReceiveProps(nextProps: IPivotProps) {\n    const links: IPivotItemProps[] = this._getPivotLinks(nextProps);\n    const selectedKey: string = this._isKeyValid(this.state.selectedKey)\n      ? this.state.selectedKey\n      : links[0].itemKey;\n\n    this.setState({\n      links,\n      selectedKey\n    } as IPivotState);\n  }\n\n  public render() {\n    return (\n      <div>\n        { this._renderPivotLinks() }\n        { this._renderPivotItem() }\n      </div>\n    );\n  }\n\n  /**\n   * Renders the set of links to route between pivots\n   */\n  private _renderPivotLinks() {\n    return (\n      <FocusZone direction={ FocusZoneDirection.horizontal }>\n        <ul className={ css('ms-Pivot',\n          { 'ms-Pivot--large': this.props.linkSize === PivotLinkSize.large },\n          { 'ms-Pivot--tabs': this.props.linkFormat === PivotLinkFormat.tabs }) }\n          role='tablist'>\n          { this.state.links.map(this._renderLink) }\n        </ul>\n      </FocusZone>\n    );\n  }\n\n  /**\n   * Renders a pivot link\n   */\n  private _renderLink(link: IPivotItemProps) {\n    const itemKey = link.itemKey;\n    let { id } = this.state;\n    return (\n      <a\n        id={ id + '-tab' }\n        key={ itemKey }\n        className={ css('ms-Pivot-link', { 'is-selected': this.state.selectedKey === itemKey }) }\n        onClick={ this._onLinkClick.bind(this, itemKey) }\n        onKeyPress={ this._onKeyPress.bind(this, itemKey) }\n        aria-label={ link.ariaLabel }\n        role='tab'\n        aria-controls={ id + '-panel' }\n        aria-selected={ this.state.selectedKey === itemKey }>\n        { link.linkText }\n      </a>\n    );\n  }\n\n  /**\n   * Renders the current Pivot Item\n   */\n  private _renderPivotItem() {\n    const itemKey: string = this.state.selectedKey;\n    const index = this._keyToIndexMapping[itemKey];\n    let { id } = this.state;\n\n    return (\n      <div className='pivotItem'\n        role='tabpanel'\n        id={ id + '-panel' }\n        aria-labelledby={ id + '-tab' }>\n        { React.Children.toArray(this.props.children)[index] }\n      </div>\n    );\n  }\n\n  /**\n   * Gets the set of PivotLinks as arrary of IPivotItemProps\n   * The set of Links is determined by child components of type PivotItem\n   */\n  private _getPivotLinks(props: IPivotProps): IPivotItemProps[] {\n    const links: IPivotItemProps[] = [];\n    this._keyToIndexMapping = {};\n\n    React.Children.map(props.children, (child: any, index: number) => {\n      if (typeof child === 'object' && child.type === PivotItem) {\n        const pivotItem = child as PivotItem;\n        const itemKey = pivotItem.props.itemKey || index.toString();\n\n        links.push({\n          linkText: pivotItem.props.linkText,\n          ariaLabel: pivotItem.props.ariaLabel,\n          itemKey: itemKey\n        });\n        this._keyToIndexMapping[itemKey] = index;\n      }\n    });\n\n    return links;\n  }\n\n  /**\n   * whether the key exists in the pivot items.\n   */\n  private _isKeyValid(itemKey: string) {\n    return itemKey !== undefined && this._keyToIndexMapping[itemKey] !== undefined;\n  }\n\n  /**\n   * Handles the onClick event on PivotLinks\n   */\n  private _onLinkClick(itemKey: string, ev: React.MouseEvent) {\n    ev.preventDefault();\n    this._updateSelectedItem(itemKey, ev);\n  }\n\n  /**\n   * Handle the onKeyPress eventon the PivotLinks\n   */\n  private _onKeyPress(itemKey: string, ev: React.KeyboardEvent) {\n    ev.preventDefault();\n    if (ev.which === KeyCodes.enter) {\n      this._updateSelectedItem(itemKey);\n    }\n  }\n\n  /**\n   * Updates the state with the new selected index\n   */\n  private _updateSelectedItem(itemKey: string, ev?: React.MouseEvent) {\n    this.setState({\n      selectedKey: itemKey\n    } as IPivotState);\n\n    if (this.props.onLinkClick && this._keyToIndexMapping[itemKey] >= 0) {\n      const index = this._keyToIndexMapping[itemKey];\n\n      // React.Element<any> cannot directly convert to PivotItem.\n      const item = React.Children.toArray(this.props.children)[index] as any;\n\n      if (typeof item === 'object' && item.type === PivotItem) {\n        this.props.onLinkClick(item as PivotItem, ev);\n      }\n    }\n  }\n}\n"],"sourceRoot":"/src"}