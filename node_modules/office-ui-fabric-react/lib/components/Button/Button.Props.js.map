{"version":3,"sources":["components/Button/Button.Props.ts"],"names":[],"mappings":";AAiEA,WAAY,WAAW;IACrB,wBAAwB;IACxB,iDAAM,CAAA;IACN,mBAAmB;IACnB,iDAAM,CAAA;AACR,CAAC,EALW,mBAAW,KAAX,mBAAW,QAKtB;AALD,IAAY,WAAW,GAAX,mBAKX,CAAA;AAED,WAAY,UAAU;IACpB,+CAAM,CAAA;IACN,iDAAO,CAAA;IACP,2CAAI,CAAA;IACJ,mDAAQ,CAAA;IACR,iDAAO,CAAA;IACP,2CAAI,CAAA;AACN,CAAC,EAPW,kBAAU,KAAV,kBAAU,QAOrB;AAPD,IAAY,UAAU,GAAV,kBAOX,CAAA","file":"components/Button/Button.Props.js","sourcesContent":["import * as React from 'react';\nimport { Button } from './Button';\n\nexport interface IButtonProps extends React.Props<Button> {\n  /**\n   * If provided, this component will be rendered as an anchor.\n   * @default ElementType.anchor\n   */\n  href?: string;\n\n  /**\n   * The type of button to render.\n   * @defaultvalue ButtonType.normal\n   */\n  buttonType?: ButtonType;\n\n  /**\n   * The button icon shown in command or hero type.\n   */\n  icon?: string;\n\n  /**\n   * Description of the action this button takes.\n   * Only used for compound buttons\n   */\n  description?: string;\n\n  /**\n   * Whether the button is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * If provided, additional class name to provide on the root element.\n   */\n  className?: string;\n\n  /**\n   * Event handler for click event.\n   */\n  onClick?: React.MouseEventHandler;\n\n  /**\n   * The aria label of the button for the benefit of screen readers.\n   */\n  ariaLabel?: string;\n\n  /**\n   * Detailed description of the button for the benefit of screen readers.\n   *\n   * Besides the compound button, other button types will need more information provided to screen reader.\n   */\n  ariaDescription?: string;\n\n  /**\n   * If provided, HTMLProps which will be mixed in onto the root element emitted by this component, before\n   * other props are applied. This allows you to extend the root element with additional attributes, such as\n   * data-automation-id needed for automation.\n   *\n   * The root element will either be a button or an anchor, depending on what value is specified for\n   * the elementType prop.\n   */\n  rootProps?: React.HTMLProps<HTMLButtonElement> | React.HTMLProps<HTMLAnchorElement>;\n}\n\nexport enum ElementType {\n  /** <button> element. */\n  button,\n  /** <a> element. */\n  anchor\n}\n\nexport enum ButtonType {\n  normal,\n  primary,\n  hero,\n  compound,\n  command,\n  icon\n}\n"],"sourceRoot":"/src"}