{"version":3,"sources":["components/Button/Button.tsx"],"names":[],"mappings":"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","file":"components/Button/Button.js","sourcesContent":["import * as React from 'react';\nimport { css } from '../../utilities/css';\nimport { assign } from '../../utilities/object';\nimport { IButtonProps, ButtonType } from './Button.Props';\nimport { getId } from '../../utilities/object';\nimport './Button.scss';\n\nexport interface IButtonState {\n  labelId?: string;\n  descriptionId?: string;\n  ariaDescriptionId?: string;\n}\n\nexport class Button extends React.Component<IButtonProps, IButtonState> {\n  public static defaultProps: IButtonProps = {\n    buttonType: ButtonType.normal\n  };\n  private _buttonElement: HTMLButtonElement;\n\n  constructor(props: IButtonProps) {\n    super(props);\n\n    this.state = {\n      labelId: getId('Button'),\n      descriptionId: getId('Button'),\n      ariaDescriptionId: getId('Button')\n    };\n  }\n\n  public render(): JSX.Element {\n    let { buttonType, children, icon, description, ariaLabel, ariaDescription, href, disabled, onClick } = this.props;\n    let { labelId, descriptionId, ariaDescriptionId } = this.state;\n\n    const renderAsAnchor: boolean = !!href;\n    const tag = renderAsAnchor ? 'a' : 'button';\n\n    const className = css((this.props.className), 'ms-Button', {\n      'ms-Button--primary': buttonType === ButtonType.primary,\n      'ms-Button--hero': buttonType === ButtonType.hero,\n      'ms-Button--compound': buttonType === ButtonType.compound,\n      'ms-Button--command': buttonType === ButtonType.command,\n      'ms-Button--icon': buttonType === ButtonType.icon,\n      'disabled': (renderAsAnchor && disabled) // add disable styling if it is an anchor\n                                               // if not utilize default button disabled behavior.\n    });\n\n    const iconSpan = icon && (buttonType === ButtonType.command || buttonType === ButtonType.hero || buttonType === ButtonType.icon)\n      ? <span className='ms-Button-icon'><i className={`ms-Icon ms-Icon--${icon}`}></i></span>\n      : null;\n\n    // ms-Button-description is only shown when the button type is compound.\n    // In other cases it will not be displayed.\n    const descriptionSpan: React.ReactElement<React.HTMLProps<HTMLSpanElement>> = description\n      ? <span className='ms-Button-description' id={ descriptionId }>{ description }</span>\n      : null;\n\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n    const ariaDescriptionSpan: React.ReactElement<React.HTMLProps<HTMLSpanElement>> = ariaDescription\n      ? <span className='ms-u-screenReaderOnly' id={ ariaDescriptionId }>{ ariaDescription }</span>\n      : null;\n\n    return React.createElement(\n      tag,\n      assign(\n        {},\n        this.props.rootProps,\n        {\n          'aria-label': ariaLabel,\n          'aria-labelledby': ariaLabel ? null : labelId,\n          'aria-describedby': ariaDescription ? ariaDescriptionId : description ? descriptionId : null,\n          'ref': (c: HTMLButtonElement): HTMLButtonElement => this._buttonElement = c\n        },\n        onClick && { 'onClick': onClick },\n        disabled && { 'disabled': disabled },\n        { className }),\n      iconSpan,\n      <span className='ms-Button-label' id={ labelId } >{ children }</span>,\n      descriptionSpan,\n      ariaDescriptionSpan\n    );\n  }\n\n  public focus(): void {\n    if (this._buttonElement) {\n      this._buttonElement.focus();\n    }\n  }\n}\n"],"sourceRoot":"/src"}