{"version":3,"sources":["components/Image/Image.tsx"],"names":[],"mappings":"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","file":"components/Image/Image.js","sourcesContent":["import * as React from 'react';\nimport { css } from '../../utilities/css';\nimport { EventGroup } from '../../utilities/eventGroup/EventGroup';\nimport './Image.scss';\nimport { IImageProps, ImageFit } from './Image.Props';\n\nexport interface IImageState {\n  loadState?: ImageLoadState;\n}\n\nexport enum CoverStyle {\n  landscape,\n  portrait\n}\n\nexport const CoverStyleMap = {\n  [ CoverStyle.landscape ]: 'ms-Image-image--landscape',\n  [ CoverStyle.portrait ]: 'ms-Image-image--portrait'\n};\n\nexport const ImageFitMap = {\n  [ ImageFit.center ]: 'ms-Image-image--center',\n  [ ImageFit.contain ]: 'ms-Image-image--contain',\n  [ ImageFit.cover ]: 'ms-Image-image--cover',\n  [ ImageFit.none ]: 'ms-Image-image--none'\n};\n\nexport enum ImageLoadState {\n  notLoaded,\n  loaded,\n  error,\n  errorLoaded\n}\n\nexport class Image extends React.Component<IImageProps, IImageState> {\n  public static defaultProps = {\n    shouldFadeIn: true\n  };\n\n  public refs: {\n    [key: string]: React.ReactInstance;\n    image: HTMLImageElement;\n  };\n\n  private _events: EventGroup;\n  private _coverStyle: CoverStyle;\n\n  constructor(props: IImageProps) {\n    super(props);\n\n    this.state = {\n      loadState: ImageLoadState.notLoaded\n    };\n\n    this._events = new EventGroup(this);\n  }\n\n  public componentDidMount() {\n    let { image } = this.refs;\n\n    if (!this._evaluateImage()) {\n      this._events.on(image, 'load', this._evaluateImage);\n      this._events.on(image, 'error', this._setError);\n    }\n  }\n\n  public componentWillReceiveProps(nextProps) {\n    if (this.state.loadState === ImageLoadState.loaded) {\n      let { nextHeight, nextWidth } = nextProps;\n      let { height, width } = this.props;\n\n      if (height !== nextHeight || width !== nextWidth) {\n        this._computeCoverStyle();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    this._events.dispose();\n  }\n\n  public render() {\n    let { src, alt, width, height, shouldFadeIn, className, imageFit, errorSrc, role } = this.props;\n    let { loadState } = this.state;\n    let coverStyle = this._coverStyle;\n    let loaded = loadState === ImageLoadState.loaded || loadState === ImageLoadState.errorLoaded;\n    let srcToDisplay: string =\n      (loadState === ImageLoadState.error || loadState === ImageLoadState.errorLoaded) ? errorSrc : src;\n\n    // If image dimensions aren't specified, the natural size of the image is used.\n    return (\n      <div className={ css('ms-Image', className) } style={ { width: width, height: height } }>\n        <img className={ css('ms-Image-image',\n          (coverStyle !== undefined) && CoverStyleMap[coverStyle],\n          (imageFit !== undefined) && ImageFitMap[imageFit], {\n            'is-fadeIn': shouldFadeIn,\n            'is-notLoaded': !loaded,\n            'is-loaded': loaded,\n            'ms-u-fadeIn400': loaded && shouldFadeIn,\n            'is-error': loadState === ImageLoadState.error,\n            'ms-Image-image--scaleWidth': (imageFit === undefined && !!width && !height),\n            'ms-Image-image--scaleHeight': (imageFit === undefined && !width && !!height),\n            'ms-Image-image--scaleWidthHeight': (imageFit === undefined && !!width && !!height),\n          }) } ref='image' src={ srcToDisplay } alt={ alt } role={ role } />\n      </div>\n    );\n  }\n\n  private _evaluateImage(): boolean {\n    let { src } = this.props;\n    let { loadState } = this.state;\n    let { image } = this.refs;\n    let isLoaded = (src && image.naturalWidth > 0 && image.naturalHeight > 0);\n\n    this._computeCoverStyle();\n\n    if (isLoaded && loadState !== ImageLoadState.loaded && loadState !== ImageLoadState.errorLoaded) {\n      this._events.off();\n      this.setState({\n        loadState: loadState === ImageLoadState.error ? ImageLoadState.errorLoaded : ImageLoadState.loaded\n      });\n    }\n\n    return isLoaded;\n  }\n\n  private _computeCoverStyle() {\n    let { imageFit } = this.props;\n    if (imageFit === ImageFit.cover || imageFit === ImageFit.contain) {\n      let { image } = this.refs;\n      if (image) {\n        let { width, height } = this.props;\n\n        let desiredRatio = (width as number) / (height as number);\n        let naturalRatio = image.naturalWidth / image.naturalHeight;\n\n        if (naturalRatio > desiredRatio) {\n          this._coverStyle = CoverStyle.landscape;\n        } else {\n          this._coverStyle = CoverStyle.portrait;\n        }\n      }\n    }\n  }\n\n  private _setError() {\n    if (this.state.loadState !== ImageLoadState.error && this.state.loadState !== ImageLoadState.errorLoaded) {\n      this.setState({\n        loadState: ImageLoadState.error\n      });\n    }\n  }\n\n}\n"],"sourceRoot":"/src"}