{"version":3,"sources":["utilities/focus.ts"],"names":[],"mappings":"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","file":"utilities/focus.js","sourcesContent":["/* tslint:disable:no-string-literal */\n\nconst IS_FOCUSABLE_ATTRIBUTE = 'data-is-focusable';\nconst IS_VISIBLE_ATTRIBUTE = 'data-is-visible';\nconst FOCUSZONE_ID_ATTRIBUTE = 'data-focuszone-id';\n\nexport function getFirstFocusable(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement,\n  includeElementsInFocusZones?: boolean): HTMLElement {\n\n  return getNextElement(rootElement, currentElement, true, false, false, includeElementsInFocusZones);\n}\n\nexport function getLastFocusable(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement,\n  includeElementsInFocusZones?: boolean): HTMLElement {\n\n  return getPreviousElement(rootElement, currentElement, true, false, true, includeElementsInFocusZones);\n}\n\n/** Traverse to find the previous element. */\nexport function getPreviousElement(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement,\n  checkNode?: boolean,\n  suppressParentTraversal?: boolean,\n  traverseChildren?: boolean,\n  includeElementsInFocusZones?: boolean): HTMLElement {\n\n  if (!currentElement ||\n    currentElement === rootElement) {\n    return null;\n  }\n\n  let isCurrentElementVisible = isElementVisible(currentElement);\n\n  // Check its children.\n  if (traverseChildren && (includeElementsInFocusZones || !isElementFocusZone(currentElement)) && isCurrentElementVisible) {\n    const childMatch = getPreviousElement(rootElement, currentElement.lastElementChild as HTMLElement, true, true, true, includeElementsInFocusZones);\n\n    if (childMatch) {\n      return childMatch;\n    }\n  }\n\n  // Check the current node, if it's not the first traversal.\n  if (checkNode && isCurrentElementVisible && isElementTabbable(currentElement)) {\n    return currentElement;\n  }\n\n  // Check its previous sibling.\n  const siblingMatch = getPreviousElement(rootElement, currentElement.previousElementSibling as HTMLElement, true, true, true, includeElementsInFocusZones);\n\n  if (siblingMatch) {\n    return siblingMatch;\n  }\n\n  // Check its parent.\n  if (!suppressParentTraversal) {\n    return getPreviousElement(rootElement, currentElement.parentElement, true, false, false, includeElementsInFocusZones);\n  }\n\n  return null;\n}\n\n/** Traverse to find the next focusable element. */\nexport function getNextElement(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement,\n  checkNode?: boolean,\n  suppressParentTraversal?: boolean,\n  suppressChildTraversal?: boolean,\n  includeElementsInFocusZones?: boolean): HTMLElement {\n\n  if (\n    !currentElement ||\n    (currentElement === rootElement && suppressChildTraversal)) {\n    return null;\n  }\n\n  let isCurrentElementVisible = isElementVisible(currentElement);\n\n  // Check the current node, if it's not the first traversal.\n  if (checkNode && isCurrentElementVisible && isElementTabbable(currentElement)) {\n    return currentElement;\n  }\n\n  // Check its children.\n  if (!suppressChildTraversal && isCurrentElementVisible && (includeElementsInFocusZones || !isElementFocusZone(currentElement))) {\n    const childMatch = getNextElement(rootElement, currentElement.firstElementChild as HTMLElement, true, true, false, includeElementsInFocusZones);\n\n    if (childMatch) {\n      return childMatch;\n    }\n  }\n\n  if (currentElement === rootElement) {\n    return null;\n  }\n\n  // Check its sibling.\n  const siblingMatch = getNextElement(rootElement, currentElement.nextElementSibling as HTMLElement, true, true, false, includeElementsInFocusZones);\n\n  if (siblingMatch) {\n    return siblingMatch;\n  }\n\n  if (!suppressParentTraversal) {\n    return getNextElement(rootElement, currentElement.parentElement, false, false, true, includeElementsInFocusZones);\n  }\n\n  return null;\n}\n\nexport function isElementVisible(element: HTMLElement): boolean {\n  return (\n    !!element &&\n    (element.offsetHeight !== 0 ||\n      element.offsetParent !== null ||\n      (element as any).isVisible === true || // used as a workaround for testing.\n      (element.getAttribute && element.getAttribute(IS_VISIBLE_ATTRIBUTE) === 'true'))\n  );\n}\n\nexport function isElementTabbable(element: HTMLElement): boolean {\n  return (\n    !!element &&\n    (element.tagName === 'A' ||\n      (element.tagName === 'BUTTON' && !(element as HTMLButtonElement).disabled) ||\n      (element.tagName === 'INPUT' && !(element as HTMLButtonElement).disabled) ||\n      (element.getAttribute && element.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true')));\n}\n\nexport function isElementFocusZone(element?: HTMLElement): boolean {\n  return element && !!element.getAttribute(FOCUSZONE_ID_ATTRIBUTE);\n}"],"sourceRoot":"/src"}