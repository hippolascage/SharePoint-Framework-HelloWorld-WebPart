{"version":3,"sources":["utilities/dateMath/DateMath.test.ts"],"names":[],"mappings":"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","file":"utilities/dateMath/DateMath.test.js","sourcesContent":["import * as DateMath from './DateMath';\nlet { expect } = chai;\n\nenum Months {\n  Jan = 0,\n  Feb = 1,\n  Mar = 2,\n  Apr = 3,\n  May = 4,\n  Jun = 5,\n  Jul = 6,\n  Aug = 7,\n  Sep = 8,\n  Oct = 9,\n  Nov = 10,\n  Dec = 11\n\n}\ndescribe('DateMath', () => {\n\n  it('can add days', () => {\n    let startDate = new Date(2016, Months.Apr, 1);\n    let result = DateMath.addDays(startDate, 5);\n    let expected = new Date(2016, Months.Apr, 6);\n\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n  });\n\n  it('can add days across a month boundary', () => {\n    let startDate = new Date(2016, Months.Mar, 30);\n    let result = DateMath.addDays(startDate, 5);\n    let expected = new Date(2016, Months.Apr, 4);\n\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n  });\n\n  it('can add days across multiple month boundaries', () => {\n    let startDate = new Date(2016, Months.Mar, 31);\n    let result = DateMath.addDays(startDate, 65);\n    let expected = new Date(2016, Months.Jun, 4);\n\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n  });\n\n  it('can add days across leap day boundaries', () => {\n    let startDate = new Date(2016, Months.Feb, 28);\n    let result = DateMath.addDays(startDate, 2);\n    let expected = new Date(2016, Months.Mar, 1);\n\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n  });\n\n  it('can add months', () => {\n    let startDate = new Date(2015, Months.Dec, 31);\n\n    let result = DateMath.addMonths(startDate, 1);\n    let expected = new Date(2016, Months.Jan, 31);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, 2);\n    expected = new Date(2016, Months.Feb, 29);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, 3);\n    expected = new Date(2016, Months.Mar, 31);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, 4);\n    expected = new Date(2016, Months.Apr, 30);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, 5);\n    expected = new Date(2016, Months.May, 31);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, 6);\n    expected = new Date(2016, Months.Jun, 30);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, 7);\n    expected = new Date(2016, Months.Jul, 31);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, 8);\n    expected = new Date(2016, Months.Aug, 31);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, 9);\n    expected = new Date(2016, Months.Sep, 30);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, 10);\n    expected = new Date(2016, Months.Oct, 31);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, 11);\n    expected = new Date(2016, Months.Nov, 30);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, 12);\n    expected = new Date(2016, Months.Dec, 31);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, 14);\n    expected = new Date(2017, Months.Feb, 28);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n  });\n\n  it('can add years', () => {\n    let startDate = new Date(2016, Months.Feb, 29);\n    let result = DateMath.addYears(startDate, 1);\n    let expected = new Date(2017, Months.Feb, 28);\n\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    startDate = new Date(2016, Months.Feb, 29);\n    result = DateMath.addYears(startDate, 4);\n    expected = new Date(2020, Months.Feb, 29);\n\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    startDate = new Date(2016, Months.Jan, 1);\n    result = DateMath.addYears(startDate, 1);\n    expected = new Date(2017, Months.Jan, 1);\n\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n  });\n\n  it('can subtract days', () => {\n    let startDate = new Date(2016, Months.Apr, 30);\n    let result = DateMath.addDays(startDate, -5);\n    let expected = new Date(2016, Months.Apr, 25);\n\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n  });\n\n  it('can subtract days across a month boundry', () => {\n    let startDate = new Date(2016, Months.Apr, 1);\n    let result = DateMath.addDays(startDate, -5);\n    let expected = new Date(2016, Months.Mar, 27);\n\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n  });\n\n  it('can subtract days across multiple month boundaries', () => {\n    let startDate = new Date(2016, Months.Jul, 4);\n    let result = DateMath.addDays(startDate, -65);\n    let expected = new Date(2016, Months.Apr, 30);\n\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n  });\n\n  it('can subtract days across leap day boundaries', () => {\n    let startDate = new Date(2016, Months.Mar, 1);\n    let result = DateMath.addDays(startDate, -2);\n    let expected = new Date(2016, Months.Feb, 28);\n\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n  });\n\n  it('can subtract months', () => {\n    let startDate = new Date(2016, Months.Dec, 31);\n\n    let result = DateMath.addMonths(startDate, -12);\n    let expected = new Date(2015, Months.Dec, 31);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, -11);\n    expected = new Date(2016, Months.Jan, 31);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, -10);\n    expected = new Date(2016, Months.Feb, 29);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, -9);\n    expected = new Date(2016, Months.Mar, 31);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, -8);\n    expected = new Date(2016, Months.Apr, 30);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, -7);\n    expected = new Date(2016, Months.May, 31);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, -6);\n    expected = new Date(2016, Months.Jun, 30);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, -5);\n    expected = new Date(2016, Months.Jul, 31);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, -4);\n    expected = new Date(2016, Months.Aug, 31);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, -3);\n    expected = new Date(2016, Months.Sep, 30);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, -2);\n    expected = new Date(2016, Months.Oct, 31);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, -1);\n    expected = new Date(2016, Months.Nov, 30);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    result = DateMath.addMonths(startDate, -22);\n    expected = new Date(2015, Months.Feb, 28);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n  });\n\n  it('can subtract years', () => {\n    let startDate = new Date(2016, Months.Feb, 29);\n    let result = DateMath.addYears(startDate, -1);\n    let expected = new Date(2015, Months.Feb, 28);\n\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    startDate = new Date(2016, Months.Feb, 29);\n    result = DateMath.addYears(startDate, -4);\n    expected = new Date(2012, Months.Feb, 29);\n\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    startDate = new Date(2016, Months.Jan, 1);\n    result = DateMath.addYears(startDate, -1);\n    expected = new Date(2015, Months.Jan, 1);\n\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n  });\n\n  it('can set the month', () => {\n    let startDate = new Date(2016, Months.Jan, 31);\n    let result = DateMath.setMonth(startDate, Months.Feb);\n    let expected = new Date(2016, Months.Feb, 29);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n\n    startDate = new Date(2016, Months.Jun, 1);\n    result = DateMath.setMonth(startDate, Months.Feb);\n    expected = new Date(2016, Months.Feb, 1);\n    expect(result.getTime(), result.toDateString()).to.be.equal(expected.getTime());\n  });\n\n  it('can compare dates', () => {\n    let date1 = new Date(2016, 4, 1);\n    let date2 = new Date(2016, 4, 1);\n    expect(DateMath.compareDates(date1, date2)).to.be.true;\n\n    date1 = new Date(2016, 4, 1, 12, 30, 0);\n    date2 = new Date(2016, 4, 1, 10, 0, 0);\n    expect(DateMath.compareDates(date1, date2)).to.be.true;\n\n    date1 = new Date(2016, 4, 1);\n    date2 = new Date(2016, 4, 2);\n    expect(DateMath.compareDates(date1, date2)).to.be.false;\n\n    date1 = new Date(2016, 4, 1);\n    date2 = new Date(2016, 5, 1);\n    expect(DateMath.compareDates(date1, date2)).to.be.false;\n\n    date1 = new Date(2016, 4, 1);\n    date2 = new Date(2017, 4, 1);\n    expect(DateMath.compareDates(date1, date2)).to.be.false;\n  });\n});"],"sourceRoot":"/src"}