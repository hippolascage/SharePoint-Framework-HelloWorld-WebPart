{"version":3,"sources":["GulpProxy.ts"],"names":[],"mappings":";AAEA,oCAAoC;AACpC;IAGE,mBAAY,YAAiB;QAC3B,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;IAC5B,CAAC;IAEM,wBAAI,GAAX;QACE,MAAM,IAAI,KAAK,CACb,0GAA0G,CAC3G,CAAC;IACJ,CAAC;IAEM,uBAAG,GAAV,UAAW,IAAuB,EAAE,GAAqB;QACvD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACnC,CAAC;IAEM,wBAAI,GAAX,UAAY,SAA8C,EACxD,GAAsB;QACtB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IACzC,CAAC;IAEM,yBAAK,GAAZ,UAAa,IAAuB,EAAE,EAAiC;QACrE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IACpC,CAAC;IACH,gBAAC;AAAD,CAzBA,AAyBC,IAAA;AAzBY,iBAAS,YAyBrB,CAAA","file":"GulpProxy.js","sourcesContent":["import gulp = require('gulp');\n\n/* tslint:disable:max-line-length */\nexport class GulpProxy {\n  private _gulp: gulp.Gulp;\n\n  constructor(gulpInstance: any) {\n    this._gulp = gulpInstance;\n  }\n\n  public task(): any {\n    throw new Error(\n      'You should not define gulp tasks, but instead subclass the GulpTask and override the executeTask method.'\n    );\n  }\n\n  public src(glob: string | string[], opt?: gulp.SrcOptions): NodeJS.ReadWriteStream {\n    return this._gulp.src(glob, opt);\n  }\n\n  public dest(outFolder: string | ((file: string) => string),\n    opt?: gulp.DestOptions): NodeJS.ReadWriteStream {\n    return this._gulp.dest(outFolder, opt);\n  }\n\n  public watch(glob: string | string[], fn: (gulp.WatchCallback | string)): NodeJS.EventEmitter {\n    return this._gulp.watch(glob, fn);\n  }\n}\n"],"sourceRoot":"/source/"}