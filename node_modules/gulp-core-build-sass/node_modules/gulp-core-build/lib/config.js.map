{"version":3,"sources":["config.ts"],"names":[],"mappings":";AAAA,sBAAqB,SAAS,CAAC,CAAA;AAE/B,IAAM,2BAA2B,GAAG,MAAM,CAAC;AAE3C,IAAI,cAAc,GAAW,EAAE,CAAC;AAEhC,2BAAkC,aAAqB;IACrD,cAAc,GAAG,aAAa,CAAC;AACjC,CAAC;AAFe,yBAAiB,oBAEhC,CAAA;AAED,wBAA+B,IAAY,EAAE,YAA+B;IAE1E,qDAAqD;IACrD,IAAI,WAAW,GAAG,2BAA2B,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IACnE,IAAI,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACxC,IAAI,SAAS,GAAG,YAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IAEzC,MAAM,CAAC,kBAAkB,CAAC,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;AACrF,CAAC;AARe,sBAAc,iBAQ7B,CAAA;AAED,sBAA6B,IAAY,EAAE,YAAsB;IAC/D,IAAI,WAAW,GAAG,cAAc,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAErD,MAAM,CAAC,WAAW,KAAK,MAAM,IAAI,WAAW,KAAK,IAAI,CAAC;AACxD,CAAC;AAJe,oBAAY,eAI3B,CAAA;AAED;IAA4B,cAA6B;SAA7B,WAA6B,CAA7B,sBAA6B,CAA7B,IAA6B;QAA7B,6BAA6B;;IACvD,GAAG,CAAC,CAAY,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,CAAC;QAAhB,IAAI,GAAG,aAAA;QACV,EAAE,CAAC,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,GAAG,CAAC;QACb,CAAC;KACF;IAED,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC","file":"config.js","sourcesContent":["import { args } from './State';\n\nconst ENVIRONMENT_VARIABLE_PREFIX = 'GCB_';\n\nlet _defaultValues: Object = {};\n\nexport function setConfigDefaults(defaultValues: Object) {\n  _defaultValues = defaultValues;\n}\n\nexport function getConfigValue(name: string, defaultValue?: string | boolean): string | boolean {\n\n  // Try to get config value from environment variable.\n  let envVariable = ENVIRONMENT_VARIABLE_PREFIX + name.toUpperCase();\n  let envValue = process.env[envVariable];\n  let argsValue = args[name.toLowerCase()];\n\n  return _firstDefinedValue(argsValue, envValue, defaultValue, _defaultValues[name]);\n}\n\nexport function getFlagValue(name: string, defaultValue?: boolean): boolean {\n  let configValue = getConfigValue(name, defaultValue);\n\n  return configValue === 'true' || configValue === true;\n}\n\nfunction _firstDefinedValue(...args: (string | boolean)[]): any {\n  for (let arg of args) {\n    if (arg !== undefined) {\n      return arg;\n    }\n  }\n\n  return undefined;\n}"],"sourceRoot":"/source/"}