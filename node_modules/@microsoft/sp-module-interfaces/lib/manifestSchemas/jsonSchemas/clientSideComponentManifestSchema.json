{
  "id": "clientSideComponentManifestSchema.json",
  "title": "Client-side component manifest",
  "description": "All client side components built on the SharePoint framework need a valid component manifest. This interface represents properties that are required by all types of client side components like Applications and Web Parts. Component specific manifests will extend this interface to add properties required by that component type.",

  "definitions": {
    "clientSideComponentManifest": {
      "type": "object",
      "required": [
        "componentType",
        "id",
        "manifestVersion",
        "version"
      ],
      "properties": {
        "manifestVersion": {
          "type": "integer",
          "title": "Manifest Version",
          "description": "Version of the component manifest schema. The value of this field is controlled by Microsoft. The purpose of this field is to help manage upgrades of the component manifest schema. A component developer needs to only confirm that they are using the correct value per the manifest schema. Please read the \"manifest upgrade rules\" for more details on when the schema could change. Note, manifest schema version upgrade will be considered a big API change event and will be advertised broadly.",
          "minimum": 2
        },

        "componentType": {
          "type": "string",
          "title": "Component Type",
          "description": "Type of client side component. Components with the \"Application\" type are defined by the \"IClientSideApplicationManifest\" interface. Components with the \"WebPart\" type are defined by the \"IClientSideWebPartManifest\" interface. Components with the \"Library\" type are defined by the \"IClientSideLibraryManifest\" interface.",
          "enum": [
            "Application",
            "WebPart",
            "Library"
          ]
        },

        "id": {
          "type": "string",
          "title": "ID",
          "description": "A universally unique component id. Each client side component is required to have this id. Once an id has been used for a component, it cannot be changed. A change in this value is treated same as the creation of a new component. Two components are never expected to have the same id.",
          "minLength": 10,
          "maxLength": 100
        },

        "version": {
          "$ref": "semver.json",
          "title": "Version",
          "description": "Client side component version. The value of this field is expected to be controlled by the developer of the client side component. The purpose of this field is to help client side component developers upgrade their client side components in a managed way. This helps the consumers of the client side component make decisions about when and how to upgrade the client side component. As the developer evolves the code for their client side component, they can decide to bump the MAJOR, MINOR or PATCH version of the component. All incompatible API changes should result in a MAJOR version bump. Backwards compatible functionality changes should result in a MINOR version bump, and backwards compatible bug fixes should result in a PATCH version bump. Please see http://semver.org for more details on how to manage the version of your components."
        },

        "loaderConfig": {
          "$ref": "clientSideComponentLoaderConfigSchema.json"
        }
      },

      "additionalProperties": true
    }
  },

  "oneOf": [
    {
      "$ref": "clientSideApplicationManifestSchema.json"
    },
    {
      "$ref": "clientSideLibraryManifestSchema.json"
    },
    {
      "$ref": "clientSideWebPartManifestSchema.json"
    }
  ]
}
