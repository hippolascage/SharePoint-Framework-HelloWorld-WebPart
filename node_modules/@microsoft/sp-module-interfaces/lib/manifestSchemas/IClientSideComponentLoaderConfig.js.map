{"version":3,"sources":["manifestSchemas/IClientSideComponentLoaderConfig.ts"],"names":[],"mappings":"AAAA;;;;GAIG","file":"manifestSchemas/IClientSideComponentLoaderConfig.js","sourcesContent":["/**\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * @file Client side component loader configuration.\r\n */\r\n\r\n/**\r\n * This interface describes how a client side component is to be loaded and initailized by a SharePoint client\r\n * framework. It contains all data for loading an entrypoint script and its dependency scripts.\r\n *\r\n * @beta\r\n */\r\nexport interface IClientSideComponentLoaderConfig {\r\n  /**\r\n   * Definition: This is an array of fully-qualified paths to be prepended to each of the script resource paths with the\r\n   *  \"internal\" or \"localized\" type. If one fails to load, the loader will attempt to load from the next until there\r\n   *  are no base paths remaning. All \"internal\" and \"localized\" script resources that do not have fully-qualified URLs\r\n   *  as their \"path\" field values must be hosted under each of the paths listed in this property. For example, if an\r\n   *  internal module's \"path\" field value is \"master_2015-04-20/my-application.bundle_1928f8a0.js\" and this field's\r\n   *  value is [ \"https://contoso.akamaihd.net/files/\", \"https://contoso.msecnd.net/files/\" ], the loader will first\r\n   *  attempt to load this script resource from the URL\r\n   *  \"https://contoso.akamaihd.net/files/master_2015-04-20/my-application.bundle_1928f8a0.js\". If loading from\r\n   *  that URL fails, the loader will then attempt to load this script resource from\r\n   *  \"https://contoso.msecnd.net/files/master_2015-04-20/my-application.bundle_1928f8a0.js\". If that URL fails to load,\r\n   *  the component will fail to load and an error will be returned. It is important to note that the support for\r\n   *  multiple base URLs is purely for failover support. This means that all files must be present on all hosts\r\n   *  listed in this field.\r\n   * Usage: Base URLs for script resources with the \"internal\" or \"localized\" type.\r\n   * Required: yes\r\n   * Localized: no\r\n   * Supported values: Any URL that contains all internal scripts referenced in the \"scriptResources\" dictionary.\r\n   * Example: [ \"https://contoso.akamaihd.net/files/\", \"https://contoso.msecnd.net/files/\" ]\r\n   */\r\n  internalModuleBaseUrls: string[];\r\n\r\n  /**\r\n   * Definition: This is the ID of one of the entries in the \"scriptResources\" dictionary. The loader will download and\r\n   *  evaluate the script resource referenced in this field, resolve all dependencies against the keys in the\r\n   *  \"scriptResources\", and return the exported object to the loader's calling function. The entry referenced in the\r\n   *  \"scriptResources\" dictionary must be of the \"internal\" or the \"localized\" type.\r\n   * Required: yes\r\n   * Localized: no\r\n   * Supported values: An entry in the \"scriptResources\" dictionary that defines the base exported module of the\r\n   *  component.\r\n   * Example: \"myApplication.bundle\"\r\n   */\r\n  entryModuleId: string;\r\n\r\n  /**\r\n   * Definition: The module referenced by the \"entryModuleId\" field may export an object with several fields. This value\r\n   *  optionally references the name of a field on the object exported by the module referenced by the \"entryModuleId\"\r\n   *  field. When this field has a value, the value of the referenced field on the object exported by the module\r\n   *  referenced by the \"entryModuleId\" field is returned when this manifest is loaded instead of the base exported\r\n   *  object. For example, if entryModuleId refers to a module with with a top-level export of\r\n   *  \"{ foo: 'bar', baz: 123 }\" and:\r\n   *    - if this field is unset, the value returned by the modue loader is \"{ foo: 'bar', baz: 123 }\"\r\n   *    - if this field is set to \"foo\", the value returned by the modue loader is \"bar\"\r\n   *    - if this field is set to \"bar\", the value returned by the modue loader is undefined (as \"bar\" is not a key in\r\n   *        the top-level export).\r\n   *\r\n   * Usage: To reference a field in the top-level export.\r\n   * Required: no\r\n   * Example: mySpWebpart\r\n   */\r\n  exportedModuleName?: string;\r\n\r\n  /**\r\n   * Definition: This is a dictionary of named script resources. \"internal\" and \"localized\" modules may reference each\r\n   *  other and \"framework\" modules are expected to be provided by the framework runtime. The resource named in the\r\n   *  \"entryModuleId\" must contain the component's exported object.\r\n   * Required: yes\r\n   * Localized: no\r\n   * Supported values: A dictionary of named script resources.\r\n   * Example:\r\n   *  {\r\n   *    \"myApplication.bundle\": {\r\n   *      \"type\": \"internal\",\r\n   *      \"path\": \"master_2015-04-20/my-application.bundle_1928f8a0.js\"\r\n   *    },\r\n   *    \"@microsoft/sp-client-base\": {\r\n   *      \"type\": \"framework\",\r\n   *      \"version\": \"latest\"\r\n   *    },\r\n   *    \"@microsoft/sp-client-preview\": {\r\n   *      \"type\": \"framework\",\r\n   *      \"version\": \"latest\"\r\n   *    },\r\n   *    \"jQuery\": {\r\n   *      \"type\": \"framework\",\r\n   *      \"version\": \"2.2.4\",\r\n   *      \"path\": \"https://code.jquery.com/jquery-2.2.4.min.js\"\r\n   *    },\r\n   *    \"myApplication_strings\": {\r\n   *      \"type\": \"localized\",\r\n   *      \"defaultPath\": \"master_2015-04-20/my-application_strings_default_af378e0d.js\",\r\n   *      \"paths\": {\r\n   *        \"en-us\": \"master_2015-04-20/my-application_strings_en-us_d38ff012.js\",\r\n   *        \"fr-fr\": \"master_2015-04-20/my-application_strings_fr-fr_138af7e4.js\"\r\n   *      }\r\n   *    }\r\n   *  }\r\n   */\r\n  scriptResources: { [name: string]: IModuleConfig };\r\n}\r\n\r\n/**\r\n * This is the base interface for a set of debug and non-debug/minimized paths. The paths in this object are\r\n *  loaded in exactly the same way as any other internal path.\r\n *\r\n * @beta\r\n */\r\nexport interface IPath {\r\n  /**\r\n   * Definition: A path to this module's javascript resource either as a fully-qualified URL or as a path under the\r\n   *  paths provided in the \"internalModuleBaseUrls\" field. The script referenced by this field is loaded by default\r\n   *  unless a debug version of the script is provided and explicitly requested.\r\n   * Required: yes\r\n   * Supported values: The path to the default/non-debug script either as a fully-qualified URL or as a path under the\r\n   *  paths providedin the \"internalModuleBaseUrls\" field.\r\n   * Example: \"master_2015-04-20/my-application.bundle_1928f8a0.js\"\r\n   */\r\n  default: string;\r\n\r\n  /**\r\n   * Definition: A path to this module's debug javascript resource either as a fully-qualified URL or as a path under\r\n   *  the paths provided in the \"internalModuleBaseUrls\" field. The script referenced by this field is only loaded if\r\n   *  it is present and debug scripts are explicitly requested.\r\n   * Required: no\r\n   * Supported values: The path to the debug script either as a fully-qualified URL or as a path under the\r\n   *  paths providedin the \"internalModuleBaseUrls\" field.\r\n   * Example: \"master_2015-04-20/my-application.bundle_18182c39.debug.js\"\r\n   */\r\n  debug?: string;\r\n}\r\n\r\n/**\r\n * This is the base interface for a script module's definition.\r\n *\r\n * @beta\r\n */\r\nexport interface IModuleConfig {\r\n  /**\r\n   * Definition: The type of the script block. \"framework\" modules are expected to be provided by the framework runtime,\r\n   *  \"internal\" and \"localized\" modules must be available on the paths provided in the \"internalModuleBaseUrls\" field.\r\n   *  Modules with the \"internal\" type use the \"IInternalModuleConfig\" interface. Modules with the \"framework\" type use\r\n   *  the \"IFrameworkModuleConfig\" interface. Modules with the \"localized\" type use the \"ILocalizedInternalModuleConfig\"\r\n   *  interface.\r\n   * Required: yes\r\n   * Localized: no\r\n   * Supported values: \"internal\", \"framework\", \"localized\"\r\n   * Example: \"localized\"\r\n   */\r\n  type: 'internal' | 'framework' | 'localized';\r\n\r\n  /**\r\n   * Definition: If set to \"true\", this module should not be preloaded when loading the component. The most common case\r\n   *  for setting this property to \"true\" is when a module is defined in a manifest, but is not required for the\r\n   *  module referenced in \"entryModuleId\" to load. Modules may be defined that are loaded asynchronously, and these\r\n   *  modules do not need to be preloaded. This field implicitly defaults to \"false\".\r\n   * Usage: Instructs the module loader to not preload this module.\r\n   * Required: no\r\n   * Example: true\r\n   */\r\n  shouldNotPreload?: boolean;\r\n}\r\n\r\n/**\r\n * This is the interface for a script module with the \"framework\" type. Modules of this type will be provided by the\r\n *  framework runtime. The key in the \"scriptResources\" dictionary must be the name of a standard framework library.\r\n *\r\n * @beta\r\n */\r\nexport interface IFrameworkModuleConfig extends IModuleConfig {\r\n  /**\r\n   * Definition: The version of the framework-supplied module to be loaded. For framework runtime modules such as\r\n   *  \"@microsoft/sp-client-base,\" it is recommended the version of the framework module the component was developed\r\n   *  against be specified.\r\n   * Required: yes\r\n   * Localized: no\r\n   * Supported values: string representing a semantic version (http://semver.org), or \"latest\".\r\n   * Example: \"2.2.4\"\r\n   */\r\n  version: string;\r\n\r\n  /**\r\n   * Definition: A path to the framework-supplied module in case the framework fails to load the requested version. This\r\n   *  must be either a fully-qualified URL, or a path under the paths specified in the \"internalModuleBaseUrls\" field.\r\n   *  If this field is not specified and the version is not available in the framework runtime, the closest matching\r\n   *  version of the module will be provided instead.\r\n   * Required: no\r\n   * Localized: no\r\n   * Supported values: The path to the module either as a fully-qualified URL or as a path under the\r\n   *  paths providedin the \"internalModuleBaseUrls\" field.\r\n   * Example: \"https://code.jquery.com/jquery-2.2.4.min.js\"\r\n   */\r\n  failoverPath?: string | IPath;\r\n}\r\n\r\n/**\r\n * This is the interface for a script module with the \"internal\" type. Modules of this type must be provided by the\r\n *  component developer.\r\n *\r\n * @beta\r\n */\r\nexport interface IInternalModuleConfig extends IModuleConfig {\r\n  /**\r\n   * Definition: A path to this module's javascript resource either as a fully-qualified URL or as a path under the\r\n   *  paths provided in the \"internalModuleBaseUrls\" field. For example, if this field's value is\r\n   *  \"master_2015-04-20/my-application.bundle_1928f8a0.js\" and the \"internalModuleBaseUrls\" field's value is\r\n   *  [ \"https://contoso.akamaihd.net/files/\", \"https://contoso.msecnd.net/files/\" ], the loader will first attempt to\r\n   *  load this script resource from the URL\r\n   *  \"https://contoso.akamaihd.net/files/master_2015-04-20/my-application.bundle_1928f8a0.js\". If loading from that URL\r\n   *  fails, the loader will then attempt to load this script resource from\r\n   *  \"https://contoso.msecnd.net/files/master_2015-04-20/my-application.bundle_1928f8a0.js\". If that URL fails to load,\r\n   *  the component will fail to load and an error will be returned.\r\n   * Required: yes\r\n   * Localized: no\r\n   * Supported values: The path to the module either as a fully-qualified URL or as a path under the\r\n   *  paths providedin the \"internalModuleBaseUrls\" field.\r\n   * Example: \"master_2015-04-20/my-application.bundle_1928f8a0.js\"\r\n   */\r\n  path: string | IPath;\r\n\r\n  /**\r\n   * Definition: In order to load scripts that don't follow the AMD/module-pattern where \"define\" or \"require\" is\r\n   *  called and dependencies are explicitly listed and exports are explicitly returned, the module loader needs to\r\n   *  know which global variable must be examined. If this propery is specified, this module is considered non-AMD and\r\n   *  the module loader will not expect \"define\" or \"require\" to be called. Instead, it will wait for the script to\r\n   *  finish loading and examine the global variable specified in this field.\r\n   * Required: no\r\n   * Localized: no\r\n   * Supported values: Variable names that are expected to be populated after this module is loaded. For example,\r\n   *  if this module is describing jQuery, this value should probably be \"$\". If an empty string is specified,\r\n   *  the module loader will throw an exception and the component will fail to load.\r\n   * Example: \"$\"\r\n   */\r\n  globalName?: string;\r\n\r\n  /**\r\n   * Definition: For non-AMD/module-pattern scripts that have dependencies (for example, jQuery plugins), the module\r\n   *  loader will ensure that those dependencies are already loaded. Entries in the array specified in this field must\r\n   *  refer to other non-AMD modules in this component. This field is not required to have a value for\r\n   *  non-AMD modules. If any values are specified that do not refer to other modules in the same component manifest\r\n   *  that this module is specified, the module loader will throw an exception and the component will fail to load.\r\n   * Required: no\r\n   * Supported values: Names of other non-AMD-pattern modules in this loader configuration, as specified by the key\r\n   *  IClientSideComponentLoaderConfig.scriptResources[]\r\n   * Example: [\"jquery\"]\r\n   */\r\n  globalDependencies?: string[];\r\n}\r\n\r\n/**\r\n * This is the interface for a script module with the \"localized\" type. Modules of this type must be provided by the\r\n *  component developer. These script resources are similar to those of the \"internal\" type, but they may be present\r\n *  at a number of different paths, to be selected by the user's locale. Paths in this module type are loaded exactly\r\n *  the same way as \"internal\" modules are.\r\n *\r\n * @beta\r\n */\r\nexport interface ILocalizedInternalModuleConfig extends IModuleConfig {\r\n  /**\r\n   * Definition: A path to this module's default locale javascript resource either as a fully-qualified URL or as a\r\n   *  path under the paths provided in the \"internalModuleBaseUrls\" field. If the user's locale does not resolve to one\r\n   *  of the paths specified in the \"paths\" field, the path in this field is used. Paths in this module type are\r\n   *  treated exactly the same way paths in modules of the \"internal\" type are treated.\r\n   * Required: yes\r\n   * Localized: no\r\n   * Supported values: The path to the default locale version of the module either as a fully-qualified URL or as a path\r\n   *  under the paths providedin the \"internalModuleBaseUrls\" field.\r\n   * Example: \"master_2015-04-20/my-application_strings_default_af378e0d.js\"\r\n   */\r\n  defaultPath: string | IPath;\r\n\r\n  /**\r\n   * Definition: This is a dictionary of locale keys (in the \"ll-cc\" format) to paths to this module's localed\r\n   *  javascript resource either as a fully-qualified URL or as a path under the paths provided in the\r\n   *  \"internalModuleBaseUrls\" field. The loader will attempt to resolve the user's locale to one of the paths provided\r\n   *  by this field, and will load the script resource under that path. If the user's locale does not resolve to one\r\n   *  of the paths specified in this field, the path in \"defaultPath\" field is used. For example, if the user's locale\r\n   *  is \"en-gb\", and this field's value contains the keys [ \"en-us\", \"en-gb\", \"fr-fr\" ], the path specified by the\r\n   *  \"en-gb\" key will be used. If the user's locale is \"en-gb\", and this field's value contains the keys [ \"en-us\",\r\n   *  \"fr-fr\" ], the path specified by the \"en-us\" key will be used. If the user's locale is \"en-gb\", and this field's\r\n   *  value contains the keys [ \"es-es\", \"fr-fr\" ], the path specified by the \"defaultPath\" field will be used.\r\n   *  Paths in this module type are treated exactly the same way paths in modules of the \"internal\" type are treated.\r\n   * Required: no\r\n   * Localized: no\r\n   * Supported values: A dictionary of locale-to-path mappings.\r\n   * Example:\r\n   *  {\r\n   *    \"en-us\": \"master_2015-04-20/my-application_strings_en-us_d38ff012.js\",\r\n   *    \"fr-fr\": \"master_2015-04-20/my-application_strings_fr-fr_138af7e4.js\"\r\n   *  }\r\n   */\r\n  paths?: { [locale: string]: string | IPath };\r\n}\r\n"],"sourceRoot":"/source/"}