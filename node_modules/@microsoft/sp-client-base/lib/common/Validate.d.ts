/**
 * This class implements provides a standard way to validate properties and function parameters.
 * Unlike an assertion, the Validate checks are always performed and will always throw an error,
 * even in a production release.  As such, be careful not to overuse these checks in a way
 * that might impact performance.
 * @public
 */
export default class Validate {
    /**
     * Throws an exception if the specified value is not true.
     * @param value - the value to check
     * @param variableName - the program variable name, which will be mentioned in the error message
     */
    static isTrue(value: boolean, variableName: string): void;
    /**
     * Throws an exception if the specified value is null or undefined.
     * @param value - the value to check
     * @param variableName - the program variable name, which will be mentioned in the error message
     */
    static isNotNullOrUndefined(value: any, variableName: string): void;
    /**
     * Throws an exception if the specified string is null, undefined, or an empty string.
     * @param value - the value to check
     * @param variableName - the program variable name, which will be mentioned in the error message
     */
    static isNonemptyString(value: string, variableName: string): void;
}
