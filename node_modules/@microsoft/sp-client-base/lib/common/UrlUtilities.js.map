{"version":3,"sources":["common/UrlUtilities.ts"],"names":[],"mappings":"AAAA;;GAEG;;AAEH,IAAY,MAAM,WAAM,6BAA6B,CAAC,CAAA;AACtD,yBAAqB,YAAY,CAAC,CAAA;AAElC;;;;GAIG;AACH;IAAA;IAgCA,CAAC;IA9BC;;;;;;;;OAQG;IACW,2BAAc,GAA5B,UAA6B,GAAW;QACtC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAClC,CAAC;IAEF;;;;;;;;;;OAUG;IACa,wCAA2B,GAA1C,UAA2C,KAAa;QACtD,kBAAQ,CAAC,oBAAoB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAC9C,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAClC,KAAK,GAAG,MAAI,KAAK,MAAG,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IACH,mBAAC;AAAD,CAhCA,AAgCC,IAAA;AAhCD;8BAgCC,CAAA","file":"common/UrlUtilities.js","sourcesContent":["/**\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n */\r\n\r\nimport * as lodash from '@microsoft/sp-lodash-subset';\r\nimport Validate from './Validate';\r\n\r\n/**\r\n * Common helper functions for working with URLs.  These utilities are intended to be simple,\r\n * small, and extremely common.  Do not add advanced parsing logic to this file.\r\n * @public\r\n */\r\nexport default class UrlUtilities {\r\n\r\n  /**\r\n   * Removes any slash characters from the end of the URL.\r\n   * This function assumes that the input is already a valid absolute or server-relative URL.\r\n   * Examples:\r\n   *   removeEndSlash('http://example.com/') ---> 'http://example.com'\r\n   *   removeEndSlash('/example')            ---> '/example'\r\n   *   removeEndSlash('/')                   ---> ''\r\n   * @param url the URL to be normalized\r\n   */\r\n  public static removeEndSlash(url: string): string {\r\n    return lodash.trimEnd(url, '/');\r\n  }\r\n\r\n /**\r\n  * Converts a variable to an OData string literal and escapes apostrophes.\r\n  * OData specification:\r\n  * https://tools.oasis-open.org/version-control/\r\n  *   browse/wsvn/odata/trunk/spec/ABNF/odata-abnf-construction-rules.txt\r\n  * SQUOTE-in-string = SQUOTE SQUOTE ; two consecutive single quotes represent one within a string literal\r\n  * Examples:\r\n  *   convertToODataStringLiteral(\"example's list\") ---> \"'example''s list'\"\r\n  *   convertToODataStringLiteral(\"example list\") ---> \"'example list'\"\r\n  *   convertToODataStringLiteral(\"'example list'\") ---> \"'''example list'''\"\r\n  */\r\n  public static  convertToODataStringLiteral(value: string): string {\r\n    Validate.isNotNullOrUndefined(value, 'value');\r\n    value = value.replace(/'/g, \"''\");\r\n    value = `'${value}'`;\r\n    return value;\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}