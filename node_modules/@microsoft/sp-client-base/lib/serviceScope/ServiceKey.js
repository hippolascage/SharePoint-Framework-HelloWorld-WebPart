"use strict";
var Validate_1 = require('../common/Validate');
/**
 * The ServiceKey is a lookup key that is used when calling ServiceScope.consume()
 * to fetch a dependency.  The key also defines a default implementation of the
 * dependency, which will be autocreated by the root scope if the dependency is not found.
 * Providing a default implementation ensures that new dependencies can be safely
 * introduced without inadvertently breaking components that are loaded by an older host
 * (that does not provide the new dependency).
 * @public
 */
var ServiceKey = (function () {
    /**
     * PRIVATE - Do not call this from your own code.
     */
    function ServiceKey(id, name, defaultCreator) {
        this.id = id;
        this.name = name;
        this.defaultCreator = defaultCreator;
    }
    /**
     * Constructs a new ServiceKey whose default implementation will be a new instance of
     * a TypeScript class that accepts the standard constructor parameter.  If you want to
     * specify custom constructor parameters, use createCustom() instead.
     * @param name - A name such as "MyApplication.IMyService" which should be unique within
     *   your application.
     * @param serviceClass - the TypeScript class that implements the service.
     * @returns - the newly created ServiceKey
     */
    ServiceKey.create = function (name, serviceClass) {
        // (createCustom() will validate name)
        Validate_1.default.isNotNullOrUndefined(serviceClass, 'serviceClass');
        return ServiceKey.createCustom(name, function (serviceScope) {
            return new serviceClass(serviceScope);
        });
    };
    /**
     * Constructs a new ServiceKey whose default implementation will be obtained
     * by invoking the specified callback.
     * @param name - A name such as "MyApplication.IMyService" which should be unique within
     *   your application.
     * @param defaultCreator - A callback that returns an object that implements the T interface
     * @returns - the newly created ServiceKey
     */
    ServiceKey.createCustom = function (name, defaultCreator) {
        Validate_1.default.isNonemptyString(name, 'name');
        Validate_1.default.isNotNullOrUndefined(defaultCreator, 'defaultCreator');
        ServiceKey._lastId++;
        var id = ServiceKey._lastId.toString();
        return new ServiceKey(id, name, defaultCreator);
    };
    ServiceKey._lastId = 0;
    return ServiceKey;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ServiceKey;

//# sourceMappingURL=ServiceKey.js.map
