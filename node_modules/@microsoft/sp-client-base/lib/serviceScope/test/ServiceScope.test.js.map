{"version":3,"sources":["serviceScope/test/ServiceScope.test.ts"],"names":[],"mappings":"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","file":"serviceScope/test/ServiceScope.test.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\n\r\nimport ServiceScope from '../ServiceScope';\r\nimport ServiceKey from '../ServiceKey';\r\n\r\nconst assert: Chai.AssertStatic = chai.assert;\r\n\r\nconst aServiceKey: ServiceKey<A> = ServiceKey.createCustom<A>('sp-client-base:A',\r\n  (serviceScope: ServiceScope) => { return new A(serviceScope, 'autocreated-A'); }\r\n);\r\n\r\nconst bServiceKey: ServiceKey<B> = ServiceKey.createCustom<B>('sp-client-base:B',\r\n  (serviceScope: ServiceScope) => {\r\n    const b: B = new B(serviceScope);\r\n    b.name = 'autocreated-B';\r\n    return b;\r\n  }\r\n);\r\n\r\nconst cServiceKey: ServiceKey<C> = ServiceKey.createCustom<C>('sp-client-base:C',\r\n  (serviceScope: ServiceScope) => {\r\n    const c: C = new C(serviceScope);\r\n    c.name = 'autocreated-C';\r\n    return c;\r\n  }\r\n);\r\n\r\nclass A {\r\n  public name: string;\r\n  public b: B;\r\n  public c: C;\r\n\r\n  constructor(serviceScope: ServiceScope, name: string) {\r\n    this.name = name;\r\n\r\n    serviceScope.whenFinished(() => {\r\n      this.b = serviceScope.consume(bServiceKey);\r\n      this.c = serviceScope.consume(cServiceKey);\r\n    });\r\n  }\r\n}\r\n\r\nclass B {\r\n  public name: string;\r\n  public a: A;\r\n  public c: C;\r\n\r\n  constructor(serviceScope: ServiceScope) {\r\n    this.name = 'B';\r\n    serviceScope.whenFinished(() => {\r\n      this.a = serviceScope.consume(aServiceKey);\r\n      this.c = serviceScope.consume(cServiceKey);\r\n    });\r\n  }\r\n}\r\n\r\nclass C {\r\n  public name: string;\r\n  public a: A;\r\n  public b: B;\r\n\r\n  constructor(serviceScope: ServiceScope) {\r\n    this.name = 'C';\r\n    serviceScope.whenFinished(() => {\r\n      this.a = serviceScope.consume(aServiceKey);\r\n      this.b = serviceScope.consume(bServiceKey);\r\n    });\r\n  }\r\n}\r\n\r\ndescribe('ServiceScope tests', () => {\r\n  describe('Circular dependency tests (A, B, C)', () => {\r\n    it('should autocreate objects if they are not provided by any scope', (done: MochaDone) => {\r\n\r\n      const rootScope: ServiceScope = ServiceScope.startNewRoot();\r\n      rootScope.finish();\r\n\r\n      const childScope: ServiceScope = rootScope.startNewChild();\r\n      childScope.finish();\r\n\r\n      const a: A = childScope.consume(aServiceKey);\r\n      const b: B = childScope.consume(bServiceKey);\r\n      const c: C = childScope.consume(cServiceKey);\r\n\r\n      assert.equal(a.name,   'autocreated-A');\r\n      assert.equal(a.b.name, 'autocreated-B');\r\n      assert.equal(a.c.name, 'autocreated-C');\r\n\r\n      assert.equal(b.name,   'autocreated-B');\r\n      assert.equal(b.a.name, 'autocreated-A');\r\n      assert.equal(b.c.name, 'autocreated-C');\r\n\r\n      assert.equal(c.name,   'autocreated-C');\r\n      assert.equal(c.a.name, 'autocreated-A');\r\n      assert.equal(c.b.name, 'autocreated-B');\r\n\r\n      // Also verify that we get back the same objects if we consume from the root\r\n      const a2: A = rootScope.consume(aServiceKey);\r\n      const b2: B = rootScope.consume(bServiceKey);\r\n      const c2: C = rootScope.consume(cServiceKey);\r\n      assert.equal(a, a2);\r\n      assert.equal(b, b2);\r\n      assert.equal(c, c2);\r\n\r\n      done();\r\n    });\r\n\r\n    it('should NOT autocreate objects if they are provded', (done: MochaDone) => {\r\n\r\n      const rootScope: ServiceScope = ServiceScope.startNewRoot();\r\n      rootScope.finish();\r\n\r\n      const childScope: ServiceScope = rootScope.startNewChild();\r\n      const a: A = childScope.provide(aServiceKey, new A(childScope, 'A'));\r\n      const b: B = childScope.createAndProvide(bServiceKey, B);\r\n      const c: C = childScope.createAndProvide(cServiceKey, C);\r\n      childScope.finish();\r\n\r\n      assert.equal(a.name,   'A'); // i.e. not 'autocreated-A'\r\n      assert.equal(a.b.name, 'B'); // i.e. not 'autocreated-B'\r\n      assert.equal(a.c.name, 'C'); // i.e. not 'autocreated-C'\r\n\r\n      assert.equal(b.name,   'B');\r\n      assert.equal(b.a.name, 'A');\r\n      assert.equal(b.c.name, 'C');\r\n\r\n      assert.equal(c.name,   'C');\r\n      assert.equal(c.a.name, 'A');\r\n      assert.equal(c.b.name, 'B');\r\n\r\n      // Also verify that we get back the same objects if we consume after finish()\r\n      const a2: A = childScope.consume(aServiceKey);\r\n      const b2: B = childScope.consume(bServiceKey);\r\n      const c2: C = childScope.consume(cServiceKey);\r\n      assert.equal(a, a2);\r\n      assert.equal(b, b2);\r\n      assert.equal(c, c2);\r\n\r\n      done();\r\n    });\r\n\r\n    it('should allow new instances to be introduced in a child scope', (done: MochaDone) => {\r\n\r\n      const rootScope: ServiceScope = ServiceScope.startNewRoot();\r\n      rootScope.finish();\r\n\r\n      // Start with the same example from above\r\n      const childScope: ServiceScope = rootScope.startNewChild();\r\n      const a: A = childScope.provide(aServiceKey, new A(childScope, 'A'));\r\n      const b: B = childScope.createAndProvide(bServiceKey, B);\r\n      const c: C = childScope.createAndProvide(cServiceKey, C);\r\n      childScope.finish();\r\n\r\n      // Add a grandChildScope that introduces a new A and B instance\r\n      const grandChildScope: ServiceScope = childScope.startNewChild();\r\n      const otherA: A = grandChildScope.provide(aServiceKey, new A(grandChildScope, 'other-A'));\r\n      const otherB: B = grandChildScope.createAndProvide(bServiceKey, B);\r\n      otherB.name = 'other-B';\r\n      grandChildScope.finish();\r\n\r\n      assert.equal(otherA.name,   'other-A');\r\n      assert.equal(otherA.b.name, 'other-B');\r\n      assert.equal(otherA.c.name, 'C');\r\n\r\n      assert.equal(otherB.name,   'other-B');\r\n      assert.equal(otherB.a.name, 'other-A');\r\n      assert.equal(otherB.c.name, 'C');\r\n\r\n      // But note that if we consume C, we get the parent's instance that is\r\n      // still referring to the old A and B.  This is a little counterintuitive, but\r\n      // the only other possible design would be to autocreate a new instance of C\r\n      // (which has even more problems).\r\n      const c2: C = grandChildScope.consume(cServiceKey);\r\n      assert.equal(c2.name,   'C');\r\n      assert.equal(c2.a.name, 'A'); // i.e. not 'other-A'\r\n      assert.equal(c2.b.name, 'B'); // i.e. not 'other-B'\r\n\r\n      done();\r\n    });\r\n\r\n    it('should support creating objects without adding to any scope', (done: MochaDone) => {\r\n\r\n      const rootScope: ServiceScope = ServiceScope.startNewRoot();\r\n\r\n      // i.e. we don't insist that objects be added to a scope.  But note that\r\n      // as a result we end up with 'A' and 'autocreated-A' when other objects\r\n      // try to consume it\r\n      const a: A = new A(rootScope, 'A');\r\n      const b: B = new B(rootScope);\r\n\r\n      rootScope.finish();\r\n\r\n      const c: C = new C(rootScope);\r\n\r\n      assert.equal(a.name, 'A');\r\n      assert.equal(a.b.name, 'autocreated-B');\r\n      assert.equal(a.c.name, 'autocreated-C');\r\n\r\n      assert.equal(b.name, 'B');\r\n      assert.equal(b.a.name, 'autocreated-A');\r\n      assert.equal(b.c.name, 'autocreated-C');\r\n\r\n      assert.equal(c.name, 'C');\r\n      assert.equal(c.a.name, 'autocreated-A');\r\n      assert.equal(c.b.name, 'autocreated-B');\r\n\r\n      done();\r\n    });\r\n\r\n  });\r\n});\r\n"],"sourceRoot":"/src"}