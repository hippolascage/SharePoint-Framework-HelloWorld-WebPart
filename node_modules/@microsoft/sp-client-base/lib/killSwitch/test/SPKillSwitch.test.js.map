{"version":3,"sources":["killSwitch/test/SPKillSwitch.test.ts"],"names":[],"mappings":"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","file":"killSwitch/test/SPKillSwitch.test.js","sourcesContent":["/**\r\n * @copyright (c) Microsoft Corporation. All rights reserved.\r\n */\r\n\r\nimport SPKillSwitch from '../SPKillSwitch';\r\nimport Guid from '../../guid/Guid';\r\n\r\nconst assert: Chai.AssertStatic = chai.assert;\r\n\r\ndescribe('SPKillSwitches tests', () => {\r\n\r\n  const undefinedKillSwitches: { [key: string]: boolean } = undefined;\r\n\r\n  /* tslint:disable:no-null-keyword */\r\n  const nullKillSwitches: { [key: string]: boolean } = null;\r\n  /* tslint:enable:no-null-keyword */\r\n\r\n  const emptyKillSwitches: { [key: string]: boolean } = {};\r\n\r\n  const validKillSwitchesWithNull: { [key: string]: boolean } = {\r\n    'Guid(1158fbf1-8dac-4252-b378-77489fd230d8)': true,\r\n    null: true,\r\n    '{e25dc355-64df-4d3d-beb8-001e5dae531c}': true\r\n  };\r\n\r\n  const validKillSwitchesWithUndefined: { [key: string]: boolean } = {\r\n    'Guid(1158fbf1-8dac-4252-b378-77489fd230d8)': true,\r\n    undefined: true,\r\n    '{e25dc355-64df-4d3d-beb8-001e5dae531c}': true\r\n  };\r\n\r\n  const validNormalizedKillSwitchesWithNull: { [key: string]: boolean } = {\r\n    '9d4f312c-e365-45b4-b6ef-fa24e512e7e5': true,\r\n    null: true,\r\n    '1158fbf1-8dac-4252-b378-77489fd230d8': true\r\n  };\r\n\r\n  const validNormalizedKillSwitchesWithUndefined: { [key: string]: boolean } = {\r\n    '9d4f312c-e365-45b4-b6ef-fa24e512e7e5': true,\r\n    undefined: true,\r\n    '1158fbf1-8dac-4252-b378-77489fd230d8': true\r\n  };\r\n\r\n  const validKillSwitches: { [key: string]: boolean } = {\r\n    '9d4f312c-e365-45b4-b6ef-fa24e512e7e5': true,\r\n    '{e25dc355-64df-4d3d-beb8-001e5dae531c}': true,\r\n    'Guid(1158fbf1-8dac-4252-b378-77489fd230d8)': true\r\n  };\r\n\r\n  const validNormalizedKillSwitches: { [key: string]: boolean } = {\r\n    '9d4f312c-e365-45b4-b6ef-fa24e512e7e5': true,\r\n    'e25dc355-64df-4d3d-beb8-001e5dae531c': true,\r\n    '1158fbf1-8dac-4252-b378-77489fd230d8': true\r\n  };\r\n\r\n  const invalidKillSwitches: { [key: string]: boolean } = {\r\n    'not-a-guid': true,\r\n    '{not-a-guid}': true,\r\n    'Guid(not-a-guid)': true,\r\n    '': true,\r\n    '1158fbf1-8dac-5252-b378-77489fd230d8': true, // 4 is not the first character in the third block\r\n    '1158fbf1-8dac-4252-6378-77489fd230d8': true, // [ab89] is not the first character in the fourth block\r\n    '9x4f312y-z365-45b4-b6ef-fa24e512e7e5': true, // non-hex characters\r\n    undefined: true,\r\n    null: true\r\n  };\r\n\r\n  const invalidNormalizedKillSwitches: { [key: string]: boolean } = {\r\n    'not-a-guid': true,\r\n    '': true,\r\n    '1158fbf1-8dac-5252-b378-77489fd230d8': true, // 4 is not the first character in the third block\r\n    '9x4f312y-z365-45b4-b6ef-fa24e512e7e5': true, // non-hex characters\r\n    undefined: true,\r\n    null: true\r\n  };\r\n\r\n  const validAndInvalidKillSwitches: { [key: string]: boolean } = {\r\n    'not-a-guid': true,\r\n    '': true,\r\n    '9d4f312c-e365-45b4-b6ef-fa24e512e7e5': true,\r\n    '1158fbf1-8dac-5252-b378-77489fd230d8': true, // 4 is not the first character in the third block\r\n    '9x4f312y-z365-45b4-b6ef-fa24e512e7e5': true, // non-hex characters\r\n    undefined: true,\r\n    null: true\r\n  };\r\n\r\n  it('Can parse an undefined killswitch array', () => {\r\n    SPKillSwitch.initialize(undefinedKillSwitches);\r\n    assert.isTrue(true);\r\n  });\r\n\r\n  it('Can parse a null killswitch array', () => {\r\n    SPKillSwitch.initialize(nullKillSwitches);\r\n    assert.isTrue(true);\r\n  });\r\n\r\n  it('Can parse an empty killswitch array', () => {\r\n    SPKillSwitch.initialize(emptyKillSwitches);\r\n    assert.isTrue(true);\r\n  });\r\n\r\n  it('Can parse a killswitch array with an undefined entry', () => {\r\n    SPKillSwitch.initialize(validKillSwitchesWithUndefined);\r\n    assert.isTrue(true);\r\n  });\r\n\r\n  it('Can parse a killswitch array with an null entry', () => {\r\n    SPKillSwitch.initialize(validKillSwitchesWithNull);\r\n    assert.isTrue(true);\r\n  });\r\n\r\n  it('Can parse a normalized killswitch array with an undefined entry', () => {\r\n    SPKillSwitch.initialize(validNormalizedKillSwitchesWithUndefined);\r\n    assert.isTrue(true);\r\n  });\r\n\r\n  it('Can parse a normalized killswitch array with an null entry', () => {\r\n    SPKillSwitch.initialize(validNormalizedKillSwitchesWithNull);\r\n    assert.isTrue(true);\r\n  });\r\n\r\n  it('Can parse a valid killswitch array', () => {\r\n    SPKillSwitch.initialize(validKillSwitches);\r\n    assert.isTrue(true);\r\n  });\r\n\r\n  it('Can parse a valid normalized killswitch array', () => {\r\n    SPKillSwitch.initialize(validNormalizedKillSwitches);\r\n    assert.isTrue(true);\r\n  });\r\n\r\n  it('Can parse an invalid killswitch array', () => {\r\n    SPKillSwitch.initialize(invalidKillSwitches);\r\n    assert.isTrue(true);\r\n  });\r\n\r\n  it('Can parse a invalid normalized killswitch array', () => {\r\n    SPKillSwitch.initialize(invalidNormalizedKillSwitches);\r\n    assert.isTrue(true);\r\n  });\r\n\r\n  it('Can parse an array with both valid and invalidkillswitches', () => {\r\n    SPKillSwitch.initialize(validAndInvalidKillSwitches);\r\n    describe('SPKillSwitches object tests', () => {\r\n      it('Can find a killswitch contained in SPKillSwitch object', () => {\r\n        assert.isTrue(\r\n          SPKillSwitch.isActivated(Guid.tryParse('9d4f312c-e365-45b4-b6ef-fa24e512e7e5')\r\n            , '9/17/2015', 'SPEED_FeatureX'));\r\n      });\r\n      it('Cannot find a killswitch not contained in a SPKillSwitch object', () => {\r\n        assert.isTrue(\r\n          !SPKillSwitch.isActivated(Guid.tryParse('{e25dc355-64df-4d3d-beb8-001e5dae531c}')\r\n            , '9/17/2015', 'SPEED_FeatureX'));\r\n      });\r\n      it('Cannot find an invalid killswitch not contained in a SPKillSwitch object', () => {\r\n        assert.isTrue(\r\n          !SPKillSwitch.isActivated(Guid.tryParse('not-a-guid'), '9/17/2015', 'SPEED_FeatureX'));\r\n      });\r\n      it('Cannot find a null killswitch in a SPKillSwitch object', () => {\r\n        /* tslint:disable:no-null-keyword */\r\n        assert.isTrue(!SPKillSwitch.isActivated(null, '9/17/2015', 'SPEED_FeatureX'));\r\n        /* tslint:enable:no-null-keyword */\r\n      });\r\n\r\n      it('Cannot find an undefined killswitch in a SPKillSwitch object', () => {\r\n        assert.isTrue(!SPKillSwitch.isActivated(undefined, '9/17/2015', 'SPEED_FeatureX'));\r\n      });\r\n    });\r\n    assert.isTrue(true);\r\n  });\r\n});\r\n"],"sourceRoot":"/src"}