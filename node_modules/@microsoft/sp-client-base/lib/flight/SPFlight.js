/**
 * @copyright Microsoft Corporation. All rights reserved.
 */
"use strict";
/**
 * NOT FOR USE BY THIRD PARTY DEVELOPERS
 *
 * This class supports Microsoft's internal deployment workflow.
 * For more information, see https://microsoft.sharepoint.com/teams/odsp/_layouts/OneNote.aspx
 * ?id=/teams/odsp/Shared%20Documents/MI-6%20Team/MI-6%20Team/Global/SPO%20Flighting
 */
var SPFlight = (function () {
    function SPFlight() {
    }
    /**
     * RESERVED FOR INTERNAL USAGE.  This method is invoked automatically by the system shell.
     * The application code should not call it directly.
     */
    SPFlight.initialize = function (flights) {
        this._enabledFlights = flights || [];
    };
    /**
     * NOT FOR USE BY THIRD PARTY DEVELOPERS
     *
     * This function will determine if a flight is enabled in the global list.
     */
    SPFlight.isEnabled = function (flight) {
        if (!flight || flight < 0) {
            return false;
        }
        // Determines which set of bitMasks should be used to determine if a flight is enabled.
        /* tslint:disable:no-bitwise */
        var enabledFlightsIndex = flight >> 5;
        if (enabledFlightsIndex < 0 || enabledFlightsIndex >= this._enabledFlights.length) {
            return false;
        }
        // Masks the flight number and determines if the flight is turned on within that mask.
        var bitMask = 1 << (flight & 31);
        return (this._enabledFlights[enabledFlightsIndex] & bitMask) !== 0;
        /* tslint:enable:no-bitwise */
    };
    SPFlight._enabledFlights = [];
    return SPFlight;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = SPFlight;

//# sourceMappingURL=SPFlight.js.map
