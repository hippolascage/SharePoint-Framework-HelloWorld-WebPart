"use strict";
if (UNIT_TEST) {
    // Bundle polyfills only if we're in unit test mode, otherwise let them be loaded by the module loader.
    require('@microsoft/sp-module-loader/lib/FrameworkPolyfills');
}
var Guid_1 = require('./guid/Guid');
exports.Guid = Guid_1.default;
var JsonUtilities_1 = require('./json/JsonUtilities');
exports.JsonUtilities = JsonUtilities_1.default;
// Telemetry modules
var EngagementLogger_1 = require('./telemetry/Api/EngagementLogger');
exports._EngagementLogger = EngagementLogger_1.default;
var LogEntry_1 = require('./telemetry/Api/LogEntry');
exports._LogEntry = LogEntry_1.default;
var LogSource_1 = require('./telemetry/Api/LogSource');
exports._LogSource = LogSource_1.default;
exports._logSourceServiceKey = LogSource_1.logSourceServiceKey;
var LogType_1 = require('./telemetry/Api/LogType');
exports._LogType = LogType_1.default;
var QosMonitor_1 = require('./telemetry/Api/QosMonitor');
exports._QosMonitor = QosMonitor_1.default;
var TraceLogger_1 = require('./telemetry/Api/TraceLogger');
exports._TraceLogger = TraceLogger_1.default;
var PerformanceLogger_1 = require('./telemetry/Api/PerformanceLogger');
exports._PerformanceLogger = PerformanceLogger_1.default;
var Log_1 = require('./telemetry/Log');
exports.Log = Log_1.default;
// Other modules
var BasicHttpClient_1 = require('./httpClient/BasicHttpClient');
exports.BasicHttpClient = BasicHttpClient_1.default;
exports.basicHttpClientServiceKey = BasicHttpClient_1.basicHttpClientServiceKey;
var IDigestCache_1 = require('./httpClient/IDigestCache');
exports.digestCacheServiceKey = IDigestCache_1.digestCacheServiceKey;
var HttpClient_1 = require('./httpClient/HttpClient');
exports.HttpClient = HttpClient_1.default;
exports.httpClientServiceKey = HttpClient_1.httpClientServiceKey;
var ODataBatch_1 = require('./httpClient/ODataBatch');
exports.ODataBatch = ODataBatch_1.default;
var SPFlight_1 = require('./flight/SPFlight');
exports.SPFlight = SPFlight_1.default;
var SPKillSwitch_1 = require('./killSwitch/SPKillSwitch');
exports.SPKillSwitch = SPKillSwitch_1.default;
var ServiceKey_1 = require('./serviceScope/ServiceKey');
exports.ServiceKey = ServiceKey_1.default;
var ServiceScope_1 = require('./serviceScope/ServiceScope');
exports.ServiceScope = ServiceScope_1.default;
var Compare_1 = require('./common/Compare');
exports.Compare = Compare_1.default;
var Validate_1 = require('./common/Validate');
exports.Validate = Validate_1.default;
var UrlUtilities_1 = require('./common/UrlUtilities');
exports.UrlUtilities = UrlUtilities_1.default;
var UrlQueryParameterCollection_1 = require('./common/UrlQueryParameterCollection');
exports.UrlQueryParameterCollection = UrlQueryParameterCollection_1.default;
var DisplayMode_1 = require('./common/DisplayMode');
exports.DisplayMode = DisplayMode_1.default;
var SPCdnUrlProvider_1 = require('./common/SPCdnUrlProvider');
exports.SPCdnUrlProvider = SPCdnUrlProvider_1.default;
var SPPermission_1 = require('./permission/SPPermission');
exports.SPPermission = SPPermission_1.default;
var PageContext_1 = require('./pageContext/PageContext');
exports.PageContext = PageContext_1.default;
exports.pageContextServiceKey = PageContext_1.pageContextServiceKey;
var SPWeb_1 = require('./pageContext/SPWeb');
exports.SPWeb = SPWeb_1.default;
var SPSite_1 = require('./pageContext/SPSite');
exports.SPSite = SPSite_1.default;
var SPUser_1 = require('./pageContext/SPUser');
exports.SPUser = SPUser_1.default;
var CultureInfo_1 = require('./pageContext/CultureInfo');
exports.CultureInfo = CultureInfo_1.default;
var OAuthTokenProvider_1 = require('./oauthTokenProvider/OAuthTokenProvider');
exports.OAuthTokenProvider = OAuthTokenProvider_1.default;
exports.oAuthTokenProviderServiceKey = OAuthTokenProvider_1.oAuthTokenProviderServiceKey;
var Environment_1 = require('./environment/Environment');
exports.Environment = Environment_1.default;
exports.EnvironmentType = Environment_1.EnvironmentType;
exports.environmentServiceKey = Environment_1.environmentServiceKey;
var sp_client_shared_1 = require('@ms/sp-client-shared');
// @todo VSO:237921 - use the correct typings
/* tslint:disable:no-any variable-name */
exports.OAuthUtilityError = sp_client_shared_1.OAuthUtilityError;
exports.OAuthUtilityErrorType = sp_client_shared_1.OAuthUtilityErrorType;
/* tslint:enable:no-any variable-name */

//# sourceMappingURL=index.js.map
