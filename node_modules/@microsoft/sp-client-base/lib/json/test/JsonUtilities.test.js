/**
 * @copyright (c) Microsoft Corporation. All rights reserved.
 */
"use strict";
var chai_1 = require('chai');
var JsonUtilities_1 = require('../JsonUtilities');
var assert = chai.assert;
describe('Json tests', function () {
    var jsonObject = {
        simpleStringField: 'abc xyz',
        stringFieldWithSpecialCharacters: 'abc\b\t\n\f\r"\'\\xyz',
        objectField: {
            subField: 'abc xyz'
        }
    };
    it('Returns null for null or undefined json', function () {
        /* tslint:disable:no-null-keyword */
        chai_1.expect(JsonUtilities_1.default.encode(null)).to.be.undefined;
        /* tslint:enable:no-null-keyword */
        chai_1.expect(JsonUtilities_1.default.encode(undefined)).to.be.undefined;
    });
    it('Encodes json correctly', function () {
        assert.strictEqual(JsonUtilities_1.default.encode('\b'), '\\b', 'backspace character');
        assert.strictEqual(JsonUtilities_1.default.encode('\t'), '\\t', 'tab character');
        assert.strictEqual(JsonUtilities_1.default.encode('\n'), '\\n', 'new line character');
        assert.strictEqual(JsonUtilities_1.default.encode('\f'), '\\f', 'form feed character');
        assert.strictEqual(JsonUtilities_1.default.encode('\r'), '\\r', 'carriage return character');
        assert.strictEqual(JsonUtilities_1.default.encode('"'), '\\"', 'double quote character');
        assert.strictEqual(JsonUtilities_1.default.encode('\''), '\\\'', 'single quote character');
        assert.strictEqual(JsonUtilities_1.default.encode('\\'), '\\\\', 'single quote character');
        assert.strictEqual(JsonUtilities_1.default.encode('\u2048'), '\u2048', 'unicode character');
        /* tslint:disable:max-line-length */
        assert.strictEqual(JsonUtilities_1.default.encode(JSON.stringify(jsonObject)), '{\\"simpleStringField\\":\\"abc xyz\\",\\"stringFieldWithSpecialCharacters\\":\\"abc\\\\b\\\\t\\\\n\\\\f\\\\r\\\\\\"\\\'\\\\\\\\xyz\\",\\"objectField\\":{\\"subField\\":\\"abc xyz\\"}}', 'json object');
        /* tslint:enable:max-line-length */
    });
});

//# sourceMappingURL=JsonUtilities.test.js.map
