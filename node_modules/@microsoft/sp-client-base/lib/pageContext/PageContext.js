"use strict";
var SPWeb_1 = require('./SPWeb');
var SPSite_1 = require('./SPSite');
var SPUser_1 = require('./SPUser');
var CultureInfo_1 = require('./CultureInfo');
var ServiceKey_1 = require('../serviceScope/ServiceKey');
/**
  * The page context provides standard definitions for common SharePoint objects
  * that need to be shared between the client-side application, web parts, and other
  * components.  Typically the data is fetched via REST queries when navigating to a
  * new page, but it can also be preloaded by the web server, or filled from a custom
  * application cache.
  * @public
  */
var PageContext = (function () {
    function PageContext(serviceScope) {
        this._isInitialized = false;
    }
    /**
     * Initializes the Page Context.
     * @internal
     */
    PageContext.prototype.initialize = function (options) {
        this._cultureInfo = new CultureInfo_1.default(options.cultureInfo || {
            currentCultureName: '',
            currentUICultureName: ''
        });
        this._site = new SPSite_1.default(options.site || {
            id: ''
        });
        this._user = new SPUser_1.default(options.user || {
            displayName: '',
            loginName: ''
        });
        this._web = new SPWeb_1.default(options.web || {
            id: '',
            absoluteUrl: '',
            serverRelativeUrl: '',
            title: ''
        });
        this._isInitialized = true;
    };
    Object.defineProperty(PageContext.prototype, "cultureInfo", {
        /**
         * This class is primarily used with the PageContext class.  It provides culture info
         * for the current user of the application.
         */
        get: function () {
            return this._cultureInfo;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageContext.prototype, "site", {
        /**
         * Contextual information for the SharePoint site collection ("site") that is hosting the page.
         * The site object will be defined if the PageContext was initialized.
         */
        get: function () {
            return this._site;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageContext.prototype, "user", {
        /**
         * This class is primarily used with the PageContext class.  It provides contextual information
         * for the SharePoint user that is accessing the page.
         */
        get: function () {
            return this._user;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageContext.prototype, "web", {
        /**
         * Contextual information for the SharePoint site ("web") that is hosting the page. The web object
         * will be defined if the PageContext was initialized.
         */
        get: function () {
            return this._web;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageContext.prototype, "isInitialized", {
        /**
         * Returns whether the PageContext has been initialized.
         */
        get: function () {
            return this._isInitialized;
        },
        enumerable: true,
        configurable: true
    });
    return PageContext;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = PageContext;
exports.pageContextServiceKey = ServiceKey_1.default.create('sp-client-base:PageContext', PageContext);

//# sourceMappingURL=PageContext.js.map
