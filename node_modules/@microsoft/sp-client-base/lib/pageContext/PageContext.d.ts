import SPWeb, { ISPWebData } from './SPWeb';
import SPSite, { ISPSiteData } from './SPSite';
import SPUser, { ISPUserData } from './SPUser';
import CultureInfo, { ICultureInfoData } from './CultureInfo';
import ServiceScope from '../serviceScope/ServiceScope';
import ServiceKey from '../serviceScope/ServiceKey';
/**
 * Interface for properties neccesary for building a PageContext.
 * @internal
 */
export interface IPageContextData {
    cultureInfo: ICultureInfoData;
    site: ISPSiteData;
    user: ISPUserData;
    web: ISPWebData;
}
/**
  * The page context provides standard definitions for common SharePoint objects
  * that need to be shared between the client-side application, web parts, and other
  * components.  Typically the data is fetched via REST queries when navigating to a
  * new page, but it can also be preloaded by the web server, or filled from a custom
  * application cache.
  * @public
  */
export default class PageContext {
    private _cultureInfo;
    private _site;
    private _user;
    private _web;
    private _isInitialized;
    constructor(serviceScope: ServiceScope);
    /**
     * Initializes the Page Context.
     * @internal
     */
    initialize(options: IPageContextData): void;
    /**
     * This class is primarily used with the PageContext class.  It provides culture info
     * for the current user of the application.
     */
    cultureInfo: CultureInfo;
    /**
     * Contextual information for the SharePoint site collection ("site") that is hosting the page.
     * The site object will be defined if the PageContext was initialized.
     */
    site: SPSite;
    /**
     * This class is primarily used with the PageContext class.  It provides contextual information
     * for the SharePoint user that is accessing the page.
     */
    user: SPUser;
    /**
     * Contextual information for the SharePoint site ("web") that is hosting the page. The web object
     * will be defined if the PageContext was initialized.
     */
    web: SPWeb;
    /**
     * Returns whether the PageContext has been initialized.
     */
    isInitialized: boolean;
}
export declare const pageContextServiceKey: ServiceKey<PageContext>;
