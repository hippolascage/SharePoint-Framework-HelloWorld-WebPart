"use strict";
var Log_1 = require('../Log');
var assert = chai.assert;
describe('Log', function () {
    var consoleLogStub;
    var consoleInfoStub;
    var consoleWarnStub;
    var consoleErrorStub;
    beforeEach(function () {
        consoleLogStub = sinon.stub(console, 'log');
        consoleInfoStub = sinon.stub(console, 'info');
        consoleWarnStub = sinon.stub(console, 'warn');
        consoleErrorStub = sinon.stub(console, 'error');
    });
    afterEach(function () {
        consoleLogStub.restore();
        consoleInfoStub.restore();
        consoleWarnStub.restore();
        consoleErrorStub.restore();
    });
    it('logs verbose message', function () {
        Log_1.default.verbose('source2', 'message');
        assert.isTrue(consoleLogStub.calledWith('[source2] message'));
    });
    it('logs informational message', function () {
        Log_1.default.info('source2', 'message');
        assert.isTrue(consoleInfoStub.calledWith('[source2] message'));
    });
    it('logs warning', function () {
        Log_1.default.warn('source2', 'message');
        assert.isTrue(consoleWarnStub.calledWith('[source2] message'));
    });
    it('logs error', function () {
        var error = new Error('message');
        Log_1.default.error('source2', error);
        assert.isTrue(consoleErrorStub.calledWith("[source2] " + error.toString()));
    });
});

//# sourceMappingURL=Log.test.js.map
