'use strict';

// Karma configuration
// Generated on Thu Oct 08 2015 18:13:05 GMT-0700 (PDT)

const path = require('path');
const build = require('./lib');
const configResources = build.karma.resources;

const bindPolyfillPath = configResources.bindPolyfillPath;

module.exports = function(config) {
  const karmaConfig = {

    // base path that will be used to resolve all patterns (eg. files, exclude)
    basePath: process.cwd(),

    // frameworks to use
    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter
    frameworks: ['mocha', 'sinon-chai'],


    // list of files / patterns to load in the browser
    files: [bindPolyfillPath].concat([
      path.join(path.dirname(require.resolve('systemjs')), 'dist', 'system.js'),
      path.join(path.dirname(require.resolve('systemjs')), 'dist', 'system-polyfills.js'),
      path.join('lib', 'tests.js')]
    ),


    // list of files to exclude
    exclude: [],


    // webpack config for bundling tests.
    webpack: build.configureWebpack.getKarmaConfig(
      [{
          test: /\.js/,
          exclude: /(test|node_modules|bower_components)/,
          loader: configResources.istanbulInstrumenterLoaderPath
        }
      ],
      [{
        'jsdom': 'window',
        'cheerio': 'window',
        'react/addons': true,
        'react/lib/ExecutionEnvironment': true,
        'react/lib/ReactContext': true
      }]
    ),

    webpackMiddleware: {
      noInfo: true,
      quiet: !build.args.debug
    },

    // preprocess matching files before serving them to the browser
    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor
    preprocessors: {
      'lib/**/*.js': ['webpack']
    },

    plugins: configResources.plugins.concat([
    ]),

    // test results reporter to use
    // possible values: 'dots', 'progress'
    // available reporters: https://npmjs.org/browse/keyword/karma-reporter
    reporters: ['mocha-clean', 'coverage'],

    coverageReporter: {
      dir: 'temp/coverage',
      reporters: [
        {
          type: 'html',
          subdir: 'html'
        },
        {
          type: 'json',
          subdir: './',
          file: 'coverage.json'
        }
      ]
    },

    // web server port
    port: 9876,


    // enable / disable colors in the output (reporters and logs)
    colors: true,


    // level of logging
    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG
    logLevel: (build.args.production ? config.LOG_INFO : config.LOG_DEBUG),


    // enable / disable watching file and executing tests whenever any file changes
    autoWatch: false,


    // start these browsers
    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher
    browsers: ['PhantomJS'],


    // Continuous Integration mode
    // if true, Karma captures browsers, runs the tests and exits
    singleRun: true,

    // Increase timeouts to reduce random CI failure
    // See https://github.com/karma-runner/karma/issues/598
    captureTimeout: 10000,             // default 2000
    browserDisconnectTimeout : 5000,   // default 2000
    browserDisconnectTolerance : 5,    // default 0
    browserNoActivityTimeout : 20000,  //default 10000
  };

  config.set(karmaConfig);
};
