"use strict";
// TODO (Bug 223178) Move Theming engine from odsp-utilities to sp-client\platform\sp-client-shared
var odsp_utilities_bundle_1 = require('@ms/odsp-utilities-bundle');
var odsp_utilities_bundle_2 = require('@ms/odsp-utilities-bundle');
var odsp_utilities_bundle_3 = require('@ms/odsp-utilities-bundle');
var sp_client_base_1 = require('@microsoft/sp-client-base');
var AppPageContext_1 = require('../../framework/pageContext/AppPageContext');
var SPWebTemplateIds_1 = require('./SPWebTemplateIds');
var load_themed_styles_1 = require('load-themed-styles');
/**
 * The class controls applying a theme to the current Page.
 * The theme is a web level setting, if a theme is applied this class with call loadtheme
 * which will update the styles that are registered with load-themed-styles.
 *
 * The loadData method is called by the ThemeProvider class when it needs to get the IThemeData.
 * Once it has theme data it will cache it in local storage using the themedCssFolderUrl as the cache key.
 */
var SPThemeProvider = (function () {
    function SPThemeProvider(serviceScope) {
        var _this = this;
        serviceScope.whenFinished(function () {
            _this._pageContext = serviceScope.consume(AppPageContext_1.appPageContextServiceKey);
            _this._httpClient = serviceScope.consume(sp_client_base_1.httpClientServiceKey);
            _this._themeProvider = new odsp_utilities_bundle_3.ThemeProvider(_this.loadData.bind(_this));
            // Check for a theme override from the URL (as in the theme preview page).
            try {
                var contextUri = new odsp_utilities_bundle_3.Uri(window.location.href);
                _this._themeOverride = contextUri.getQueryParameter('ThemeOverride');
            }
            catch (ignoredUrlException) {
            }
        });
    }
    SPThemeProvider.prototype.loadThemedStyles = function () {
        var cacheToken = this.getCacheToken();
        this._themeProvider.loadThemeTokenMap(cacheToken)
            .then(function (palette) {
            load_themed_styles_1.loadTheme(palette);
        });
    };
    SPThemeProvider.prototype.loadData = function () {
        var _this = this;
        var tagName = 'SPThemeProvider.loadData';
        var qosMonitor = new sp_client_base_1._QosMonitor(tagName);
        if (this._pageContext.core.webTemplate) {
            if (this._pageContext.core.webTemplate === SPWebTemplateIds_1.default.teamSite ||
                this._pageContext.core.webTemplate === SPWebTemplateIds_1.default.groupSite) {
                // check if the site has a theme applied
                if (this._pageContext.core.themedCssFolderUrl) {
                    // Fetch Theme Data from SharePoint
                    var getThemeDataUrl_1 = odsp_utilities_bundle_3.WebTheme.makeWebThemeRestUrl(this._pageContext.core.siteServerRelativeUrl, this._pageContext.core.currentUICultureName, this._themeOverride);
                    return new odsp_utilities_bundle_1.Promise(function (resolve, reject) {
                        _this._httpClient.get(getThemeDataUrl_1)
                            .then(function (response) {
                            if (response.status === 200) {
                                return response.json()
                                    .then(function (json) {
                                    /* tslint:enable:no-any */
                                    var themeDataRaw = JSON.parse(json.value);
                                    if (themeDataRaw) {
                                        var themeData = odsp_utilities_bundle_3.WebTheme.processRawThemeData(themeDataRaw);
                                        themeData.cacheToken = _this._pageContext.core.themedCssFolderUrl;
                                        qosMonitor.writeSuccess();
                                        resolve(themeData);
                                    }
                                    else {
                                        // ThemeProvider will handle undefined themeData as an error
                                        qosMonitor.writeUnexpectedFailure();
                                        resolve(undefined);
                                    }
                                });
                            }
                            else {
                                // ThemeProvider will handle undefined themeData as an error
                                qosMonitor.writeUnexpectedFailure(tagName, new Error(response.statusText));
                                resolve(undefined);
                            }
                        });
                    });
                }
                else if (this._pageContext.core.groupColor) {
                    // Generate a Fabric theme from the site color
                    var htmlThemeColor = this._pageContext.core.groupColor;
                    var rgbaThemeColor = odsp_utilities_bundle_2.RgbaColor.fromHtmlColor(htmlThemeColor);
                    if (rgbaThemeColor) {
                        var fabTheme = {
                            backgroundImageUri: undefined,
                            cacheToken: this.getCacheToken(),
                            isDefault: false,
                            isInverted: false,
                            palette: odsp_utilities_bundle_2.FabricTheming.generateFabricColors(rgbaThemeColor),
                            version: '1'
                        };
                        return odsp_utilities_bundle_1.Promise.wrap(fabTheme);
                    }
                    else {
                        // Return no theme to indicate default theme values should be used.
                        return odsp_utilities_bundle_1.Promise.wrap();
                    }
                }
                else {
                    // Use Default SharePoint Color Palette
                    qosMonitor.writeSuccess();
                    return odsp_utilities_bundle_1.Promise.wrap(this.createDefaultTheme());
                }
            }
            else {
                // Unknown Web Template, Use Default
                qosMonitor.writeExpectedFailure("Unsuppted WebTemplate: " + this._pageContext.core.webTemplate);
                return odsp_utilities_bundle_1.Promise.wrap(this.createDefaultTheme());
            }
        }
        else {
            qosMonitor.writeUnexpectedFailure("pageContext.core.webTemplate is undefined");
            return odsp_utilities_bundle_1.Promise.wrap(this.createDefaultTheme());
        }
    };
    SPThemeProvider.prototype.createDefaultTheme = function () {
        var themeData = {
            backgroundImageUri: undefined,
            cacheToken: undefined,
            isDefault: undefined,
            isInverted: false,
            palette: undefined,
            version: '1.0'
        };
        return themeData;
    };
    SPThemeProvider.prototype.getCacheToken = function () {
        var webTemplate = String(this._pageContext.core.webTemplate);
        var groupColor = webTemplate === SPWebTemplateIds_1.default.teamSite ||
            webTemplate === SPWebTemplateIds_1.default.groupSite ? this._pageContext.core.groupColor : undefined;
        var groupColorToken = groupColor && (groupColor + ';web#' + webTemplate);
        return this._themeOverride || this._pageContext.core.themedCssFolderUrl || groupColorToken;
    };
    return SPThemeProvider;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = SPThemeProvider;

//# sourceMappingURL=SPThemeProvider.js.map
