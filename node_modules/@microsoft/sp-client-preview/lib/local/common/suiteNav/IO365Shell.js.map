{"version":3,"sources":["local/common/suiteNav/IO365Shell.ts"],"names":[],"mappings":"AAAA;;;;;GAKG","file":"local/common/suiteNav/IO365Shell.js","sourcesContent":["/**\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * @file Render settings passed into O365Shell.Render.\r\n * In Chicago see: sources\\Dev\\SuiteControls\\src\\shell\\core\\RenderSettings.cs.\r\n */\r\n\r\nimport ISuiteNavData from './models/ISuiteNavData';\r\n\r\nexport interface IO365ShellRenderSettings {\r\n  /** The ID of the element the suite nav should render in. */\r\n  top: string;\r\n\r\n  /**\r\n   * The layout type of the current view.\r\n   * The only option we're interested in is 'Mouse'.\r\n   */\r\n  layout: string;\r\n\r\n  /**\r\n   * Flag that indicates whether additional components need to be loaded immediately.\r\n   * If false or unspecified, delay-loaded components will be loaded after page load event.\r\n   */\r\n  disableDelayLoad?: boolean;\r\n\r\n  /**\r\n   * Flag to indicate whether automatic loading of ShellPlus (notifications and such)\r\n   * should be disabled. Loading can be manually triggered later with LoadShellPlus().\r\n   */\r\n  disableShellPlus?: boolean;\r\n}\r\n\r\n/**\r\n * This is an interface for the O365Shell.Navigation external 'module.'\r\n */\r\nexport interface IO365Navigation {\r\n  /**\r\n   * Subscribes to link click events.\r\n   */\r\n  /* tslint:disable:no-any */\r\n  OnLinkClick(callback: (eventArgs: any) => any): void;\r\n  /* tslint:enable:no-any */\r\n\r\n  /**\r\n   * Subscribes to the hamburger button click events.\r\n   */\r\n  /* tslint:disable:no-any */\r\n  OnHamburgerButtonClick(callback: (eventArgs: any) => any): void;\r\n  /* tslint:enable:no-any */\r\n}\r\n\r\n/**\r\n * This is an interface for the O365Shell.FlexPane external 'module.'\r\n */\r\nexport interface IFlexPane {\r\n  /**\r\n   * Subscribes to the visibility changed event.\r\n   * Returns a subscription token that can be used to unsubscribe.\r\n   */\r\n  /* tslint:disable:no-any */\r\n  OnFlexPaneVisibilityChanged(callback: (visible: boolean) => any): number;\r\n  /* tslint:enable:no-any */\r\n\r\n  /**\r\n   * Opens the FlexPan using the specified provider.\r\n   */\r\n  OpenFlexPaneForProvider(provider: string): void;\r\n}\r\n\r\n/**\r\n * This is an interface for the O365Shell external 'module.'\r\n * Only the functions we use from the interface are included.\r\n * In Chicago see: sources\\Dev\\SuiteControls\\src\\shell\\g2\\coreshim\\O365Shell.cs\r\n * ('Suite nav' and 'shell' are more or less synonymous in this context.)\r\n */\r\nexport interface IO365Shell {\r\n  /** O365 Flex Pane. */\r\n  FlexPane: IFlexPane;\r\n\r\n  /** O365 Navigation. */\r\n  Navigation: IO365Navigation;\r\n\r\n  /** Passes the shell data blob to the shell client API. */\r\n  SetData(shellData: ISuiteNavData): void;\r\n\r\n  /**\r\n   * Renders the shell using the specified render settings.\r\n   * The callback will be called after ShellPlus is loaded.\r\n   */\r\n  Render(renderSettings: IO365ShellRenderSettings, callback: () => void): void;\r\n\r\n  /**\r\n   * Renders the shell using the specified render settings.\r\n   * renderCallback will be executed after the core shell is rendered.\r\n   * callback will be executed after shell plus is loaded.\r\n   */\r\n  RenderAsync(\r\n    renderSettings: IO365ShellRenderSettings,\r\n    renderCallback: () => void,\r\n    callback: () => void): void;\r\n\r\n  /**\r\n   * This is not provided by O365Shell. It invokes a given callback when a member/function\r\n   * name is defined. This is useful when a component is trying to access a O365Shell\r\n   * member but is not in charge of loading it.\r\n   */\r\n  OnHasMember(memberName: string, callback: () => void): void;\r\n\r\n  /** Load shell plus (extra features like notifications) if it was disabled on initial load. */\r\n  LoadShellPlus(): void;\r\n}\r\n\r\nexport default IO365Shell;\r\n"],"sourceRoot":"/src"}