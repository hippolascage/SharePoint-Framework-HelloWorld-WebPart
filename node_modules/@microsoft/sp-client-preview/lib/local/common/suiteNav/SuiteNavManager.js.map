{"version":3,"sources":["local/common/suiteNav/SuiteNavManager.ts"],"names":[],"mappings":"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","file":"local/common/suiteNav/SuiteNavManager.js","sourcesContent":["/**\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * @file Data source for the suite nav.\r\n */\r\n\r\nimport {\r\nServiceScope,\r\nhttpClientServiceKey,\r\nHttpClient,\r\n_LogSource,\r\n_TraceLogger\r\n} from '@microsoft/sp-client-base';\r\nimport spModuleLoader from '@microsoft/sp-module-loader';\r\nimport { DataStore, DataStoreCachingType } from '@ms/odsp-utilities-bundle';\r\n\r\nimport ISuiteNavManagerConfiguration from './ISuiteNavManagerConfiguration';\r\nimport ISuiteNavModel from './models/ISuiteNavModel';\r\nimport IO365Shell from './IO365Shell';\r\nimport { ISuiteNavDataSource, SuiteNavSource } from './dataAccess/ISuiteNavDataSource';\r\nimport SPOSuiteNavDataSource from './dataAccess/SPOSuiteNavDataSource';\r\nimport OnPremSuiteNavDataSource from './dataAccess/OnPremSuiteNavDataSource';\r\nimport O365ShellWrapper from './O365ShellWrapper';\r\nimport SPPageChrome from '../spPageChrome/SPPageChrome';\r\nimport IComponentVisible from '../spPageChrome/IComponentVisible';\r\n\r\nexport default class SuiteNavManager implements IComponentVisible {\r\n  public static _defaultSuiteNavHeight: string = '50px';\r\n  private static CACHE_PREFIX: string = 'SPPPLATSuiteNav';\r\n  private static SERVICE_KEY: string = 'SuiteNavService';\r\n  private static DATA_KEY: string = 'Data';\r\n  private static DATE_KEY: string = 'CacheDate';\r\n  private static VERSION_KEY: string = 'CacheVersion';\r\n  private static SESSION_KEY: string = 'CachedThisSession';\r\n  // This constant can be used to invalidate the cache if we make incompatible changes\r\n  private static CACHE_VERSION: number = 1;\r\n  private static _cache: DataStore = new DataStore(SuiteNavManager.CACHE_PREFIX, DataStoreCachingType.local);\r\n  private static _logSource: _LogSource = _LogSource.create('SuiteNavManager');\r\n\r\n  private _o365Shell: IO365Shell;\r\n  private _suiteNavManagerConfiguration: ISuiteNavManagerConfiguration;\r\n  private _httpClient: HttpClient;\r\n  private _suiteNavDataSource: ISuiteNavDataSource;\r\n  private _suiteNavDiv: HTMLDivElement;\r\n  private _suiteNavModel: Promise<ISuiteNavModel>;\r\n  private _serviceScope: ServiceScope;\r\n\r\n  private static _updateCache(model: ISuiteNavModel, service: SuiteNavSource): void {\r\n    SuiteNavManager._cache.setValue(SuiteNavManager.DATA_KEY, model);\r\n    SuiteNavManager._cache.setValue(SuiteNavManager.DATE_KEY, new Date());\r\n    SuiteNavManager._cache.setValue(SuiteNavManager.VERSION_KEY, SuiteNavManager.CACHE_VERSION);\r\n    SuiteNavManager._cache.setValue(SuiteNavManager.SESSION_KEY, true, DataStoreCachingType.session);\r\n    SuiteNavManager._cache.setValue(SuiteNavManager.SERVICE_KEY, service);\r\n  }\r\n\r\n  private static _clearCache(): void {\r\n    SuiteNavManager._cache.remove(SuiteNavManager.DATA_KEY);\r\n    SuiteNavManager._cache.remove(SuiteNavManager.DATE_KEY);\r\n    SuiteNavManager._cache.remove(SuiteNavManager.VERSION_KEY);\r\n    SuiteNavManager._cache.remove(SuiteNavManager.SERVICE_KEY);\r\n  }\r\n\r\n  constructor(\r\n    suiteNavManagerConfiguration: ISuiteNavManagerConfiguration,\r\n    suiteNavDiv: HTMLDivElement,\r\n    serviceScope: ServiceScope) {\r\n\r\n    this._suiteNavManagerConfiguration = suiteNavManagerConfiguration;\r\n    this._suiteNavDataSource = undefined;\r\n    this._o365Shell = undefined;\r\n    this._suiteNavManagerConfiguration.o365ShellRenderSettings.top = suiteNavDiv.id;\r\n    this._suiteNavDiv = suiteNavDiv;\r\n    this._serviceScope = serviceScope;\r\n\r\n    serviceScope.whenFinished(() => {\r\n      this._httpClient = serviceScope.consume(httpClientServiceKey);\r\n    });\r\n\r\n    if (!suiteNavManagerConfiguration.isSuiteNavDisabled()) {\r\n      SPPageChrome.getInstance(this._serviceScope).changeSuiteNavHeight(SuiteNavManager._defaultSuiteNavHeight);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the SuiteNav to be visible or not.\r\n   * @param setVisible Set the visibility to be on or off.\r\n   */\r\n  public setComponentVisibility(setVisible: boolean): void {\r\n    this._suiteNavDiv.hidden = !setVisible;\r\n    if (this._suiteNavModel) {\r\n      this._suiteNavModel.then((model: ISuiteNavModel) => {\r\n        SPPageChrome.getInstance(this._serviceScope).changeSuiteNavHeight(\r\n          setVisible ?\r\n            model.NavBarData.Dimensions.Top :\r\n            '0px');\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads the SuiteNav into the page by obtaining the data, building the model, getting the shell wrapper\r\n   * and rendering it onto the page.\r\n   */\r\n  public loadSuiteNav(): void {\r\n    if (!this._suiteNavManagerConfiguration.isSuiteNavDisabled()) {\r\n      this._suiteNavModel = this._getSuiteNavModel();\r\n      this._suiteNavModel\r\n        .then(\r\n        (suiteNavModel: ISuiteNavModel) => this._modifySuiteNavModel(suiteNavModel))\r\n        .then(\r\n        (suiteNavModel: ISuiteNavModel) => this._getSuiteNavShell(suiteNavModel))\r\n        .then(\r\n        (o365ShellWrapper: IO365Shell) => this._renderSuiteNav(o365ShellWrapper));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the suite nav data. Tries to grab SPO and OnPrem version in parallel and if SPO fails then\r\n   * the onPrem version is loaded.\r\n   * @param webServerRelativeUrl represents the SharePoint web server relative URL\r\n   * @param cultureName represents the name of the culture (e.g. 'en-us')\r\n   * @returns a promise that resolves to a string containing the response from the Suite Nav service.\r\n   */\r\n  private _getSuiteNavModel(): Promise<ISuiteNavModel> {\r\n    if (this._isCacheValid() && !this._isCacheOutdated()) {\r\n      return this._loadSuiteNavFromCache();\r\n    } else {\r\n      SuiteNavManager._clearCache();\r\n      return this._loadSuiteNavFromServer();\r\n    }\r\n  }\r\n\r\n  private _loadSuiteNavFromCache(): Promise<ISuiteNavModel> {\r\n    return new Promise<ISuiteNavModel>((complete?: (result: ISuiteNavModel) => void) => {\r\n      SuiteNavManager._cache.getValue<SuiteNavSource>(SuiteNavManager.SERVICE_KEY) ===\r\n        SuiteNavSource.SPO ?\r\n        this._suiteNavDataSource = this._createSPODataSource() :\r\n        this._suiteNavDataSource = this._createOnPremDataSource();\r\n      complete(SuiteNavManager._cache.getValue<ISuiteNavModel>(SuiteNavManager.DATA_KEY));\r\n    });\r\n  }\r\n\r\n  private _loadSuiteNavFromServer(): Promise<ISuiteNavModel> {\r\n    this._suiteNavDataSource = this._createSPODataSource();\r\n\r\n    const onPremDataSource: OnPremSuiteNavDataSource = this._createOnPremDataSource();\r\n\r\n    const onPremSuiteNavResponse: Promise<ISuiteNavModel> = onPremDataSource.loadData();\r\n    onPremSuiteNavResponse.catch(() => {\r\n      this._createSuiteNavErrorLogEntry('loadData', 'Failed to retrieve Hybrid SuiteNavData');\r\n    });\r\n\r\n    return this._suiteNavDataSource.loadData().then((response: ISuiteNavModel) => {\r\n      return response;\r\n    }).catch(() => {\r\n      this._createSuiteNavErrorLogEntry('loadData', 'Failed to retrieve SPO SuiteNavData');\r\n      this._suiteNavDataSource = onPremDataSource;\r\n      return onPremSuiteNavResponse;\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Alters the server response with the suite nav data.\r\n  */\r\n  private _modifySuiteNavModel(suiteNavResponse: ISuiteNavModel): ISuiteNavModel {\r\n    suiteNavResponse.NavBarData =\r\n      this._suiteNavManagerConfiguration.modifySuiteNavData(suiteNavResponse.NavBarData);\r\n    return suiteNavResponse;\r\n  }\r\n\r\n  /**\r\n   * Gets the O365Shell object, once it's loaded. This will also load the shell CSS\r\n   */\r\n  private _getSuiteNavShell(suiteNavModel: ISuiteNavModel): Promise<IO365Shell> {\r\n    if (!suiteNavModel) {\r\n      this._createSuiteNavErrorLogEntry(\r\n        'getO365Shell', 'SuiteNavModel is undefined');\r\n    }\r\n\r\n    // update the cache\r\n    suiteNavModel.CacheToken = this._suiteNavManagerConfiguration.cacheToken;\r\n    suiteNavModel.UserIdentifier = this._suiteNavManagerConfiguration.systemUserKey;\r\n    SuiteNavManager._updateCache(suiteNavModel, this._suiteNavDataSource.suiteNavService);\r\n    SPPageChrome.getInstance(this._serviceScope).changeSuiteNavHeight(suiteNavModel.NavBarData.Dimensions.Top);\r\n\r\n    const element: HTMLLinkElement = document.createElement('link');\r\n    element.rel = 'stylesheet';\r\n    element.type = 'text/css';\r\n    element.href = suiteNavModel.CssUrl;\r\n    document.head.appendChild(element);\r\n\r\n    const promise: Promise<IO365Shell> = new Promise<IO365Shell>(\r\n      (complete?: (result: IO365Shell) => void) => {\r\n        const loadShell: () => void = () => {\r\n          const o365Shell: IO365Shell = new O365ShellWrapper();\r\n          o365Shell.SetData(suiteNavModel.NavBarData);\r\n          complete(o365Shell);\r\n        };\r\n\r\n        if (spModuleLoader && spModuleLoader.loadScript) {\r\n          spModuleLoader.loadScript(suiteNavModel.JsUrl, '_o365su').then(loadShell);\r\n        } else if (System && System.config && System.import) {\r\n          System.config({\r\n            map: {\r\n              suiteNavJs: suiteNavModel.JsUrl\r\n            },\r\n            meta: {\r\n              suiteNavJs: {\r\n                format: 'global',\r\n                exports: '_o365su'\r\n              }\r\n            }\r\n          });\r\n\r\n          System.import('suiteNavJs').then(loadShell);\r\n        } else {\r\n          throw new Error('No loader could be found, unable to load the shell.');\r\n        }\r\n      });\r\n    return promise;\r\n  }\r\n\r\n  /**\r\n   * Renders the Suite Nav.\r\n   * @param o365Shell represents the Suite Nav shell wrapper.\r\n   * @param suiteNavData repsents the Suite Nav data that will be used for rendering.\r\n   */\r\n  private _renderSuiteNav(o365Shell: IO365Shell): void {\r\n\r\n    this._o365Shell = o365Shell;\r\n    this._o365Shell.RenderAsync(\r\n      this._suiteNavManagerConfiguration.o365ShellRenderSettings,\r\n      () => {\r\n        this._onRender(o365Shell);\r\n      },\r\n      () => {\r\n        this._onPostRender();\r\n      });\r\n    this._o365Shell.OnHasMember('LoadShellPlus', () => {\r\n      this._loadShellPlus(this._o365Shell);\r\n    });\r\n  }\r\n\r\n  private _onRender(o365Shell: IO365Shell): void {\r\n    if (this._suiteNavManagerConfiguration.hamburgerCallback) {\r\n      if (o365Shell.Navigation.OnHamburgerButtonClick) {\r\n        o365Shell.Navigation.OnHamburgerButtonClick(this._suiteNavManagerConfiguration.hamburgerCallback);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onPostRender(): void {\r\n    if (this._suiteNavManagerConfiguration.suiteNavPostRenderCallback) {\r\n      this._suiteNavManagerConfiguration.suiteNavPostRenderCallback();\r\n    }\r\n  }\r\n\r\n  /**\r\n    * LoadShellPlus will start downloading additional files required for notifications\r\n    * and such. Once ShellPlus is ready, postRenderActions will be called.\r\n    */\r\n  private _loadShellPlus(o365Shell: IO365Shell): Promise<void> {\r\n    return new Promise<void>(() => {\r\n      o365Shell.LoadShellPlus();\r\n    }).catch((errorMessage?: string) => {\r\n      this._createSuiteNavErrorLogEntry(\r\n        'loadShellPlus', errorMessage);\r\n    });\r\n  }\r\n\r\n  private _isCacheValid(): boolean {\r\n    // Cached data is valid (still usable for rendering) if:\r\n    // - the CSS URL and JS URL are present (if we're trying to load the real suite nav)\r\n    // - the data is for the same user\r\n    // - the cache version is the same\r\n    // - the site client tag is the same (if it's different, the theme has changed)\r\n    const model: ISuiteNavModel = SuiteNavManager._cache.getValue<ISuiteNavModel>(SuiteNavManager.DATA_KEY);\r\n    const oldVersion: number = SuiteNavManager._cache.getValue<number>(SuiteNavManager.VERSION_KEY);\r\n    return (model && model.NavBarData &&\r\n      ((model.JsUrl && model.CssUrl)) &&\r\n      oldVersion === SuiteNavManager.CACHE_VERSION &&\r\n      model.UserIdentifier &&\r\n      model.UserIdentifier === this._suiteNavManagerConfiguration.systemUserKey &&\r\n      model.CacheToken === this._suiteNavManagerConfiguration.cacheToken);\r\n  }\r\n\r\n  private _isCacheOutdated(): boolean {\r\n    // \"Outdated\" means:\r\n    // - it's more than 24 hours old\r\n    // - it was not cached in the current browsing session (only applies if sessionStorage available)\r\n    const cacheDate: number = Date.parse(SuiteNavManager._cache.getValue<string>(SuiteNavManager.DATE_KEY));\r\n    const currentDate: Date = new Date();\r\n    const cachedThisSession: DataStoreCachingType =\r\n      SuiteNavManager._cache.getValue<DataStoreCachingType>(SuiteNavManager.SESSION_KEY, DataStoreCachingType.session);\r\n    return (isNaN(cacheDate) ||\r\n      currentDate.getTime() - cacheDate > 24 * 60 * 60 * 1000 ||\r\n      (DataStore.hasStorageType(DataStoreCachingType.session) && !cachedThisSession));\r\n  }\r\n\r\n  private _createSPODataSource(): SPOSuiteNavDataSource {\r\n    return new SPOSuiteNavDataSource(\r\n      this._httpClient,\r\n      this._suiteNavManagerConfiguration.currentUICultureName,\r\n      this._suiteNavManagerConfiguration.webServerRelativeUrl);\r\n  }\r\n\r\n  private _createOnPremDataSource(): OnPremSuiteNavDataSource {\r\n    return new OnPremSuiteNavDataSource(\r\n      this._httpClient,\r\n      this._suiteNavManagerConfiguration.currentUICultureName,\r\n      this._suiteNavManagerConfiguration.webServerRelativeUrl);\r\n  }\r\n\r\n  /**\r\n  * Create a log entry for logging\r\n  * @param moduleName represents the module that the logger was called in\r\n  * @param errorMessage represents the error string that occured\r\n  */\r\n  private _createSuiteNavErrorLogEntry(moduleName: string, errorMessage: string): void {\r\n    _TraceLogger.logVerbose(SuiteNavManager._logSource, 'SuiteNavManager ' + moduleName + ' ' + errorMessage);\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}