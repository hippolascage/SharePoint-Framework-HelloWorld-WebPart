{"version":3,"sources":["local/common/suiteNav/FlexPaneWrapper.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;;AAGH,+BAGO,2BAA2B,CAAC,CAAA;AAInC;IAAA;IA+BA,CAAC;IA5BC,2BAA2B;IACpB,qDAA2B,GAAlC,UAAmC,QAAmC;QACtE,0BAA0B;QACxB,IAAI,CAAC;YACH,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,2BAA2B,CAAC,QAAQ,CAAC,CAAC;QAClE,CAAE;QAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,mCAAmC,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAC;QAE7E,CAAC;IACH,CAAC;IAEM,iDAAuB,GAA9B,UAA+B,QAAgB;QAC7C,IAAI,CAAC;YACH,SAAS,CAAC,QAAQ,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACvD,CAAE;QAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,mCAAmC,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC;QACzE,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACK,6DAAmC,GAA3C,UAA4C,UAAkB,EAAE,YAAoB;QAClF,6BAAY,CAAC,UAAU,CAAC,eAAe,CAAC,SAAS,EAAE,kBAAkB,GAAG,UAAU,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC;IAC3G,CAAC;IA7Ba,yBAAS,GAAe,2BAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;IA8B7E,sBAAC;AAAD,CA/BA,AA+BC,IAAA;AA/BD;iCA+BC,CAAA","file":"local/common/suiteNav/FlexPaneWrapper.js","sourcesContent":["/**\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * @file Wrapper around the O365Shell.FlexPane global, preventing other files\r\n * from needing to access the global\r\n */\r\n\r\nimport O365ShellWrapper from './O365ShellWrapper';\r\nimport {\r\n  _TraceLogger,\r\n  _LogSource\r\n} from '@microsoft/sp-client-base';\r\n\r\ndeclare var O365Shell: O365ShellWrapper;\r\n\r\nexport default class FlexPaneWrapper {\r\n  public static logSource: _LogSource = _LogSource.create('FlexPaneWrapper');\r\n\r\n  /* tslint:disable:no-any */\r\n  public OnFlexPaneVisibilityChanged(callback: (visible: boolean) => any): number {\r\n  /* tslint:enable:no-any */\r\n    try {\r\n      return O365Shell.FlexPane.OnFlexPaneVisibilityChanged(callback);\r\n    } catch (e) {\r\n      this._createFlexPaneWrapperErrorLogEntry('OnFlexPaneVisibilityChanged', e);\r\n\r\n    }\r\n  }\r\n\r\n  public OpenFlexPaneForProvider(provider: string): void {\r\n    try {\r\n      O365Shell.FlexPane.OpenFlexPaneForProvider(provider);\r\n    } catch (e) {\r\n      this._createFlexPaneWrapperErrorLogEntry('OpenFlexPaneForProvider', e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a log entry for logging\r\n   * @param moduleName represents the module that the logger was called in\r\n   * @param errorMessage represents the error string that occured\r\n   * @returns a SuiteNav Error Log Entry\r\n   */\r\n  private _createFlexPaneWrapperErrorLogEntry(moduleName: string, errorMessage: string): void {\r\n    _TraceLogger.logVerbose(FlexPaneWrapper.logSource, 'FlexPaneWrapper ' + moduleName + ' ' + errorMessage);\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}