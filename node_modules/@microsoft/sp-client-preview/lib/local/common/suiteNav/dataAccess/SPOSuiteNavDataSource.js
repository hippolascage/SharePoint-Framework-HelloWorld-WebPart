/**
 * @file SPOSuiteNavDataSource.ts
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 */
"use strict";
var ISuiteNavDataSource_1 = require('./ISuiteNavDataSource');
var sp_client_base_1 = require('@microsoft/sp-client-base');
var SPOSuiteNavDataSource = (function () {
    /**
     * Initializes a new instance of the SPO
     * @TODO Task 161973 Add PageContext and set the
     * webPermissionMask/suiteNavData.UserDisplayName/webServerRelativeUrl/currentUICultureName
     */
    function SPOSuiteNavDataSource(httpClient, currentUICultureName, webServerRelativeUrl) {
        this.suiteNavService = ISuiteNavDataSource_1.SuiteNavSource.SPO;
        this._currentUICultureName = currentUICultureName;
        this._httpClient = httpClient;
        this._siteRelUrl = webServerRelativeUrl === '/' ? '' : webServerRelativeUrl;
    }
    // Downloads the SPO version of the SuiteNavData
    SPOSuiteNavDataSource.prototype.loadData = function () {
        var url = this._siteRelUrl
            + '/_layouts/15/online/handlers/SpoSuiteLinks.ashx?Locale='
            + this._currentUICultureName
            + '&v=2&mobilereq=0&msajax=1';
        return this._httpClient.post(url, {})
            .then(function (response) {
            if (response.status !== 200 || response.headers.get('SharePointError')) {
                sp_client_base_1._TraceLogger.logVerbose(SPOSuiteNavDataSource._logSource, 'Failed to retrieve SPO SuiteNavData');
                return Promise.reject('Failed to retrieve SPO SuiteNavData');
            }
            return response.json().then(function (jsonResponse) {
                return jsonResponse;
            });
        });
    };
    // @TODO Bug 169685 change to readonly
    SPOSuiteNavDataSource._logSource = sp_client_base_1._LogSource.create('SPOSuiteNavDataSource');
    return SPOSuiteNavDataSource;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = SPOSuiteNavDataSource;

//# sourceMappingURL=SPOSuiteNavDataSource.js.map
