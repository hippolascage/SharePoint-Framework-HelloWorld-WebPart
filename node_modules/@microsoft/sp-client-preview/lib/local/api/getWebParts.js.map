{"version":3,"sources":["local/api/getWebParts.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,IAAY,EAAE,WAAM,IAAI,CAAC,CAAA;AACzB,IAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAC7B,IAAY,MAAM,WAAM,6BAA6B,CAAC,CAAA;AAEtD,IAAM,OAAO,GAAW,OAAO,CAAC,GAAG,EAAE,CAAC;AAEtC,2BAA2B;AAC3B,qBAAoC,GAAQ,EAAE,GAAQ;IACtD,0BAA0B;IACxB,YAAY,CAAC;IACb,IAAM,SAAS,GAAa,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;SAEnE,MAAM,CAAC,UAAC,QAAa;QACtB,0BAA0B;QACxB,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEL,IAAM,WAAW,GAAO,EAAE,CAAC;IAC3B,SAAS,CAAC,OAAO,CAAC,UAAC,QAAgB;QACjC,MAAM,CAAC,KAAK,CACV,WAAW,EACX,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,GAAG,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IACjF,CAAC,CAAC,CAAC;IAEH,iBAAiB;IACjB,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACxB,CAAC;AAnBD;6BAmBC,CAAA","file":"local/api/getWebParts.js","sourcesContent":["'use strict';\r\n\r\nimport * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport * as lodash from '@microsoft/sp-lodash-subset';\r\n\r\nconst rootDir: string = process.cwd();\r\n\r\n/* tslint:disable:no-any */\r\nexport default function getWebParts(req: any, res: any): void {\r\n/* tslint:enable:no-any */\r\n  'use strict';\r\n  const manifests: string[] = fs.readdirSync(path.join(rootDir, 'dist'))\r\n    /* tslint:disable:no-any */\r\n    .filter((filename: any): boolean => { // This is using es6 string, but we're building this project as es5\r\n    /* tslint:enable:no-any */\r\n      return filename.toLowerCase().endsWith('.manifest.json');\r\n    });\r\n\r\n  const manifestMap: {} = {};\r\n  manifests.forEach((manifest: string): void => {\r\n    lodash.merge(\r\n      manifestMap,\r\n      JSON.parse(fs.readFileSync(path.join(rootDir, 'dist/' + manifest), 'utf8')));\r\n  });\r\n\r\n  // example output\r\n  res.json(manifestMap);\r\n}\r\n"],"sourceRoot":"/src"}