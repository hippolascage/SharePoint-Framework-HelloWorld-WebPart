import { BasicHttpClient, HttpClient, IServiceScopeProvider, ServiceScope, PageContext, Environment } from '@microsoft/sp-client-base';
import ClientSideApplication from './ClientSideApplication';
import IComponentVisible from '../../common/spPageChrome/IComponentVisible';
import { IPreloadedData } from './PreloadedDataReader';
import AppPageContext from '../pageContext/AppPageContext';
/**
 * The system shell manages the initial loading of the scripts for a client-side application,
 * as well as constructin the ClientSideApplication object, and initializing key services such
 * as the page chrome, page context, HTTP client, etc.
 *
 * @alpha
 */
export interface IShell extends IServiceScopeProvider {
    /**
     * Describes the type of environment that the framework is being hosted on.
     */
    environment: Environment;
    /**
     * Returns the current page context object for webparts.
     */
    pageContext: PageContext;
    /**
     * Returns the current page context object for the applcation.
     * Will be phased out soon.
     */
    appPageContext: AppPageContext;
    /**
     * BasicHttpClient is used to perform REST calls with general internet services.
     * For communicating with SharePoint services, use HttpClient instead.
     */
    basicHttpClient: BasicHttpClient;
    /**
     * HttpClient is used to perform REST calls with SharePoint services.
     * It implements special enhancements such as configuring default headers, adding
     * an "X-RequestDigest" header for write operations, and collecting telemetry
     * to help the service monitor the performance and reliability of the application.
     *
     * For communicating with non-SharePoint services, use BasicHttpClient instead.
     */
    httpClient: HttpClient;
    /**
     * This object allows the application to manage the suite navigation of
     * the standard page chrome.  For more information about Suite Navigation,
     * see this article:
     * https://msdn.microsoft.com/en-us/library/office/dn614990.aspx
     */
    suiteNav: IComponentVisible;
}
export interface IClientSideApplicationWrapper {
    default: ClientSideApplication;
}
/**
 * RESERVED FOR INTERNAL USAGE.  Applications interact with the shell via
 * the IShell interface.
 *
 * @internal
 */
export default class Shell implements IShell {
    private static _logSource;
    private static _instance;
    private _rootServiceScope;
    private _spPageChrome;
    private _application;
    private _suiteNav;
    private _preloadedDataReader;
    private _appPageContext;
    private _pageContext;
    private _basicHttpClient;
    private _httpClient;
    private _environment;
    static getInstance(): IShell;
    serviceScope: ServiceScope;
    pageContext: PageContext;
    appPageContext: AppPageContext;
    basicHttpClient: BasicHttpClient;
    httpClient: HttpClient;
    suiteNav: IComponentVisible;
    environment: Environment;
    start(module: IClientSideApplicationWrapper | ClientSideApplication, preloadedData: IPreloadedData): void;
    private _startApplication(application);
    private _initializePreload(preloadedData);
    /**
     * Populates the webPart pageContext using the data from the app Page Context. AppPageContext
     * must be populated already.
     */
    private _initializePageContextFromAppContext(pageContext, appPageContext);
    private _initializeEnvironment(environment);
}
