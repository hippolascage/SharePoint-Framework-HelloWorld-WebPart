{"version":3,"sources":["local/framework/shell/PreloadedDataReader.ts"],"names":[],"mappings":"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","file":"local/framework/shell/PreloadedDataReader.js","sourcesContent":["import {\r\n  SPFlight,\r\n  SPKillSwitch,\r\n  IClientSideComponentManifest,\r\n  IClientSideApplicationManifest,\r\n  ServiceScope,\r\n  IDigestCache,\r\n  digestCacheServiceKey,\r\n  SPCdnUrlProvider,\r\n  IODataWeb,\r\n  IODataNavigationNode,\r\n  IODataNavigationNodeCollection,\r\n  IODataContextWebInformation\r\n} from '@microsoft/sp-client-base';\r\n\r\nimport IOdataList from '../httpClient/odataTypes/IOdataList';\r\nimport IOdataListItem from '../httpClient/odataTypes/IOdataListItem';\r\nimport IOdataUser from '../httpClient/odataTypes/IOdataUser';\r\nimport { ISPPageContextInfo } from '../httpClient/odataTypes/ISPPageContextInfo';\r\nimport GuidHelpers from '../basicTypes/GuidHelpers';\r\nimport PageContext from '../pageContext/AppPageContext';\r\nimport SPNavigationNode from '../pageContext/SPNavigationNode';\r\nimport SPNavigationNodeCollection from '../pageContext/SPNavigationNodeCollection';\r\n\r\n/**\r\n  * This is a global variable that is embedded on pages rendered by the classic\r\n  * server-side rendering model.  We are relying on it only as a temporary workaround\r\n  * until we've completed the work to host a first party client-side application\r\n  * which will provide the expected preloadedData structure.\r\n  * (SPPPlat VSO task #147515)\r\n  */\r\ndeclare var _spPageContextInfo: {\r\n  siteAbsoluteUrl: string;\r\n  webAbsoluteUrl: string;        // ex. 'http://example.com/sites/PubSite'\r\n  webTitle: string;\r\n  webServerRelativeUrl: string;  // ex. '/sites/PubSite'\r\n  siteServerRelativeUrl: string;\r\n  serverRequestPath: string;     // ex. '/sites/PubSite/Pages/default.aspx'\r\n  pageItemId: number;            // ex. 2\r\n  pageListId: string;            // ex. \"{9fb9199b-65f2-4a4a-b597-11d1a44422c1}\"\r\n  isSiteAdmin: boolean;\r\n\r\n  webLanguage: number;           // ex. 1033\r\n  currentCultureName: string;    // ex. \"en-US\"\r\n  currentLanguage: number;       // ex. 1033\r\n  currentUICultureName: string;  // ex. \"en-US\"\r\n\r\n  navigationInfo: IODataNavigationNodeCollection;\r\n};\r\n\r\nexport default class PreloadedDataReader {\r\n  private _preloadedData: IPreloadedData;\r\n  private _isValid: boolean;\r\n\r\n  private static _toNavNodes(\r\n    srcNodes: IODataNavigationNode[],\r\n    pageContext: PageContext): SPNavigationNode[] {\r\n\r\n    const items: SPNavigationNode[] = new Array<SPNavigationNode>();\r\n\r\n    if (srcNodes) {\r\n      for (let i: number = 0; i < srcNodes.length; i++) {\r\n        const srcItem: IODataNavigationNode = srcNodes[i];\r\n        const item: SPNavigationNode = new SPNavigationNode(pageContext);\r\n        item.load({ id: srcItem.Id });\r\n        item.updateOdataObject(srcItem);\r\n\r\n        items.push(item);\r\n      }\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  constructor(preloadedData: IPreloadedData) {\r\n    this._preloadedData = preloadedData;\r\n    this._isValid = false;\r\n\r\n    if (this._preloadedData === undefined ||\r\n      !GuidHelpers.isValid(this._preloadedData.clientSideApplicationId)) {\r\n      console.log('Warning: PreloadedDataReader: No preloaded data was found');\r\n    } else {\r\n      this._isValid = true;\r\n\r\n      if (this._preloadedData.spPageContextInfo) {\r\n        SPFlight.initialize(this._preloadedData.spPageContextInfo.ExpFeatures);\r\n        SPKillSwitch.initialize(this._preloadedData.spPageContextInfo.killSwitches);\r\n      }\r\n    }\r\n  }\r\n\r\n  public initializeDigestCache(serviceScope: ServiceScope): void {\r\n    if (this._isValid) {\r\n      // @todo: (VSO task #163923) This will need to be updated when PreloadedDataReader\r\n      // is wired up to the final version of HttpClient from sp-client-base.\r\n      if (this._preloadedData.contextWebInfo\r\n        && this._preloadedData.spPageContextInfo\r\n        && this._preloadedData.spPageContextInfo.webServerRelativeUrl) {\r\n\r\n        serviceScope.whenFinished(() => {\r\n          const digestCache: IDigestCache = serviceScope.consume(digestCacheServiceKey);\r\n          console.log('PreloadedDataReader: Added preloaded FormDigestValue to cache');\r\n\r\n          const expirationTimestamp: number = performance.now()\r\n            + 1000 * this._preloadedData.contextWebInfo.FormDigestTimeoutSeconds;\r\n\r\n          digestCache.addDigestToCache(\r\n            this._preloadedData.spPageContextInfo.webServerRelativeUrl,\r\n            this._preloadedData.contextWebInfo.FormDigestValue,\r\n            expirationTimestamp\r\n          );\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  public initializePageContext(pageContext: PageContext): void {\r\n    if (this._isValid) {\r\n      pageContext.application.load({\r\n        clientSideApplicationId: this._preloadedData.clientSideApplicationId,\r\n        hostedByClassicPage: false\r\n      });\r\n\r\n      pageContext.web.updateOdataObject(undefined);\r\n      pageContext.list.updateOdataObject(undefined);\r\n      pageContext.listItem.updateOdataObject(undefined);\r\n      pageContext.core.updateOdataObject(undefined);\r\n\r\n      const web: IODataWeb = this._preloadedData.web;\r\n      if (web) {\r\n        pageContext.web.load({\r\n          id: GuidHelpers.getNormalized(web.Id),\r\n          serverRelativeUrl: web.ServerRelativeUrl,\r\n          title: web.Title\r\n        });\r\n        pageContext.web.updateOdataObject(web);\r\n      }\r\n\r\n      const list: IOdataList = this._preloadedData.list;\r\n      if (list) {\r\n        pageContext.list.load({\r\n          id: GuidHelpers.getNormalized(list.Id),\r\n          title: list.Title,\r\n          description: list.Description\r\n        });\r\n        pageContext.list.updateOdataObject(list);\r\n      }\r\n\r\n      const listItem: IOdataListItem = this._preloadedData.item;\r\n      if (listItem) {\r\n        pageContext.listItem.load({\r\n          id: listItem.ID\r\n        });\r\n        pageContext.listItem.updateOdataObject(listItem);\r\n      }\r\n\r\n      const user: IOdataUser = this._preloadedData.user;\r\n      if (user) {\r\n        pageContext.user.load({\r\n          id: user.Id\r\n        });\r\n        pageContext.user.updateOdataObject(user);\r\n      }\r\n\r\n      const spPageContextInfo: ISPPageContextInfo = this._preloadedData.spPageContextInfo;\r\n      if (spPageContextInfo) {\r\n        pageContext.core.load({\r\n          MenuData: spPageContextInfo.MenuData,\r\n          currentCultureName: spPageContextInfo.currentCultureName,\r\n          currentUICultureName: spPageContextInfo.currentUICultureName,\r\n          correlationId: spPageContextInfo.CorrelationId,\r\n          spoEnvironment: spPageContextInfo.env,\r\n          farmLabel: spPageContextInfo.farmLabel,\r\n          groupColor: spPageContextInfo.groupColor,\r\n          hasManageWebPermission: spPageContextInfo.hasManageWebPermission,\r\n          layoutsUrl: spPageContextInfo.layoutsUrl,\r\n          listPermsMask: spPageContextInfo.listPermsMask,\r\n          siteAbsoluteUrl: spPageContextInfo.siteAbsoluteUrl,\r\n          siteClientTag: spPageContextInfo.siteClientTag,\r\n          siteId: spPageContextInfo.siteId,\r\n          siteServerRelativeUrl: spPageContextInfo.siteServerRelativeUrl,\r\n          siteSubscriptionId: spPageContextInfo.siteSubscriptionId,\r\n          systemUserKey: spPageContextInfo.systemUserKey,\r\n          themedCssFolderUrl: spPageContextInfo.themedCssFolderUrl,\r\n          userDisplayName: spPageContextInfo.userDisplayName,\r\n          userLoginName: spPageContextInfo.userLoginName,\r\n          webAbsoluteUrl: spPageContextInfo.webAbsoluteUrl,\r\n          webId: spPageContextInfo.webId,\r\n          webLogoUrl: spPageContextInfo.webLogoUrl,\r\n          webServerRelativeUrl: spPageContextInfo.webServerRelativeUrl,\r\n          webTitle: spPageContextInfo.webTitle,\r\n          webTemplate: spPageContextInfo.webTemplate,\r\n          webPermMasks: spPageContextInfo.webPermMasks\r\n        });\r\n        pageContext.core.updateOdataObject(spPageContextInfo);\r\n      }\r\n\r\n      if (this._preloadedData.publicCdnOrigin) {\r\n        SPCdnUrlProvider.initialize(this._preloadedData.publicCdnOrigin);\r\n      }\r\n\r\n      // NOTE: We have to access the window using this syntax.  Originally we\r\n      // used the conventional approach, but it caused a compatibility problem\r\n      // for the IE web browser.\r\n      /* tslint:disable:no-string-literal */\r\n    } else if (window['_spPageContextInfo'] !== undefined) {\r\n      // Fallback for classic pages\r\n      pageContext.application.load({\r\n        clientSideApplicationId: '00000000-0000-0000-0000-000000000000',\r\n        hostedByClassicPage: true\r\n      });\r\n\r\n      pageContext.web.load({\r\n        id: '00000000-0000-0000-0000-000000000000',\r\n        serverRelativeUrl: _spPageContextInfo.webServerRelativeUrl,\r\n        title: _spPageContextInfo.webTitle\r\n      });\r\n\r\n      if (_spPageContextInfo.pageListId) {\r\n        pageContext.list.load({\r\n          id: GuidHelpers.getNormalized(_spPageContextInfo.pageListId),\r\n          title: '',\r\n          description: ''\r\n        });\r\n\r\n        if (_spPageContextInfo.pageItemId) {\r\n          pageContext.listItem.load({\r\n            id: _spPageContextInfo.pageItemId\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      // @todo: This breaks unit tests.\r\n      // throw new Error('The _spClientSidePageContext variable is missing');\r\n    }\r\n\r\n    if (this._preloadedData.spPageContextInfo && this._preloadedData.spPageContextInfo.navigationInfo) {\r\n      this._initNav(\r\n        pageContext.quickLaunch,\r\n        this._preloadedData.spPageContextInfo.navigationInfo.quickLaunch,\r\n        pageContext);\r\n      this._initNav(\r\n        pageContext.topNav,\r\n        this._preloadedData.spPageContextInfo.navigationInfo.topNav,\r\n        pageContext);\r\n    }\r\n  }\r\n\r\n  private _initNav(\r\n    target: SPNavigationNodeCollection,\r\n    source: IODataNavigationNode[],\r\n    pageContext: PageContext): void {\r\n    if (!target || !source) {\r\n      return;\r\n    }\r\n\r\n    target.updateOdataObject(source);\r\n\r\n    const items: SPNavigationNode[] = PreloadedDataReader._toNavNodes(source, pageContext);\r\n    target.items = items;\r\n  }\r\n}\r\n\r\nexport interface IPreloadedData {\r\n  clientSideApplicationId: string;\r\n  contextWebInfo?: IODataContextWebInformation;\r\n  spPageContextInfo?: ISPPageContextInfo;\r\n  user?: IOdataUser;\r\n  web?: IODataWeb;\r\n  list?: IOdataList;\r\n  item?: IOdataListItem;\r\n  page?: { DoesUserHaveEditPermission: boolean };\r\n  quickLaunch?: IODataNavigationNodeCollection;\r\n  manifests?: IClientSideComponentManifest[];\r\n  publicCdnOrigin?: string[];\r\n\r\n  // Only in when the application uses manifestVersion=2:\r\n  clientSideApplicationManifest?: IClientSideApplicationManifest;\r\n}"],"sourceRoot":"/src"}