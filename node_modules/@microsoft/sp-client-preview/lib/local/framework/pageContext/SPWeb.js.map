{"version":3,"sources":["local/framework/pageContext/SPWeb.ts"],"names":[],"mappings":";;;;;;AACA,gCAAsD,mBAAmB,CAAC,CAAA;AAC1E,oBAAyC,mBAAmB,CAAC,CAAA;AAE7D,4BAAwB,2BAA2B,CAAC,CAAA;AAapD;;;;;IAKI;AACJ;IAAmC,yBAAe;IAMhD,eAAY,WAAwB;QAClC,kBAAM,WAAW,CAAC,CAAC;QAEnB,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;QACrB,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;IAC1B,CAAC;IAED;;;OAGG;IACI,oBAAI,GAAX,UAAY,IAAgB;QAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,qBAAW,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAClC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;QAEnB,8BAAwB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAEjD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;QAEzB,IAAI,CAAC,KAAK,GAAG,sCAAoB,CAAC,KAAK,CAAC;IAC1C,CAAC;IAKD,sBAAW,qBAAE;QAHb;;WAEG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC;;;OAAA;IAMD,sBAAW,oCAAiB;QAJ5B;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACjC,CAAC;;;OAAA;IAKD,sBAAW,wBAAK;QAHhB;;WAEG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;;;OAAA;IAKD,sBAAW,6BAAU;QAHrB;;WAEG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC;QACpC,CAAC;;;OAAA;IAED;;;;OAIG;IACI,8BAAc,GAArB;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACI,iCAAiB,GAAxB,UAAyB,KAAgB;QACvC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IACH,YAAC;AAAD,CA9EA,AA8EC,CA9EkC,yBAAe,GA8EjD;AA9ED;uBA8EC,CAAA","file":"local/framework/pageContext/SPWeb.js","sourcesContent":["import PageContext from './AppPageContext';\r\nimport PageContextItem, { PageContextItemState } from './PageContextItem';\r\nimport { requireServerRelativeUrl } from '../basicTypes/url';\r\nimport SPSite from './SPSite';\r\nimport GuidHelpers from '../basicTypes/GuidHelpers';\r\nimport { IODataWeb } from '@microsoft/sp-client-base';\r\n/**\r\n  * This interface is used with SPWeb.load()\r\n  *\r\n  * @alpha\r\n  */\r\nexport interface ISPWebArgs {\r\n  id: string;\r\n  serverRelativeUrl: string;\r\n  title: string;\r\n}\r\n\r\n/**\r\n  * This class is primarily used with the PageContext class.  It provides contextual\r\n  * information for the SharePoint site (\"web\") that hosts the page.\r\n  *\r\n  * @alpha\r\n  */\r\nexport default class SPWeb extends PageContextItem {\r\n  private _id: string;\r\n  private _serverRelativeUrl: string;\r\n  private _title: string;\r\n  private _odataObject: IODataWeb;\r\n\r\n  constructor(pageContext: PageContext) {\r\n    super(pageContext);\r\n\r\n    this._id = undefined;\r\n    this._serverRelativeUrl = undefined;\r\n    this._title = undefined;\r\n  }\r\n\r\n  /**\r\n   * Assigns all properties of the object, then assigns the \"state\" property\r\n   * to PageContextItemState.Ready.\r\n   */\r\n  public load(args: ISPWebArgs): void {\r\n    this.validateLoad();\r\n\r\n    GuidHelpers.requireValid(args.id);\r\n    this._id = args.id;\r\n\r\n    requireServerRelativeUrl(args.serverRelativeUrl);\r\n    this._serverRelativeUrl = args.serverRelativeUrl;\r\n\r\n    this._title = args.title;\r\n\r\n    this.state = PageContextItemState.Ready;\r\n  }\r\n\r\n  /**\r\n   * The GUID that identifies the SPWeb on the server.\r\n   */\r\n  public get id(): string {\r\n    return this._id;\r\n  }\r\n\r\n  /**\r\n   * Returns a server-relative URL for this SPWeb.\r\n   * Example: \"/sites/PubSite/SubWeb\"\r\n   */\r\n  public get serverRelativeUrl(): string {\r\n    return this._serverRelativeUrl;\r\n  }\r\n\r\n  /**\r\n   * Returns the title of the SharePoint site.\r\n   */\r\n  public get title(): string {\r\n    return this._title;\r\n  }\r\n\r\n  /**\r\n   * Returns the parent site collection that this site (\"web\") belongs to.\r\n   */\r\n  public get parentSite(): SPSite {\r\n    return this.getPageContext().site;\r\n  }\r\n\r\n  /**\r\n   * Returns an ODATA object containing additional information for this SharePoint site (\"web\"),\r\n   * if available.  Otherwise, this returns undefined.  If your application fetches this\r\n   * data itself, it can call updateOdataObject() to update the context.\r\n   */\r\n  public getOdataObject(): IODataWeb {\r\n    return this._odataObject;\r\n  }\r\n\r\n  /**\r\n   * Updates the ODATA object that will be returned when getOdataObject() is called.\r\n   * This allows the application to share its data with other objects (e.g. web parts)\r\n   * to avoid unnecessary REST calls.\r\n   */\r\n  public updateOdataObject(value: IODataWeb): void {\r\n    this._odataObject = value;\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}