import { IODataNavigationNode } from '@microsoft/sp-client-base';
import PageContext from './AppPageContext';
import PageContextItem from './PageContextItem';
/**
  * This interface is used with SPNavigationNode.load()
  *
  * @alpha
  */
export interface ISPNavigationNodeArgs {
    id: number;
}
/**
  * This class is primarily used with the PageContext class.  It provides quick launch
  * navigation information for the hosting application.
  *
  * @alpha
  */
export default class SPNavigationNode extends PageContextItem {
    private _id;
    private _odataObject;
    constructor(pageContext: PageContext);
    /**
     * Assigns all properties of the object, then assigns the "state" property
     * to PageContextItemState.Ready.
     */
    load(args: ISPNavigationNodeArgs): void;
    /**
     * The numeric ID that identifies the SPNavigationNode on the server.
     */
    id: number;
    /**
     * Returns an ODATA object containing additional navigation information if available.
     * Otherwise, this returns undefined.  If your application fetches thiscls
     * data itself, it can call updateOdataObject() to update the context.
     */
    getOdataObject(): IODataNavigationNode;
    /**
     * Updates the ODATA object that will be returned when getOdataObject() is called.
     * This allows the application to share its data with other objects (e.g. web parts)
     * to avoid unnecessary REST calls.
     */
    updateOdataObject(value: IODataNavigationNode): void;
}
