{"version":3,"sources":["local/framework/pageContext/AppPageContext.ts"],"names":[],"mappings":";AAAA,+BAAyC,2BAA2B,CAAC,CAAA;AACrE,+BAA4C,2BAA2B,CAAC,CAAA;AAExE,mCAA+B,sBAAsB,CAAC,CAAA;AACtD,sBAAkB,SAAS,CAAC,CAAA;AAC5B,uBAAmB,UAAU,CAAC,CAAA;AAC9B,uBAAmB,UAAU,CAAC,CAAA;AAC9B,2BAAuB,cAAc,CAAC,CAAA;AACtC,uBAAmB,UAAU,CAAC,CAAA;AAC9B,2CAAuC,8BAA8B,CAAC,CAAA;AACtE,gCAA4B,mBAAmB,CAAC,CAAA;AAEhD;;;;;;;;IAQI;AACJ;IAcE,wBAAY,YAA0B;QACpC,IAAI,CAAC,YAAY,GAAG,IAAI,4BAAkB,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK,GAAG,IAAI,gBAAM,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,eAAK,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,gBAAM,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,IAAI,oBAAU,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,YAAY,GAAG,IAAI,oCAA0B,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,IAAI,oCAA0B,CAAC,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,KAAK,GAAG,IAAI,yBAAe,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,KAAK,GAAG,IAAI,gBAAM,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,mBAAmB,GAAG,IAAI,4CAA2B,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACnF,CAAC;IAOD,sBAAW,uCAAW;QALtB,qFAAqF;QAErF;;WAEG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;;;OAAA;IAMD,sBAAW,gCAAI;QAJf;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;;;OAAA;IAMD,sBAAW,+BAAG;QAJd;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;;;OAAA;IAMD,sBAAW,gCAAI;QAJf;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;;;OAAA;IAMD,sBAAW,oCAAQ;QAJnB;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;;;OAAA;IAMD,sBAAW,uCAAW;QAJtB;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;;;OAAA;IAMD,sBAAW,kCAAM;QAJjB;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;;;OAAA;IAMD,sBAAW,gCAAI;QAJf;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;;;OAAA;IAMD,sBAAW,gCAAI;QAJf;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;;;OAAA;IAKD,sBAAW,8CAAkB;QAH7B;;WAEG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC;QAClC,CAAC;;;OAAA;IACH,qBAAC;AAAD,CA1GA,AA0GC,IAAA;AA1GD;gCA0GC,CAAA;AAEY,gCAAwB,GAA+B,2BAAU,CAAC,MAAM,CAClF,+BAA+B,EAAE,cAAc,CAAC,CAAC","file":"local/framework/pageContext/AppPageContext.js","sourcesContent":["import { ServiceScope, ServiceKey } from '@microsoft/sp-client-base';\r\nimport { UrlQueryParameterCollection } from '@microsoft/sp-client-base';\r\n\r\nimport ApplicationContext from './ApplicationContext';\r\nimport SPWeb from './SPWeb';\r\nimport SPSite from './SPSite';\r\nimport SPList from './SPList';\r\nimport SPListItem from './SPListItem';\r\nimport SPUser from './SPUser';\r\nimport SPNavigationNodeCollection from './SPNavigationNodeCollection';\r\nimport PageContextCore from './PageContextCore';\r\n\r\n/**\r\n  * The page context represents contextual information about the SharePoint page that\r\n  * is currently being viewed, such as its site URL, the client side application ID,\r\n  * the current user, etc.  The page context objects themselves represent key information\r\n  * that is needed e.g. to identify the site/web/list/listitem in a REST service call,\r\n  * but it is not a full cache with invalidation and change notifications.  If your\r\n  * application maintains such a cache, it can keep the PageContext up to date by\r\n  * means of methods such as SPListItem.updateOdataObject().\r\n  */\r\nexport default class AppPageContext {\r\n  public webServerRelativeUrl: string;\r\n  public webAbsoluteUrl: string;\r\n  private _application: ApplicationContext;\r\n  private _site: SPSite;\r\n  private _web: SPWeb;\r\n  private _list: SPList;\r\n  private _listItem: SPListItem;\r\n  private _quickLaunch: SPNavigationNodeCollection;\r\n  private _topNav: SPNavigationNodeCollection;\r\n  private _core: PageContextCore;\r\n  private _user: SPUser;\r\n  private _urlQueryParameters: UrlQueryParameterCollection;\r\n\r\n  constructor(serviceScope: ServiceScope) {\r\n    this._application = new ApplicationContext(this);\r\n    this._site = new SPSite(this);\r\n    this._web = new SPWeb(this);\r\n    this._list = new SPList(this);\r\n    this._listItem = new SPListItem(this);\r\n    this._quickLaunch = new SPNavigationNodeCollection(this);\r\n    this._topNav = new SPNavigationNodeCollection(this);\r\n    this._core = new PageContextCore(this);\r\n    this._user = new SPUser(this);\r\n    this._urlQueryParameters = new UrlQueryParameterCollection(window.location.href);\r\n  }\r\n\r\n  // TODO: Bug 176509: Change PageContext getters to readonly on Typescript 2.0 release\r\n\r\n  /**\r\n   * Contextual information for the client-side application.\r\n   */\r\n  public get application(): ApplicationContext {\r\n    return this._application;\r\n  }\r\n\r\n  /**\r\n   * Contextual information for the SharePoint site collection that is hosting the page.\r\n   * If unsure whether this object is initialized, check the SPSite.state property first.\r\n   */\r\n  public get site(): SPSite {\r\n    return this._site;\r\n  }\r\n\r\n  /**\r\n   * Contextual information for the SharePoint site (\"web\") that is hosting the page.\r\n   * If unsure whether this object is initialized, check the SPWeb.state property first.\r\n   */\r\n  public get web(): SPWeb {\r\n    return this._web;\r\n  }\r\n\r\n  /**\r\n   * Contextual information for the SharePoint list that is hosting the page.\r\n   * If unsure whether this object is initialized, check the SPList.state property first.\r\n   */\r\n  public get list(): SPList {\r\n    return this._list;\r\n  }\r\n\r\n  /**\r\n   * Contextual information for the SharePoint list item that stores data for the page.\r\n   * If unsure whether this object is initialized, check the SPListItem.state property first.\r\n   */\r\n  public get listItem(): SPListItem {\r\n    return this._listItem;\r\n  }\r\n\r\n  /**\r\n   * Contextual quick launch navigation information for the page.\r\n   * If unsure whether this object is initialized, check the SPNavigation.state property first.\r\n   */\r\n  public get quickLaunch(): SPNavigationNodeCollection {\r\n    return this._quickLaunch;\r\n  }\r\n\r\n  /**\r\n   * Top navigation information for the page.\r\n   * If unsure whether this object is initialized, check the SPNavigation.state property first.\r\n   */\r\n  public get topNav(): SPNavigationNodeCollection {\r\n    return this._topNav;\r\n  }\r\n\r\n  /**\r\n   * Contextual information for the SharePoint SPPageContextInfo object\r\n   * If unsure whether this object is initialized, check the SPPageContextInfo.state property first.\r\n   */\r\n  public get core(): PageContextCore {\r\n    return this._core;\r\n  }\r\n\r\n  /**\r\n   * Contextual information for the current SharePoint user\r\n   * If unsure whether this object is initialized, check the SPPageContextInfo.state property first.\r\n   */\r\n  public get user(): SPUser {\r\n    return this._user;\r\n  }\r\n\r\n  /**\r\n   * Object for retrieving the current page's query parameter values.\r\n   */\r\n  public get urlQueryParameters(): UrlQueryParameterCollection {\r\n    return this._urlQueryParameters;\r\n  }\r\n}\r\n\r\nexport const appPageContextServiceKey: ServiceKey<AppPageContext> = ServiceKey.create<AppPageContext>\r\n  ('sp-client-preview:PageContext', AppPageContext);\r\n"],"sourceRoot":"/src"}