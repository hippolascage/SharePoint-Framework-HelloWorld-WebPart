{"version":3,"sources":["local/framework/pageContext/SPNavigationNodeCollection.ts"],"names":[],"mappings":";;;;;;AACA,gCAAsD,mBAAmB,CAAC,CAAA;AAa1E;;;;;IAKI;AACJ;IAAwD,8CAAe;IAKrE,oCAAY,WAAwB;QAClC,kBAAM,WAAW,CAAC,CAAC;QAEnB,IAAI,CAAC,KAAK,GAAG,sCAAoB,CAAC,KAAK,CAAC;IAC1C,CAAC;IAKD,sBAAW,6CAAK;QAHhB;;WAEG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;QAED;;WAEG;aACH,UAAiB,KAAyB;YACxC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC;;;OAPA;IASD;;;;OAIG;IACI,mDAAc,GAArB;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACI,sDAAiB,GAAxB,UAAyB,KAA6B;QACpD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IACH,iCAAC;AAAD,CA1CA,AA0CC,CA1CuD,yBAAe,GA0CtE;AA1CD;4CA0CC,CAAA","file":"local/framework/pageContext/SPNavigationNodeCollection.js","sourcesContent":["import PageContext from './AppPageContext';\r\nimport PageContextItem, { PageContextItemState } from './PageContextItem';\r\nimport SPNavigationNode, { ISPNavigationNodeArgs } from './SPNavigationNode';\r\nimport { IODataNavigationNode } from '@microsoft/sp-client-base';\r\n\r\n/**\r\n  * This interface is used with SPNavigationNodeCollection.load()\r\n  *\r\n  * @alpha\r\n  */\r\nexport interface ISPNavigationNodeCollectionArgs {\r\n  items: ISPNavigationNodeArgs[];\r\n}\r\n\r\n/**\r\n  * This class is primarily used with the PageContext class. It provides navigation\r\n  * information for the hosting application.\r\n  *\r\n  * @alpha\r\n  */\r\nexport default class SPNavigationNodeCollection extends PageContextItem {\r\n  private _items: SPNavigationNode[];\r\n\r\n  private _odataObject: IODataNavigationNode[];\r\n\r\n  constructor(pageContext: PageContext) {\r\n    super(pageContext);\r\n\r\n    this.state = PageContextItemState.Ready;\r\n  }\r\n\r\n  /**\r\n   * Returns all navigation nodes in the collection.\r\n   */\r\n  public get items(): SPNavigationNode[] {\r\n    return this._items;\r\n  }\r\n\r\n  /**\r\n   * Returns all navigation nodes in the collection.\r\n   */\r\n  public set items(value: SPNavigationNode[]) {\r\n    this._items = value;\r\n  }\r\n\r\n  /**\r\n   * Returns an ODATA object containing additional navigation information if available.\r\n   * Otherwise, this returns undefined.  If your application fetches this\r\n   * data itself, it can call updateOdataObject() to update the context.\r\n   */\r\n  public getOdataObject(): IODataNavigationNode[] {\r\n    return this._odataObject;\r\n  }\r\n\r\n  /**\r\n   * Updates the ODATA object that will be returned when getOdataObject() is called.\r\n   * This allows the application to share its data with other objects (e.g. web parts)\r\n   * to avoid unnecessary REST calls.\r\n   */\r\n  public updateOdataObject(value: IODataNavigationNode[]): void {\r\n    this._odataObject = value;\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}