import PageContext from './AppPageContext';
import PageContextItem from './PageContextItem';
import SPList from './SPList';
import IOdataListItem from '../httpClient/odataTypes/IOdataListItem';
/**
  * This interface is used with SPListItem.load()
  *
  * @alpha
  */
export interface ISPListItemArgs {
    id: number;
}
/**
  * This class is primarily used with the PageContext class.  It provides contextual
  * information for the SharePoint list item associated with the current page.
  *
  * @alpha
  */
export default class SPListItem extends PageContextItem {
    private _id;
    private _list;
    private _odataObject;
    constructor(pageContext: PageContext);
    /**
     * Assigns all properties of the object, then assigns the "state" property
     * to PageContextItemState.Ready.
     */
    load(args: ISPListItemArgs): void;
    /**
     * Returns the integer that identifies this list item on the server.  These integers
     * are assigned in increasing order.
     */
    id: number;
    /**
     * Returns the SPList that this list item belongs to.
     */
    parentList: SPList;
    /**
     * Returns an ODATA object containing additional information for this list item, if available.
     * Otherwise, this returns undefined.  If your application fetches this data itself, it
     * can call updateOdataObject() to update the context.
     */
    getOdataObject(): IOdataListItem;
    /**
     * Updates the ODATA object that will be returned when getOdataObject() is called.
     * This allows the application to share its data with other objects (e.g. web parts)
     * to avoid unnecessary REST calls.
     */
    updateOdataObject(value: IOdataListItem): void;
}
