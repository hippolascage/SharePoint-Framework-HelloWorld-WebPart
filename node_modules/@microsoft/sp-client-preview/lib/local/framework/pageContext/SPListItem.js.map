{"version":3,"sources":["local/framework/pageContext/SPListItem.ts"],"names":[],"mappings":";;;;;;AACA,gCAAsD,mBAAmB,CAAC,CAAA;AAa1E;;;;;IAKI;AACJ;IAAwC,8BAAe;IAKrD,oBAAY,WAAwB;QAClC,kBAAM,WAAW,CAAC,CAAC;QAEnB,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;IAChC,CAAC;IAED;;;OAGG;IACI,yBAAI,GAAX,UAAY,IAAqB;QAC/B,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;QAEnB,IAAI,CAAC,KAAK,GAAG,sCAAoB,CAAC,KAAK,CAAC;IAC1C,CAAC;IAMD,sBAAW,0BAAE;QAJb;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC;;;OAAA;IAKD,sBAAW,kCAAU;QAHrB;;WAEG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC;QACpC,CAAC;;;OAAA;IAED;;;;OAIG;IACI,mCAAc,GAArB;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACI,sCAAiB,GAAxB,UAAyB,KAAqB;QAC5C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IACH,iBAAC;AAAD,CAzDA,AAyDC,CAzDuC,yBAAe,GAyDtD;AAzDD;4BAyDC,CAAA","file":"local/framework/pageContext/SPListItem.js","sourcesContent":["import PageContext from './AppPageContext';\r\nimport PageContextItem, { PageContextItemState } from './PageContextItem';\r\nimport SPList from './SPList';\r\nimport IOdataListItem from '../httpClient/odataTypes/IOdataListItem';\r\n\r\n/**\r\n  * This interface is used with SPListItem.load()\r\n  *\r\n  * @alpha\r\n  */\r\nexport interface ISPListItemArgs {\r\n  id: number;\r\n}\r\n\r\n/**\r\n  * This class is primarily used with the PageContext class.  It provides contextual\r\n  * information for the SharePoint list item associated with the current page.\r\n  *\r\n  * @alpha\r\n  */\r\nexport default class SPListItem extends PageContextItem {\r\n  private _id: number;\r\n  private _list: SPList;\r\n  private _odataObject: IOdataListItem;\r\n\r\n  constructor(pageContext: PageContext) {\r\n    super(pageContext);\r\n\r\n    this._id = undefined;\r\n    this._list = undefined;\r\n    this._odataObject = undefined;\r\n  }\r\n\r\n  /**\r\n   * Assigns all properties of the object, then assigns the \"state\" property\r\n   * to PageContextItemState.Ready.\r\n   */\r\n  public load(args: ISPListItemArgs): void {\r\n    this.validateLoad();\r\n\r\n    this._id = args.id;\r\n\r\n    this.state = PageContextItemState.Ready;\r\n  }\r\n\r\n  /**\r\n   * Returns the integer that identifies this list item on the server.  These integers\r\n   * are assigned in increasing order.\r\n   */\r\n  public get id(): number {\r\n    return this._id;\r\n  }\r\n\r\n  /**\r\n   * Returns the SPList that this list item belongs to.\r\n   */\r\n  public get parentList(): SPList {\r\n    return this.getPageContext().list;\r\n  }\r\n\r\n  /**\r\n   * Returns an ODATA object containing additional information for this list item, if available.\r\n   * Otherwise, this returns undefined.  If your application fetches this data itself, it\r\n   * can call updateOdataObject() to update the context.\r\n   */\r\n  public getOdataObject(): IOdataListItem {\r\n    return this._odataObject;\r\n  }\r\n\r\n  /**\r\n   * Updates the ODATA object that will be returned when getOdataObject() is called.\r\n   * This allows the application to share its data with other objects (e.g. web parts)\r\n   * to avoid unnecessary REST calls.\r\n   */\r\n  public updateOdataObject(value: IOdataListItem): void {\r\n    this._odataObject = value;\r\n  }\r\n}\r\n\r\n"],"sourceRoot":"/src"}