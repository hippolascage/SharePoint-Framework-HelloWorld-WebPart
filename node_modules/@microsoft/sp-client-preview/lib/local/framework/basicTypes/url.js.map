{"version":3,"sources":["local/framework/basicTypes/url.ts"],"names":[],"mappings":"AAAA;;GAEG;;AAEH;;;;GAIG;AACH,0BAAiC,GAAW;IAC1C,uEAAuE;IACvE,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;AAC/B,CAAC;AAHe,wBAAgB,mBAG/B,CAAA;AAED;;;;GAIG;AACH,kCAAyC,GAAW;IAClD,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC3B,MAAM,KAAK,CAAC,mCAAmC,CAAC,CAAC;IACnD,CAAC;AACH,CAAC;AAJe,gCAAwB,2BAIvC,CAAA","file":"local/framework/basicTypes/url.js","sourcesContent":["/**\r\n * @copyright (c) Microsoft Corporation. All rights reserved.\r\n */\r\n\r\n/**\r\n * Checks if the url argument is a server relative url.\r\n *\r\n * @param url - Test url\r\n */\r\nexport function isServerRelative(url: string): boolean {\r\n  // If the first character is a forward-slash the url is server relative\r\n  return url && url[0] === '/';\r\n}\r\n\r\n/**\r\n * Throw an Error if the url argument is not a server relative url.\r\n *\r\n * @param url - A string, which should be a server relative url.\r\n */\r\nexport function requireServerRelativeUrl(url: string): void {\r\n  if (!isServerRelative(url)) {\r\n    throw Error('A server-relative URL is required');\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}