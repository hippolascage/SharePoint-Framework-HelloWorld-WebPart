/**
 * @copyright Microsoft Corporation. All rights reserved.
 */
"use strict";
var CanvasStrings_resx_1 = require('../../sp-canvas/loc/CanvasStrings.resx');
/**
 * Static class for SPRte configuratoion
 * Note: We assume all RTE instances share the same configuration by design
 * Should this change in the future, we'll need to change this to non-static design
 */
var SPRteConfiguration = (function () {
    function SPRteConfiguration() {
        this._supportedFormatsArray = [
            {
                key: 'bold',
                editorKey: 'bold',
                browserKey: 'bold',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Bold',
                    shortcut: 'Ctrl+B',
                    title: CanvasStrings_resx_1.default.FormattingBarBoldButtonTitle
                }
            },
            {
                key: 'italic',
                editorKey: 'italic',
                browserKey: 'italic',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Italic',
                    shortcut: 'Ctrl+I',
                    title: CanvasStrings_resx_1.default.FormattingBarItalicButtonTitle
                }
            },
            {
                key: 'underline',
                editorKey: 'underline',
                browserKey: 'underline',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Underline',
                    shortcut: 'Ctrl+U',
                    title: CanvasStrings_resx_1.default.FormattingBarUnderlineButtonTitle
                }
            },
            {
                key: 'link',
                editorKey: 'link',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                masks: ['underline'],
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Link',
                    shortcut: 'Ctrl+K',
                    title: CanvasStrings_resx_1.default.FormattingBarLinkButtonTitle
                }
            },
            {
                key: 'alignLeft',
                editorKey: 'align',
                browserKey: 'justifyLeft',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                editorValue: 'left',
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignLeft',
                    title: CanvasStrings_resx_1.default.FormattingBarAlignLeftButtonTitle
                }
            },
            {
                browserKey: 'justifyCenter',
                key: 'alignCenter',
                editorKey: 'align',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                editorValue: 'center',
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignCenter',
                    title: CanvasStrings_resx_1.default.FormattingBarAlignCenterButtonTitle
                }
            },
            {
                key: 'alignRight',
                editorKey: 'align',
                browserKey: 'justifyRight',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                editorValue: 'right',
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignRight',
                    title: CanvasStrings_resx_1.default.FormattingBarAlignRightButtonTitle
                }
            },
            {
                key: 'bullet',
                editorKey: 'bullet',
                browserKey: 'insertUnorderedList',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'BulletedList',
                    title: CanvasStrings_resx_1.default.FormattingBarBulletListButtonTitle
                }
            },
            {
                key: 'list',
                editorKey: 'list',
                browserKey: 'insertOrderedList',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'NumberedList',
                    title: CanvasStrings_resx_1.default.FormattingBarNumberedListButtonTitle
                }
            },
            {
                key: 'h2',
                editorKey: 'h2',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: false,
                masks: ['bold', 'italic', 'underline'],
                button: {
                    canBeActive: true,
                    title: CanvasStrings_resx_1.default.FormattingBarHeading2ButtonTitle,
                    label: CanvasStrings_resx_1.default.FormattingBarHeading2ButtonTitle,
                    className: 'ToolbarButton--h2'
                }
            },
            {
                key: 'h3',
                editorKey: 'h3',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: false,
                masks: ['bold', 'italic', 'underline'],
                button: {
                    canBeActive: true,
                    title: CanvasStrings_resx_1.default.FormattingBarHeading3ButtonTitle,
                    label: CanvasStrings_resx_1.default.FormattingBarHeading3ButtonTitle,
                    className: 'ToolbarButton--h3'
                }
            },
            {
                key: 'h4',
                editorKey: 'h4',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: false,
                masks: ['bold', 'italic', 'underline'],
                button: {
                    canBeActive: true,
                    title: CanvasStrings_resx_1.default.FormattingBarHeading4ButtonTitle,
                    label: CanvasStrings_resx_1.default.FormattingBarHeading4ButtonTitle,
                    className: 'ToolbarButton--h4'
                }
            },
            {
                key: 'blockquote',
                editorKey: 'blockquote',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: false,
                masks: ['bold', 'italic', 'underline', 'alignLeft', 'alignCenter', 'alignRight'],
                button: {
                    canBeActive: true,
                    title: CanvasStrings_resx_1.default.FormattingBarQuoteButtonTitle,
                    label: CanvasStrings_resx_1.default.FormattingBarQuoteButtonTitle,
                    className: 'ToolbarButton--blockquote'
                }
            }
        ];
        // Build a map to look up formats by their key quickly
        this._formats = new Map();
        for (var _i = 0, _a = this._supportedFormatsArray; _i < _a.length; _i++) {
            var format = _a[_i];
            this._formats.set(format.key, format);
        }
        // Populate 'maskedBy' field of all formats based on 'masks' fields
        var maskingFormats = this._supportedFormatsArray.filter(function (format) { return !!format.masks; });
        for (var _b = 0, maskingFormats_1 = maskingFormats; _b < maskingFormats_1.length; _b++) {
            var maskingFormat = maskingFormats_1[_b];
            for (var _c = 0, _d = maskingFormat.masks; _c < _d.length; _c++) {
                var maskedFormatKey = _d[_c];
                var maskedFormat = this._formats.get(maskedFormatKey);
                if (!maskedFormat.maskedBy) {
                    maskedFormat.maskedBy = [maskingFormat.key];
                }
                else {
                    maskedFormat.maskedBy.push(maskingFormat.key);
                }
            }
        }
    }
    Object.defineProperty(SPRteConfiguration.prototype, "formats", {
        get: function () {
            return this._formats;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRteConfiguration.prototype, "supportedFormatsArray", {
        get: function () {
            return this._supportedFormatsArray;
        },
        enumerable: true,
        configurable: true
    });
    return SPRteConfiguration;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = SPRteConfiguration;

//# sourceMappingURL=SPRteConfiguration.js.map
