/**
 * @copyright Microsoft Corporation. All rights reserved.
 *
 * @file The button component used by toolbars on the Canvas.
 * It implements all common functionalities expected of a toolbar button.
 * It is used in the Canvas control toolbar and Rich Text Editor formatting bar.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var css_1 = require('office-ui-fabric-react/lib/utilities/css');
var React = require('react');
require('./ToolbarButton.scss');
(function (ButtonState) {
    ButtonState[ButtonState["Active"] = 0] = "Active";
    ButtonState[ButtonState["Disabled"] = 1] = "Disabled";
    ButtonState[ButtonState["Normal"] = 2] = "Normal";
})(exports.ButtonState || (exports.ButtonState = {}));
var ButtonState = exports.ButtonState;
/**
 * @class The button component used by toolbars on the Canvas.
 */
var ToolbarButton = (function (_super) {
    __extends(ToolbarButton, _super);
    /**
     * Constructs an instance of ToolbarButton
     */
    function ToolbarButton(props) {
        _super.call(this, props);
    }
    /**
     * Renders ToolbarButton
     */
    ToolbarButton.prototype.render = function () {
        var buttonClassName = css_1.css('ToolbarButton', this.props.className, {
            'ToolbarButton--disabled': this.props.disabled,
            'ToolbarButton--active': this.props.isActive
        });
        // @todo 198107: Clean this up when mdl2 icons are in
        var iconCssClass = this.props.fabricIconKey ?
            "ms-Icon ms-Icon--" + this.props.fabricIconKey : (this.props.iconClassName || '');
        return (React.createElement("button", {"aria-disabled": this.props.disabled ? true : undefined, "aria-label": this.props.title, "aria-pressed": this.props.canBeActive ? this.props.isActive : undefined, className: buttonClassName, key: this.props.key, onClick: this.props.onClick, title: this.props.title, tabIndex: this.props.tabIndex}, React.createElement("i", {className: iconCssClass}), this.props.label));
    };
    /* tslint:disable:member-access */
    ToolbarButton.defaultProps = {
        // required fields default to undefined
        key: undefined,
        fabricIconKey: undefined,
        onClick: undefined,
        // optional fields default values
        canBeActive: true,
        className: 'CanvasControlToolbar-item',
        disabled: false,
        isActive: false
    };
    return ToolbarButton;
}(React.Component));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ToolbarButton;

//# sourceMappingURL=ToolbarButton.js.map
