{"version":3,"sources":["local/appBase/components/canvas/canvas/CanvasZone.tsx"],"names":[],"mappings":"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","file":"local/appBase/components/canvas/canvas/CanvasZone.js","sourcesContent":["import * as React from 'react';\r\nimport { DisplayMode } from '@microsoft/sp-client-base';\r\n\r\nimport CanvasControlFactory from './CanvasControlFactory';\r\nimport CanvasControlType from './CanvasControlType';\r\nimport CanvasControlToolbar, { ICanvasControlToolbarProps } from './CanvasControlToolbar';\r\nimport CanvasToolboxHint, { ICanvasToolboxHintProps } from './CanvasToolboxHint';\r\nimport ICanvasControlProps from './ISerializedCanvasControl';\r\nimport WebPartZone from '../sampleCanvasControls/WebPartZone';\r\n\r\nimport './CanvasZone.scss';\r\nimport Strings from '../../sp-canvas/loc/CanvasStrings.resx';\r\n\r\nexport interface ICanvasZoneProps {\r\n  childControlProps: ICanvasControlProps;\r\n  displayMode: DisplayMode;\r\n  key: number;\r\n  onDeleteButtonClick: (n: number) => void;\r\n  onToolboxHintClick: (rowIndex: number, verticalPosition: number) => void;\r\n  /* tslint:disable:no-any */\r\n  ref: (ref: any) => void;\r\n  /* tslint:enable:no-any */\r\n  rowIndex: number;\r\n}\r\n\r\nexport default class CanvasZone extends React.Component<ICanvasZoneProps, void> {\r\n  private _css: string[];\r\n  private _childControlProps: ICanvasControlProps;\r\n  private _childControl: WebPartZone;\r\n\r\n  constructor(props: ICanvasZoneProps) {\r\n    super(props);\r\n\r\n    this._handleConfigureButtonClick = this._handleConfigureButtonClick.bind(this);\r\n    this._handleDeleteButtonClick = this._handleDeleteButtonClick.bind(this);\r\n\r\n    this._css = ['ms-Grid-col', 'ms-u-sm12'];\r\n    if (this.props.displayMode === DisplayMode.Edit) {\r\n      this._css.push('Authoring-element');\r\n    }\r\n    const tempOnChangeCallback: () => void = this.props.childControlProps.onChange;\r\n    this._childControlProps = JSON.parse(JSON.stringify(this.props.childControlProps));\r\n    this._childControlProps.onChange = tempOnChangeCallback;\r\n    this._childControlProps.ref = (ref) => {\r\n      this._childControl = ref;\r\n    };\r\n  }\r\n\r\n  public render(): React.ReactElement<ICanvasZoneProps> {\r\n    let toolbar: React.ReactElement<ICanvasControlToolbarProps>;\r\n    let topHint: React.ReactElement<ICanvasToolboxHintProps>;\r\n    let bottomHint: React.ReactElement<ICanvasToolboxHintProps>;\r\n\r\n    const onConfigureButtonClick: () => void = this._childControlProps.controlType === CanvasControlType.WebPartZone ?\r\n      this._handleConfigureButtonClick : undefined;\r\n\r\n    const toolbarProps: ICanvasControlToolbarProps = {\r\n      onConfigureButtonClick,\r\n      onDeleteButtonClick: this._handleDeleteButtonClick\r\n    };\r\n\r\n    if (this.props.displayMode === DisplayMode.Edit) {\r\n      toolbar = (\r\n        <CanvasControlToolbar {...toolbarProps} />\r\n      );\r\n\r\n      topHint = (\r\n        <CanvasToolboxHint\r\n          attachedTo='top'\r\n          onToolboxHintClick={this.props.onToolboxHintClick}\r\n          rowIndex={this.props.rowIndex}\r\n          ariaLabel={Strings.ToolboxHintTitle}\r\n          />\r\n      );\r\n\r\n      bottomHint = (\r\n        <CanvasToolboxHint\r\n          attachedTo='bottom'\r\n          onToolboxHintClick={this.props.onToolboxHintClick}\r\n          rowIndex={this.props.rowIndex + 1}\r\n          ariaLabel={Strings.ToolboxHintTitle}\r\n          />\r\n      );\r\n    }\r\n\r\n    const displayModeCssClass: string =\r\n          this.props.displayMode === DisplayMode.Edit ? 'CanvasZone--edit' : '';\r\n\r\n    return (\r\n      <div className='ms-Grid-col ms-u-sm12'>\r\n        <div className={`CanvasZone ${displayModeCssClass}`}>\r\n          { topHint }\r\n          { CanvasControlFactory.CreateCanvasControl(this._childControlProps.controlType, this._childControlProps) }\r\n          { toolbar }\r\n          { bottomHint }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public serialize(): ICanvasControlProps {\r\n    return this._childControl.serialize();\r\n  }\r\n\r\n  public setDisplayMode(newMode: DisplayMode): void {\r\n    this._childControl.setDisplayMode(newMode);\r\n  }\r\n\r\n  private _handleConfigureButtonClick(): void {\r\n    this._childControl.handleConfigureButtonClicked(true);\r\n  }\r\n\r\n  private _handleDeleteButtonClick(): void {\r\n    // WebPartZone will use the web part manager to call onWebPartDelete\r\n    if (this._childControlProps.controlType === CanvasControlType.WebPartZone) {\r\n      this._childControl.handleDeleteButtonClicked();\r\n    }\r\n\r\n    this.props.onDeleteButtonClick(this.props.rowIndex);\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}