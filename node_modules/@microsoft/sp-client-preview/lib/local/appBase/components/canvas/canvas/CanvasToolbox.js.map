{"version":3,"sources":["local/appBase/components/canvas/canvas/CanvasToolbox.tsx"],"names":[],"mappings":"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","file":"local/appBase/components/canvas/canvas/CanvasToolbox.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport {\r\n  DisplayMode,\r\n  Environment,\r\n  EnvironmentType,\r\n  environmentServiceKey } from '@microsoft/sp-client-base';\r\nimport { IClientSideWebPartManifest } from '@microsoft/sp-module-interfaces';\r\n\r\nimport CanvasControlType from './CanvasControlType';\r\nimport CanvasToolboxItemsGroup, { ICanvasToolboxItemsGroupProps } from './CanvasToolboxItemsGroup';\r\nimport ClientSideWebPartManager from '../../../../clientSideWebParts/core/ClientSideWebPartManager';\r\nimport { ICanvasContext } from './CanvasCore';\r\nimport { IToolboxItem } from './CanvasToolboxItem';\r\n\r\nimport './CanvasToolbox.scss';\r\nimport Strings from '../../sp-canvas/loc/CanvasStrings.resx';\r\n\r\nexport interface ICanvasToolboxProps {\r\n  isOpen: boolean;\r\n  /* tslint:disable:no-any */\r\n  onToolboxItemClick: (controlType: CanvasControlType, itemProps: any, rowIndex: number) => void;\r\n  /* tslint:enable:no-any */\r\n  rowIndex: number;\r\n  verticalPosition: number;\r\n}\r\n\r\nexport default class CanvasToolbox extends React.Component<ICanvasToolboxProps, void> {\r\n  public static contextTypes: React.ValidationMap<ClientSideWebPartManager> = {\r\n    store: React.PropTypes.object.isRequired\r\n  };\r\n\r\n  public context: ICanvasContext;\r\n\r\n  private _domNode: HTMLElement;\r\n  private _toolboxItems: Map<string, IToolboxItem[]>;\r\n\r\n  constructor(props: ICanvasToolboxProps, context: ICanvasContext) {\r\n    super(props, context);\r\n    this._handleToolboxItemClick = this._handleToolboxItemClick.bind(this);\r\n    this._toolboxItems = new Map<string, IToolboxItem[]>();\r\n    this._toolboxItems.set(\r\n      'Text',\r\n      [{\r\n        defaultProps: {\r\n          displayMode: DisplayMode.Edit\r\n        },\r\n        displayName: Strings.ParagraphWebpartDisplayName,\r\n        isWebPart: false,\r\n        msIconName: 'text',\r\n        reactClass: undefined,\r\n        controlType: CanvasControlType.RTE\r\n      }]\r\n    );\r\n\r\n    this._getWebPartManifests();\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this._domNode = ReactDOM.findDOMNode(this) as HTMLElement;\r\n  }\r\n\r\n  public componentDidUpdate(): void {\r\n    if (this._domNode && this.props.isOpen) {\r\n      // Re-poistion toolbox above the hint if it goes out of viewport\r\n      const viewportHeight: number = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n      if (this._domNode) {\r\n        if (this._domNode.getBoundingClientRect().bottom > viewportHeight) {\r\n          const toolboxRect: ClientRect = this._domNode.getBoundingClientRect();\r\n          // Subtract the height of toolbox plus some margin (40px) to account for the hint height and its margin\r\n          const newTop: number = this.props.verticalPosition - (toolboxRect.bottom - toolboxRect.top) - 40;\r\n\r\n          // Open toolbox upwards only if it doesn't go out upwards\r\n          if (newTop > 0) {\r\n            this._domNode.style.top = newTop + 'px';\r\n          } else {\r\n            // Toolbox doesn't fit in the viewport in any direction, scroll it into view\r\n            // This is an edge case where the window is way too small\r\n            this._domNode.scrollIntoView();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public render(): React.ReactElement<ICanvasToolboxProps> {\r\n    const top: number = this.props.verticalPosition;\r\n\r\n    const toolboxStyles: {} = {\r\n      top,\r\n      display: this.props.isOpen ? 'block' : 'none'\r\n    };\r\n\r\n    return (\r\n      <div className='CanvasToolbox' style={ toolboxStyles }>\r\n        { this._renderToolboxItemsGroups() }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _renderToolboxItemsGroups(): React.ReactElement<ICanvasToolboxItemsGroupProps>[] {\r\n    const toolboxGroups: React.ReactElement<ICanvasToolboxItemsGroupProps>[] = [];\r\n    this._toolboxItems.forEach((items: IToolboxItem[], group: string) => {\r\n      toolboxGroups.push(\r\n        <CanvasToolboxItemsGroup\r\n          groupName={group}\r\n          key={group}\r\n          onToolboxItemClick={this._handleToolboxItemClick}\r\n          toolboxItems={items}\r\n        />\r\n      );\r\n    });\r\n\r\n    return toolboxGroups;\r\n  }\r\n\r\n  private _getWebPartManifests(): void {\r\n    this.context.store.serviceScope.whenFinished(() => {\r\n      const environmentType: EnvironmentType =\r\n        (this.context.store.serviceScope.consume(environmentServiceKey) as Environment).type;\r\n\r\n      /**\r\n       * Temporarily use g_webPartManifests to populate the toolbox because the\r\n       * PageContext variable does not respect flights\r\n       */\r\n\r\n      /* tslint:disable:no-any */\r\n      let manifests: IClientSideWebPartManifest<any>[];\r\n      /* tslint:enable:no-any */\r\n      if (environmentType === EnvironmentType.Local || environmentType === EnvironmentType.Test) {\r\n        manifests = this.context.store.webPartManager.getWebParts();\r\n      } else {\r\n        manifests = [];\r\n        /* tslint:disable:no-any */\r\n        const globalManifests: IClientSideWebPartManifest<any>[] = (window as any).g_webPartManifests || [];\r\n        /* tslint:enable:no-any */\r\n        for (const manifest of globalManifests) {\r\n          if (manifest &&\r\n              manifest.componentType === 'WebPart') {\r\n              manifests.push(manifest);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (manifests) {\r\n        for (const webPartManifest of manifests) {\r\n          const item: IToolboxItem = {\r\n            controlType: CanvasControlType.WebPartZone,\r\n            defaultProps: {\r\n              webPartManifest,\r\n              webPartData: undefined,\r\n              webPartId: webPartManifest.id\r\n            },\r\n            displayName: webPartManifest.preconfiguredEntries[0].title.default,\r\n            isWebPart: true,\r\n            msIconName: webPartManifest.preconfiguredEntries[0].officeFabricIconFontName\r\n          };\r\n\r\n          // Group property is optional. Classic web parts use Custom group if no group is defined.\r\n          if (!webPartManifest.preconfiguredEntries[0].group) {\r\n            webPartManifest.preconfiguredEntries[0].group = { default: 'Custom' };\r\n          }\r\n\r\n          let group: IToolboxItem[];\r\n          if (group = this._toolboxItems.get(webPartManifest.preconfiguredEntries[0].group.default)) {\r\n            group.push(item);\r\n          } else {\r\n            this._toolboxItems.set(webPartManifest.preconfiguredEntries[0].group.default, [item]);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /* tslint:disable:no-any */\r\n  private _handleToolboxItemClick(controlType: CanvasControlType, itemProps: any): void {\r\n  /* tslint:enable:no-any */\r\n    this.props.onToolboxItemClick(controlType, itemProps, this.props.rowIndex);\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}