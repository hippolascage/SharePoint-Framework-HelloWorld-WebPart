import * as React from 'react';
import CanvasControlType from './CanvasControlType';
import ClientSideWebPartManager from '../../../../clientSideWebParts/core/ClientSideWebPartManager';
import { ICanvasContext } from './CanvasCore';
import './CanvasToolbox.scss';
export interface ICanvasToolboxProps {
    isOpen: boolean;
    onToolboxItemClick: (controlType: CanvasControlType, itemProps: any, rowIndex: number) => void;
    rowIndex: number;
    verticalPosition: number;
}
export default class CanvasToolbox extends React.Component<ICanvasToolboxProps, void> {
    static contextTypes: React.ValidationMap<ClientSideWebPartManager>;
    context: ICanvasContext;
    private _domNode;
    private _toolboxItems;
    constructor(props: ICanvasToolboxProps, context: ICanvasContext);
    componentDidMount(): void;
    componentDidUpdate(): void;
    render(): React.ReactElement<ICanvasToolboxProps>;
    private _renderToolboxItemsGroups();
    private _getWebPartManifests();
    private _handleToolboxItemClick(controlType, itemProps);
}
