{"version":3,"sources":["local/appBase/components/canvas/canvas/CanvasToolboxItem.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAI/B,QAAO,0BAA0B,CAAC,CAAA;AAqBlC;IAA+C,qCAA8C;IAC3F,2BAAY,KAA8B;QACxC,kBAAM,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3D,CAAC;IAEM,kCAAM,GAAb;QACE,MAAM,CAAC,CACL,qBAAC,MAAM,IAAC,SAAS,EAAC,mBAAmB,EAAC,OAAO,EAAE,IAAI,CAAC,gBAAiB,GACnE,qBAAC,IAAI,IAAC,SAAS,EAAE,6CAA2C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAa,EAAE,EAChG,qBAAC,IAAI,IAAC,SAAS,EAAC,yBAAyB,GACrC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAa,CACjC,CACF,CACV,CAAC;IACJ,CAAC;IAEO,4CAAgB,GAAxB;QACE,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IACzG,CAAC;IACH,wBAAC;AAAD,CApBA,AAoBC,CApB8C,KAAK,CAAC,SAAS,GAoB7D;AApBD;mCAoBC,CAAA","file":"local/appBase/components/canvas/canvas/CanvasToolboxItem.js","sourcesContent":["import * as React from 'react';\r\n\r\nimport CanvasControlType from './CanvasControlType';\r\n\r\nimport './CanvasToolboxItem.scss';\r\n\r\nexport interface IToolboxItem {\r\n  /* tslint:disable:no-any */\r\n  defaultProps: any;\r\n  /* tslint:enable:no-any */\r\n  displayName: string;\r\n  isWebPart: boolean;\r\n  msIconName: string;\r\n  reactClass?: React.ClassicComponentClass<{}>;\r\n  controlType: CanvasControlType;\r\n}\r\n\r\nexport interface ICanvasToolboxItemProps {\r\n  key?: string | number;\r\n  /* tslint:disable:no-any */\r\n  onToolboxItemClick: (controlType: CanvasControlType, itemProps: any) => void;\r\n  /* tslint:enable:no-any */\r\n  toolboxItem: IToolboxItem;\r\n}\r\n\r\nexport default class CanvasToolboxItem extends React.Component<ICanvasToolboxItemProps, void> {\r\n  constructor(props: ICanvasToolboxItemProps) {\r\n    super(props);\r\n    this._handleItemClick = this._handleItemClick.bind(this);\r\n  }\r\n\r\n  public render(): React.ReactElement<ICanvasToolboxItemProps> {\r\n    return (\r\n      <button className='CanvasToolboxItem' onClick={this._handleItemClick}>\r\n        <span className={`CanvasToolboxItem-icon ms-Icon ms-Icon--${this.props.toolboxItem.msIconName}`}/>\r\n          <span className='CanvasToolboxItem-title'>\r\n            { this.props.toolboxItem.displayName }\r\n          </span>\r\n      </button>\r\n    );\r\n  }\r\n\r\n  private _handleItemClick(): void {\r\n    this.props.onToolboxItemClick(this.props.toolboxItem.controlType, this.props.toolboxItem.defaultProps);\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}