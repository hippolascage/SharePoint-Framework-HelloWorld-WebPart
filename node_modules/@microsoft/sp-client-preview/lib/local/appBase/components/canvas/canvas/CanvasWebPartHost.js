/**
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 *
 * @file Web part host for the SP Canvas.
 */
"use strict";
var sp_client_base_1 = require('@microsoft/sp-client-base');
var PropertyPaneDefinitions_1 = require('../../../../common/webParts/PropertyPaneDefinitions');
/**
 * CanvasWebPartHost is the IWebPartHost implementation used by the Canvas. Each Canvas
 * will instantiate their own CanvasWebPartHost, which means the web parts are scoped by
 * Canvas.
 */
var CanvasWebPartHost = (function () {
    /**
     * @param handleCanvasChanged - Optional. Callback invoked when web parts are interacted with.
     */
    function CanvasWebPartHost(serviceScope, handleResize, handleCanvasChanged, reclaimFocus) {
        var _this = this;
        this._handleCanvasChanged = handleCanvasChanged;
        this._handleResize = handleResize;
        this._reclaimFocus = reclaimFocus;
        this._serviceScope = serviceScope;
        this.webPartConfigurationEventCallback = this.webPartConfigurationEventCallback.bind(this);
        serviceScope.whenFinished(function () {
            _this._environment = serviceScope.consume(sp_client_base_1.environmentServiceKey);
        });
    }
    Object.defineProperty(CanvasWebPartHost.prototype, "serviceScope", {
        /**
         * @see IWebPartHost
         */
        get: function () {
            return this._serviceScope;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @see IWebPartHost
     */
    CanvasWebPartHost.prototype.setDirty = function (wpInstanceId) {
        if (this._handleCanvasChanged) {
            this._handleCanvasChanged();
        }
    };
    /**
     * @see IWebPartHost
     */
    CanvasWebPartHost.prototype.webPartConfigurationEventCallback = function (event) {
        if (event === PropertyPaneDefinitions_1.WebPartConfigurationEvent.OpenComplete) {
            /*
             * Scroll web part back into with a 500ms animation and
             * 44px additional margin (2 * the _VERTICAL_MARGIN property in CanvasZone)
             */
            this._handleResize(document.querySelector('.CanvasZone--selected'), 500, 44);
        }
        else if (event === PropertyPaneDefinitions_1.WebPartConfigurationEvent.CloseComplete || event === PropertyPaneDefinitions_1.WebPartConfigurationEvent.LostFocus) {
            this._reclaimFocus();
        }
    };
    return CanvasWebPartHost;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = CanvasWebPartHost;

//# sourceMappingURL=CanvasWebPartHost.js.map
