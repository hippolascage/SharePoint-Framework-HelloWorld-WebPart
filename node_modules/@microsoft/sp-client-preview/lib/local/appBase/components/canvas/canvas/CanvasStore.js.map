{"version":3,"sources":["local/appBase/components/canvas/canvas/CanvasStore.ts"],"names":[],"mappings":"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","file":"local/appBase/components/canvas/canvas/CanvasStore.js","sourcesContent":["import { DisplayMode, ServiceScope, Validate } from '@microsoft/sp-client-base';\r\nimport { IClientSideWebPartManifest } from '@microsoft/sp-module-interfaces';\r\n\r\nimport { ICanvasZoneProps } from './CanvasZone';\r\nimport CanvasControlType from './CanvasControlType';\r\nimport { ICanvasToolboxProps } from './CanvasToolbox';\r\nimport CanvasWebPartHost from './CanvasWebPartHost';\r\nimport ClientSideWebPartManager from '../../../../clientSideWebParts/core/ClientSideWebPartManager';\r\nimport ICanvasControlProps from './ISerializedCanvasControl';\r\nimport { ISPRteProps } from '../../sp-rte/rte/SPRte';\r\nimport { IWebPartZoneProps } from '../sampleCanvasControls/WebPartZone';\r\n\r\nexport default class CanvasStore {\r\n  private _canvasZonesProps: ICanvasZoneProps[];\r\n  private _componentIds: string[];\r\n  private _displayMode: DisplayMode;\r\n  private _handleCanvasChanged: () => void;\r\n  private _render: () => void;\r\n  private _serviceScope: ServiceScope;\r\n  private _toolboxProps: ICanvasToolboxProps;\r\n  private _webPartManager: ClientSideWebPartManager;\r\n  private _zones: {};\r\n\r\n  constructor(\r\n    serviceScope: ServiceScope,\r\n    render: () => void,\r\n    mode: DisplayMode,\r\n    serializedCanvas?: string,\r\n    handleCanvasChanged?: () => void\r\n  ) {\r\n    Validate.isNotNullOrUndefined(serviceScope, 'serviceScope');\r\n    Validate.isNotNullOrUndefined(render, 'render');\r\n    Validate.isNotNullOrUndefined(mode, 'mode');\r\n\r\n    this.addControl = this.addControl.bind(this);\r\n    this.closeToolbox = this.closeToolbox.bind(this);\r\n    this.deleteControl = this.deleteControl.bind(this);\r\n    this.openToolbox = this.openToolbox.bind(this);\r\n    this.deserialize = this.deserialize.bind(this);\r\n    this.deserializeFromJSON = this.deserializeFromJSON.bind(this);\r\n\r\n    this._render = render;\r\n    this._handleCanvasChanged = handleCanvasChanged;\r\n    this._zones = {};\r\n    this._componentIds = [];\r\n    this._displayMode = mode;\r\n    this._webPartManager = new ClientSideWebPartManager(new CanvasWebPartHost(serviceScope, handleCanvasChanged));\r\n    this.deserialize(serializedCanvas);\r\n\r\n    this._serviceScope = serviceScope;\r\n\r\n    this._toolboxProps = {\r\n      isOpen: false,\r\n      onToolboxItemClick: this.addControl,\r\n      rowIndex: undefined,\r\n      verticalPosition: undefined\r\n    };\r\n  }\r\n\r\n  public get canvasDisplayMode(): DisplayMode {\r\n    return this._displayMode;\r\n  }\r\n\r\n  public get componentIds(): string[] {\r\n    return this._componentIds;\r\n  }\r\n\r\n  public get controls(): ICanvasZoneProps[] {\r\n    return this._canvasZonesProps;\r\n  }\r\n\r\n  public get serviceScope(): ServiceScope {\r\n    return this._serviceScope;\r\n  }\r\n\r\n  public get toolboxProps(): ICanvasToolboxProps {\r\n    return this._toolboxProps;\r\n  }\r\n\r\n  public get webPartManager(): ClientSideWebPartManager {\r\n    return this._webPartManager;\r\n  }\r\n\r\n  public addControl(\r\n    controlType: CanvasControlType,\r\n    itemProps: ICanvasControlProps,\r\n    rowIndex: number\r\n  ): void {\r\n    this._addControl(controlType, itemProps, rowIndex);\r\n\r\n    this._render();\r\n    this._notifyChanged();\r\n  }\r\n\r\n  public closeToolbox(): void {\r\n    this._toolboxProps.isOpen = false;\r\n    document.removeEventListener('click', this.closeToolbox);\r\n\r\n    this._render();\r\n  }\r\n\r\n  public deleteControl(rowIndex: number): void {\r\n    this._canvasZonesProps.splice(rowIndex, 1);\r\n    this._componentIds.splice(rowIndex, 1);\r\n\r\n    this._render();\r\n    this._notifyChanged();\r\n  }\r\n\r\n  public openToolbox(rowIndex: number, verticalPosition: number): void {\r\n    if (this._toolboxProps.isOpen) {\r\n      this.closeToolbox();\r\n    }\r\n\r\n    this._toolboxProps.isOpen = true;\r\n    this._toolboxProps.rowIndex = rowIndex;\r\n    this._toolboxProps.verticalPosition = verticalPosition;\r\n    document.addEventListener('click', this.closeToolbox);\r\n\r\n    this._render();\r\n  }\r\n\r\n  public serialize(): string {\r\n    const body: HTMLDivElement = document.createElement('div');\r\n    const controlRow: HTMLDivElement = document.createElement('div');\r\n    controlRow.setAttribute('data-sp-canvascontrol', '');\r\n\r\n    for (const zone of this._canvasZonesProps) {\r\n      const row: HTMLDivElement = controlRow.cloneNode() as HTMLDivElement;\r\n      const zoneCopy: ICanvasZoneProps = JSON.parse(JSON.stringify(zone));\r\n      const serialization: ICanvasControlProps = this._zones[zone.key.toString()].serialize();\r\n\r\n      if (zoneCopy.childControlProps.controlType === CanvasControlType.RTE) {\r\n        row.innerHTML = (serialization as ISPRteProps).innerHTML;\r\n      }\r\n\r\n      zoneCopy.childControlProps = undefined;\r\n      row.setAttribute('data-sp-config', JSON.stringify(zoneCopy));\r\n      row.setAttribute('data-sp-controldata', encodeURI(JSON.stringify(serialization)));\r\n\r\n      body.appendChild(row);\r\n    }\r\n\r\n    const wrapper: HTMLDivElement = document.createElement('div');\r\n    wrapper.appendChild(body);\r\n\r\n    return wrapper.innerHTML;\r\n  }\r\n\r\n  public serializeToJSON(): string {\r\n    return JSON.stringify(this._canvasZonesProps);\r\n  }\r\n\r\n  public setDisplayMode(newMode: DisplayMode): void {\r\n    this._displayMode = newMode;\r\n\r\n    for (const zone of this._canvasZonesProps) {\r\n      zone.displayMode = newMode;\r\n      this._zones[zone.key.toString()].setDisplayMode(newMode);\r\n    }\r\n\r\n    this._render();\r\n  }\r\n\r\n  public deserialize(serializedCanvas: string): void {\r\n    this._canvasZonesProps = [];\r\n    if (serializedCanvas) {\r\n      const wrapper: HTMLDivElement = document.createElement('div');\r\n      wrapper.innerHTML = serializedCanvas;\r\n      const rows: NodeListOf<Element> = wrapper.querySelectorAll('[data-sp-canvascontrol]');\r\n      const numRows: number = rows.length;\r\n      for (let i: number = 0; i < numRows; ++i) {\r\n        const row: HTMLDivElement = rows[i] as HTMLDivElement;\r\n        const childControlData: ICanvasControlProps = JSON.parse(\r\n          decodeURI(row.getAttribute('data-sp-controldata'))\r\n        );\r\n        childControlData.displayMode = this._displayMode;\r\n\r\n        this._addControl(childControlData.controlType, childControlData, i);\r\n      }\r\n    }\r\n  }\r\n\r\n  public deserializeFromJSON(serializedCanvas: string): void {\r\n    const rows: ICanvasZoneProps[] = JSON.parse(serializedCanvas);\r\n\r\n    if (rows.length) {\r\n      for (let i: number = 0; i < rows.length; ++i) {\r\n        this._addControl(rows[i].childControlProps.controlType, rows[i].childControlProps, i);\r\n      }\r\n    } else {\r\n      this._canvasZonesProps = [];\r\n    }\r\n  }\r\n\r\n  private _addControl(\r\n    controlType: CanvasControlType,\r\n    itemProps: ICanvasControlProps,\r\n    rowIndex: number\r\n  ): void {\r\n    const key: number = Math.random();\r\n    itemProps.controlType = controlType;\r\n    itemProps.displayMode = this._displayMode;\r\n    itemProps.onChange = this._handleCanvasChanged;\r\n\r\n    if (controlType === CanvasControlType.WebPartZone) {\r\n      /* tslint:disable:no-any */\r\n      let webPartManifest: IClientSideWebPartManifest<any> = (itemProps as IWebPartZoneProps).webPartManifest;\r\n      /* tslint:enable:no-any */\r\n      if (!webPartManifest) {\r\n        /* tslint:disable:no-any */\r\n        const manifests: IClientSideWebPartManifest<any>[] = this._webPartManager.getWebParts();\r\n        /* tslint:enable:no-any */\r\n        if (manifests) {\r\n          for (const manifest of manifests) {\r\n            if ((itemProps as IWebPartZoneProps).webPartId === manifest.id) {\r\n              (itemProps as IWebPartZoneProps).webPartManifest = webPartManifest = manifest;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (webPartManifest) {\r\n      this._componentIds.splice(rowIndex, 0, webPartManifest.id);\r\n      }\r\n    }\r\n\r\n    this._canvasZonesProps.splice(\r\n      rowIndex,\r\n      0,\r\n      {\r\n        key,\r\n        childControlProps: itemProps,\r\n        displayMode: this._displayMode,\r\n        onDeleteButtonClick: this.deleteControl,\r\n        onToolboxHintClick: this.openToolbox,\r\n        ref: (ref): {} => this._zones[key.toString()] = ref,\r\n        rowIndex: rowIndex\r\n      }\r\n    );\r\n  }\r\n\r\n  private _notifyChanged(): void {\r\n    if (this._handleCanvasChanged) {\r\n      this._handleCanvasChanged();\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}