{"version":3,"sources":["local/appBase/components/canvas/canvas/CanvasControlToolbar.tsx"],"names":[],"mappings":"AAAA;;;;;;;GAOG;;;;;;;AAEH,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,8BAAmD,iBAAiB,CAAC,CAAA;AAGrE,QAAO,6BAA6B,CAAC,CAAA;AACrC,mCAAoB,wCAAwC,CAAC,CAAA;AAQ7D;;;;;GAKG;AACH;IAAkD,wCAAiD;IACjG;;OAEG;IACH,8BAAY,KAAiC;QAC3C,kBAAM,KAAK,CAAC,CAAC;IACf,CAAC;IAED;;OAEG;IACI,qCAAM,GAAb;QACE,IAAI,eAA4B,CAAC;QAEjC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC;YACtC,eAAe,GAAG,CAChB,oBAAC,uBAAa,GACZ,GAAG,EAAC,QAAQ,EACZ,aAAa,EAAC,QAAQ,EACtB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,sBAAuB,EAC3C,KAAK,EAAE,4BAAO,CAAC,wBAAyB,EACxC,CACH,CAAC;QACJ,CAAC;QAED,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,sBAAsB,GACjC,eAAiB,EAEjB,IAAI,CAAC,KAAK,CAAC,OAAS,EAEtB,oBAAC,uBAAa,GACZ,GAAG,EAAC,OAAO,EACX,aAAa,EAAC,OAAO,EACrB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,mBAAoB,EACxC,KAAK,EAAE,4BAAO,CAAC,wBAAyB,EACxC,CACE,CACP,CAAC;IACJ,CAAC;IACH,2BAAC;AAAD,CAxCA,AAwCC,CAxCiD,KAAK,CAAC,SAAS,GAwChE;AAxCD;sCAwCC,CAAA","file":"local/appBase/components/canvas/canvas/CanvasControlToolbar.js","sourcesContent":["/**\r\n * @copyright Microsoft Corporation. All rights reserved.\r\n *\r\n * @file CanvasControl Toolbar contains buttons to perform actions on the CanvasControl\r\n * including a config button to open the property pane of the control and a delete button\r\n * to delete the control. The number and types of the toolbar buttons depends on the type\r\n * of the control and its context\r\n */\r\n\r\nimport * as React from 'react';\r\nimport ToolbarButton, { IToolbarButtonProps } from './ToolbarButton';\r\nimport { IToolbarSubmenuProps } from './ToolbarSubmenu';\r\n\r\nimport './CanvasControlToolbar.scss';\r\nimport Strings from '../../sp-canvas/loc/CanvasStrings.resx';\r\n\r\nexport interface ICanvasControlToolbarProps {\r\n  onConfigureButtonClick?: () => void;\r\n  onDeleteButtonClick: () => void;\r\n  buttons?: React.ReactElement<IToolbarButtonProps | IToolbarSubmenuProps>[];\r\n}\r\n\r\n/**\r\n * @class CanvasControl Toolbar contains buttons to perform actions on the CanvasControl\r\n * including a config button to open the property pane of the control and a delete button\r\n * to delete the control. The number and types of the toolbar buttons depends on the type\r\n * of the control and its context\r\n */\r\nexport default class CanvasControlToolbar extends React.Component<ICanvasControlToolbarProps, void> {\r\n  /**\r\n   * Constructs an instance of CanvasControlToolbar\r\n   */\r\n  constructor(props: ICanvasControlToolbarProps) {\r\n    super(props);\r\n  }\r\n\r\n  /**\r\n   * Renders CanvasControlToolbar. Config button only renders when the control has a property pane\r\n   */\r\n  public render(): React.ReactElement<ICanvasControlToolbarProps> {\r\n    let configureButton: JSX.Element;\r\n\r\n    if (this.props.onConfigureButtonClick) {\r\n      configureButton = (\r\n        <ToolbarButton\r\n          key='config'\r\n          fabricIconKey='pencil'\r\n          onClick={this.props.onConfigureButtonClick}\r\n          title={Strings.ToolbarConfigButtonTitle}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className='CanvasControlToolbar'>\r\n        { configureButton }\r\n\r\n        { this.props.buttons }\r\n\r\n        <ToolbarButton\r\n          key='trash'\r\n          fabricIconKey='trash'\r\n          onClick={this.props.onDeleteButtonClick}\r\n          title={Strings.ToolbarDeleteButtonTitle}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}