/**
 * @copyright Microsoft Corporation. All rights reserved.
 *
 * @file CanvasControl Toolbar contains buttons to perform actions on the CanvasControl
 * including a config button to open the property pane of the control and a delete button
 * to delete the control. The number and types of the toolbar buttons depends on the type
 * of the control and its context
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var React = require('react');
var ToolbarButton_1 = require('./ToolbarButton');
require('./CanvasControlToolbar.scss');
var CanvasStrings_resx_1 = require('../../sp-canvas/loc/CanvasStrings.resx');
/**
 * @class CanvasControl Toolbar contains buttons to perform actions on the CanvasControl
 * including a config button to open the property pane of the control and a delete button
 * to delete the control. The number and types of the toolbar buttons depends on the type
 * of the control and its context
 */
var CanvasControlToolbar = (function (_super) {
    __extends(CanvasControlToolbar, _super);
    /**
     * Constructs an instance of CanvasControlToolbar
     */
    function CanvasControlToolbar(props) {
        _super.call(this, props);
    }
    /**
     * Renders CanvasControlToolbar. Config button only renders when the control has a property pane
     */
    CanvasControlToolbar.prototype.render = function () {
        var configureButton;
        if (this.props.onConfigureButtonClick) {
            configureButton = (React.createElement(ToolbarButton_1.default, {key: 'config', fabricIconKey: 'pencil', onClick: this.props.onConfigureButtonClick, title: CanvasStrings_resx_1.default.ToolbarConfigButtonTitle}));
        }
        return (React.createElement("div", {className: 'CanvasControlToolbar'}, configureButton, this.props.buttons, React.createElement(ToolbarButton_1.default, {key: 'trash', fabricIconKey: 'trash', onClick: this.props.onDeleteButtonClick, title: CanvasStrings_resx_1.default.ToolbarDeleteButtonTitle})));
    };
    return CanvasControlToolbar;
}(React.Component));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = CanvasControlToolbar;

//# sourceMappingURL=CanvasControlToolbar.js.map
