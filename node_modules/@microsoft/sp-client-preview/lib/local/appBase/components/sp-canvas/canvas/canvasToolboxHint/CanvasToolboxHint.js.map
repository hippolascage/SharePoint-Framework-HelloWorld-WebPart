{"version":3,"sources":["local/appBase/components/sp-canvas/canvas/canvasToolboxHint/CanvasToolboxHint.tsx"],"names":[],"mappings":";;;;;;AAAA,oBAAoB,0CAA0C,CAAC,CAAA;AAC/D,+BAA4B,2BAA2B,CAAC,CAAA;AACxD,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,IAAY,QAAQ,WAAM,WAAW,CAAC,CAAA;AAMtC,QAAO,0BAA0B,CAAC,CAAA;AAElC;IAA+C,qCAA8C;IAS3F,2BAAY,KAA8B,EAAE,OAAuB;QACjE,kBAAM,KAAK,EAAE,OAAO,CAAC,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IAEM,6CAAiB,GAAxB;QACE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAgB,CAAC;QAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC;IACH,CAAC;IAEM,8CAAkB,GAAzB;QACE;;;WAGG;QACH,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAEM,kCAAM,GAAb;QACE,IAAA,eAAoE,EAA5D,wBAAS,EAAE,wBAAS,CAAyC;QAErE,IAAM,aAAa,GAAW,SAAG,CAC/B,mBAAmB,EACnB;YACE,YAAY,EAAE,SAAS;SACxB,CACF,CAAC;QAEF,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,KAAK,4BAAW,CAAC,IAAI,IAAI,CAC5D,qBAAC,MAAM,KACL,aAAa,GAAE,IAAK,GACpB,UAAU,GAAE,SAAU,EACtB,SAAS,EAAE,aAAc,EACzB,OAAO,EAAE,IAAI,CAAC,YAAa,GAE3B,qBAAC,GAAG,IAAC,SAAS,EAAC,8BAA8B,GAC3C,qBAAC,CAAC,IAAC,SAAS,EAAC,sBAAsB,EAAE,CACjC,CACC,CACV,CAAC;IACJ,CAAC;IAEM,iCAAK,GAAZ;QAAA,iBAOC;QANC;;;;WAIG;QACH,MAAM,CAAC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,EAArB,CAAqB,EAAE,CAAC,CAAC,CAAC;IACpD,CAAC;IAEO,wCAAY,GAApB;QACE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,iBAAiB,GAAG,SAAS,CAAC;QACjD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAC1E,CAAC;IAhEa,8BAAY,GAAqC;QAC7D,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;KACzC,CAAC;IA+DJ,wBAAC;AAAD,CAlEA,AAkEC,CAlE8C,KAAK,CAAC,SAAS,GAkE7D;AAlED;mCAkEC,CAAA","file":"local/appBase/components/sp-canvas/canvas/canvasToolboxHint/CanvasToolboxHint.js","sourcesContent":["import { css } from 'office-ui-fabric-react/lib/utilities/css';\r\nimport { DisplayMode } from '@microsoft/sp-client-base';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport CanvasStore from '../canvasComponent/CanvasStore';\r\nimport { ICanvasContext } from '../canvasComponent/ICanvasComponent';\r\nimport { ICanvasToolboxHintProps } from './ICanvasToolboxHint';\r\n\r\nimport './CanvasToolboxHint.scss';\r\n\r\nexport default class CanvasToolboxHint extends React.Component<ICanvasToolboxHintProps, void> {\r\n  public static contextTypes: React.ValidationMap<CanvasStore> = {\r\n    store: React.PropTypes.object.isRequired\r\n  };\r\n\r\n  public context: ICanvasContext;\r\n\r\n  private _domNode: HTMLElement;\r\n\r\n  constructor(props: ICanvasToolboxHintProps, context: ICanvasContext) {\r\n    super(props, context);\r\n    this._handleClick = this._handleClick.bind(this);\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this._domNode = ReactDOM.findDOMNode(this) as HTMLElement;\r\n    if (this.props.shouldFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(): void {\r\n    /**\r\n     * Calling componentDidMount because we want the code to run\r\n     * during each update as well.\r\n     */\r\n    this.componentDidMount();\r\n  }\r\n\r\n  public render(): React.ReactElement<ICanvasToolboxHintProps> {\r\n    const { ariaLabel, isVisible }: ICanvasToolboxHintProps = this.props;\r\n\r\n    const hintClassName: string = css(\r\n      'CanvasToolboxHint',\r\n      {\r\n        'is-visible': isVisible\r\n      }\r\n    );\r\n\r\n    return this.context.store.displayMode === DisplayMode.Edit && (\r\n      <button\r\n        aria-haspopup={true}\r\n        aria-label={ariaLabel}\r\n        className={hintClassName}\r\n        onClick={this._handleClick}\r\n      >\r\n        <div className='CanvasToolboxHint-plusButton'>\r\n          <i className='ms-Icon ms-Icon--Add'/>\r\n        </div>\r\n      </button>\r\n    );\r\n  }\r\n\r\n  public focus(): void {\r\n    /**\r\n     * Setting a 0ms timeout to let the browser drawing finish before we set focus to an element.\r\n     * Chrome's event queue lags more than IE's in this particular instance. Without this timeout\r\n     * the focus will not be correct set in Chrome.\r\n     */\r\n    window.setTimeout(() => this._domNode.focus(), 0);\r\n  }\r\n\r\n  private _handleClick(): void {\r\n    this.context.store.selectedControlId = undefined;\r\n    this.context.store.openToolbox(this.props.row, this._domNode.offsetTop);\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}