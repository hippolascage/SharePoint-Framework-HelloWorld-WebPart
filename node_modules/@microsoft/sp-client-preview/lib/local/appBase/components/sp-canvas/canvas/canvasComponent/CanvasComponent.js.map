{"version":3,"sources":["local/appBase/components/sp-canvas/canvas/canvasComponent/CanvasComponent.tsx"],"names":[],"mappings":"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","file":"local/appBase/components/sp-canvas/canvas/canvasComponent/CanvasComponent.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { css } from 'office-ui-fabric-react/lib/utilities/css';\r\nimport { DisplayMode } from '@microsoft/sp-client-base';\r\n\r\nimport CanvasControlFactory from '../canvasControl/CanvasControlFactory';\r\nimport CanvasStore from './CanvasStore';\r\nimport CanvasZone from '../canvasZone/CanvasZone';\r\nimport { CanvasA11yManager } from '../../a11y/CanvasA11y';\r\nimport CanvasToolboxHint from '../canvasToolboxHint/CanvasToolboxHint';\r\nimport ClientSideWebPartManager from '../../../../../clientSideWebParts/core/ClientSideWebPartManager';\r\nimport ConfirmationDialog from '../confirmationDialog/ConfirmationDialog';\r\nimport { ICanvasContext, ICanvasComponentProps } from './ICanvasComponent';\r\nimport { ICanvasZoneProps } from '../canvasZone/ICanvasZone';\r\nimport { ISerializedCanvasControl } from '../canvasControl/ISerializedCanvasControl';\r\nimport { IToolboxProps } from '../../toolbox/toolbox/IToolbox';\r\nimport Toolbar from '../../toolbar/Toolbar';\r\nimport Toolbox from '../../toolbox/toolbox/Toolbox';\r\n\r\nimport Strings from '../../loc/CanvasStrings.resx';\r\n\r\nexport default class CanvasComponent extends React.Component<ICanvasComponentProps, {}> {\r\n  public static childContextTypes: React.ValidationMap<ClientSideWebPartManager> = {\r\n    store: React.PropTypes.object.isRequired\r\n  };\r\n\r\n  constructor(props: ICanvasComponentProps, context: ICanvasContext) {\r\n    super(props, context);\r\n  }\r\n\r\n  public getChildContext(): ICanvasContext {\r\n    return {\r\n      store: this.props.store\r\n    };\r\n  }\r\n\r\n  public render(): React.ReactElement<ICanvasComponentProps> {\r\n    const store: CanvasStore = this.props.store;\r\n\r\n    const controlsProps: ISerializedCanvasControl[] = store.controlsProps;\r\n    const deletedRow: number = store.deletedRow;\r\n    const displayMode: DisplayMode = store.displayMode;\r\n    const toolboxProps: IToolboxProps = store.toolboxProps;\r\n\r\n    const rows: React.ReactElement<ICanvasZoneProps>[] = [];\r\n    let row: number = 0;\r\n    if (controlsProps) {\r\n      for (const control of controlsProps) {\r\n        const isSelected: boolean = store.selectedControlId === control.id;\r\n\r\n        if (isSelected && row) {\r\n          // Replace the last hint pushed with a hint that is visible\r\n          rows.pop();\r\n          rows.push(\r\n            <CanvasToolboxHint\r\n              ariaLabel={Strings.ToolboxHintTitle}\r\n              isVisible={true}\r\n              key={row}\r\n              row={row}\r\n            />\r\n          );\r\n        }\r\n\r\n        rows.push(\r\n          <CanvasZone\r\n            displayMode={displayMode}\r\n            id={control.id}\r\n            isSelected={isSelected}\r\n            key={control.id}\r\n            row={row}\r\n          >\r\n            { CanvasControlFactory.CreateCanvasControl(control, store) }\r\n            <Toolbar\r\n              controlType={control.controlType}\r\n              displayMode={displayMode}\r\n              id={control.id}\r\n              row={row}\r\n              onConfigureButtonClick={store.handleConfigureButtonClicked}\r\n              onDeleteButtonClick={store.handleDeleteButtonClicked}\r\n            />\r\n          </CanvasZone>\r\n        );\r\n\r\n        ++row;\r\n\r\n        rows.push(\r\n          <CanvasToolboxHint\r\n            ariaLabel={Strings.ToolboxHintTitle}\r\n            isVisible={toolboxProps.row === row}\r\n            shouldFocus={deletedRow === row}\r\n            key={row}\r\n            row={row}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Only set focus on a hint during the render after control is deleted.\r\n     */\r\n    store.deletedRow = undefined;\r\n\r\n    const className: string = css(\r\n      'Canvas',\r\n      {\r\n        'Canvas--edit': displayMode === DisplayMode.Edit\r\n      }\r\n    );\r\n\r\n    return (\r\n      <div\r\n        className={className}\r\n        role={displayMode === DisplayMode.Edit ? 'application' : undefined}\r\n      >\r\n        <CanvasToolboxHint\r\n          ariaLabel={Strings.ToolboxHintTitle}\r\n          shouldFocus={deletedRow === 0}\r\n          isVisible={rows[0] && rows[0].props.isSelected || toolboxProps.row === 0}\r\n          row={0}\r\n        />\r\n        { rows }\r\n        <Toolbox {...toolboxProps}/>\r\n        <ConfirmationDialog\r\n          isOpen={store.isDeleteDialogOpen}\r\n          message={Strings.DeleteConfirmationDialogMessage}\r\n          onConfirmation={store.handleDeleteDialogConfirmation}\r\n          onDismiss={store.handleDeleteDialogDismiss}\r\n          title={Strings.DeleteConfirmationDialogTitle}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    const canvasElement: HTMLElement = ReactDOM.findDOMNode(this) as HTMLElement;\r\n    this.props.store.canvasElement = canvasElement;\r\n    this.props.store.a11yManager = new CanvasA11yManager(canvasElement);\r\n\r\n    // Find and set scrollable parent\r\n    let canvasContainer: HTMLElement = canvasElement;\r\n    let hasScrollbar: boolean = false;\r\n    do {\r\n      canvasContainer = canvasContainer.parentElement;\r\n      const overflowY: string = window.getComputedStyle(canvasContainer)['overflow-y'];\r\n      hasScrollbar = (overflowY === 'scroll' || overflowY === 'auto');\r\n    } while (!hasScrollbar && canvasContainer.tagName !== 'BODY');\r\n    this.props.store.scrollableParent = canvasContainer;\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}