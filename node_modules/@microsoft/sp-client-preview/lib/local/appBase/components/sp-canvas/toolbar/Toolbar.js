"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var sp_client_base_1 = require('@microsoft/sp-client-base');
var FocusZone_1 = require('office-ui-fabric-react/lib/FocusZone');
var React = require('react');
var CanvasControlType_1 = require('../../canvas/canvas/CanvasControlType');
var ToolbarButton_1 = require('../../canvas/canvas/ToolbarButton');
require('./Toolbar.scss');
var CanvasStrings_resx_1 = require('../loc/CanvasStrings.resx');
var Toolbar = (function (_super) {
    __extends(Toolbar, _super);
    function Toolbar(props) {
        _super.call(this, props);
        this._handleConfigureButtonClicked = this._handleConfigureButtonClicked.bind(this);
        this._handleDeleteButtonClicked = this._handleDeleteButtonClicked.bind(this);
    }
    Toolbar.prototype.render = function () {
        var configureButton;
        if (this.props.controlType === CanvasControlType_1.default.WebPartZone) {
            configureButton = (React.createElement(ToolbarButton_1.default, {canBeActive: false, fabricIconKey: 'Edit', onClick: this._handleConfigureButtonClicked, title: CanvasStrings_resx_1.default.ToolbarConfigButtonTitle}));
        }
        return (this.props.displayMode === sp_client_base_1.DisplayMode.Edit &&
            React.createElement(FocusZone_1.FocusZone, {isCircularNavigation: true}, React.createElement("div", {className: 'CanvasControlToolbar', role: 'toolbar'}, configureButton, React.createElement(ToolbarButton_1.default, {canBeActive: false, fabricIconKey: 'Delete', onClick: this._handleDeleteButtonClicked, title: CanvasStrings_resx_1.default.ToolbarDeleteButtonTitle}))));
    };
    Toolbar.prototype._handleConfigureButtonClicked = function () {
        this.props.onConfigureButtonClick(this.props.id);
    };
    Toolbar.prototype._handleDeleteButtonClicked = function () {
        this.props.onDeleteButtonClick(this.props.row);
    };
    return Toolbar;
}(React.Component));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Toolbar;

//# sourceMappingURL=Toolbar.js.map
