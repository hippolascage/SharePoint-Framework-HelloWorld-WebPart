{"version":3,"sources":["local/clientSideWebParts/propertyPane/propertyPanePage/IPropertyPanePage.ts"],"names":[],"mappings":"AAAA;;;;GAIG","file":"local/clientSideWebParts/propertyPane/propertyPanePage/IPropertyPanePage.js","sourcesContent":["/**\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * @file PropertyPanePage related interfaces.\r\n */\r\n\r\nimport { IPropertyPaneGroup } from '../propertyPaneGroup/IPropertyPaneGroup';\r\n\r\n/**\r\n * PropertyPanePage props.\r\n */\r\nexport interface IPropertyPanePageProps {\r\n\r\n  /**\r\n   * Description of the page.\r\n   */\r\n  pageDescription: string;\r\n\r\n  /**\r\n   * Indicates whether the groups on the PropertyPanePage should be displayed as an Accordion or not.\r\n   * Defaullt value is false.\r\n   */\r\n  displayGroupsAsAccordion: boolean;\r\n\r\n  /**\r\n   * Callback triggered when there is a change in any of the PropertyPaneFields.\r\n   */\r\n  onChange: (targetProperty: string, value: boolean | string) => void;\r\n\r\n  /**\r\n   * An array of PropertyPaneGroups to be displayed.\r\n   */\r\n  propertyGroups: IPropertyPaneGroup[];\r\n\r\n  /**\r\n   * Properties bag of the web part.\r\n   */\r\n  /* tslint:disable:no-any */\r\n  properties: any;\r\n\r\n  /**\r\n   * Callback to set the entry state of the PropertyPane.\r\n   * This callback internally is responsible for changing the state of 'Apply'/'Cancel' buttons and\r\n   * update the invalidEntries dictionary.\r\n   */\r\n  /* tslint:enable:no-any */\r\n  setEntryState: (targetProperty: string, isValidEntry: boolean) => void;\r\n\r\n  /**\r\n   * Callback method, which sets the PropertyPanePage element as the container for all the elements\r\n   * within the ProeprtyPanePage. This is used to get the first focussable element within the container\r\n   * to set the focus to.\r\n   */\r\n  setContainerDiv: (propertypanepage: HTMLDivElement) => void;\r\n}\r\n\r\n/**\r\n * PropertyPanePage interface.\r\n */\r\nexport interface IPropertyPanePage {\r\n  /**\r\n   * Indicates whether the groups on the PropertyPanePage are displayed as accordion or not.\r\n   */\r\n  displayGroupsAsAccordion?: boolean;\r\n\r\n  /**\r\n   * PropertyPane page header.\r\n   */\r\n  header?: IPropertyPanePageHeader;\r\n\r\n  /**\r\n   * List of groups to be displayed on the PropertyPane page.\r\n   */\r\n  groups: IPropertyPaneGroup[];\r\n}\r\n\r\n/**\r\n * PropertyPane header.\r\n *   This header remains same for all the pages.\r\n */\r\nexport interface IPropertyPanePageHeader {\r\n  /**\r\n   * Header to display.\r\n   */\r\n  description: string;\r\n\r\n  /**\r\n   * Image url for the background image.\r\n   */\r\n  image?: string;\r\n}"],"sourceRoot":"/src"}