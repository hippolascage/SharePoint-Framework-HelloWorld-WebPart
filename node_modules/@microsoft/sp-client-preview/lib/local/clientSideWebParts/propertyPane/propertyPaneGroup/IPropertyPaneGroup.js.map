{"version":3,"sources":["local/clientSideWebParts/propertyPane/propertyPaneGroup/IPropertyPaneGroup.ts"],"names":[],"mappings":"AAAA;;;;GAIG","file":"local/clientSideWebParts/propertyPane/propertyPaneGroup/IPropertyPaneGroup.js","sourcesContent":["/**\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * @file PropertyPaneGroup related interfaces.\r\n */\r\n\r\nimport { IPropertyPaneField } from '../propertyPaneFields/propertyPaneField/IPropertyPaneField';\r\n\r\n/**\r\n * PropertyPane group. Group is part of the PropertyPanePage.\r\n */\r\nexport interface IPropertyPaneGroup {\r\n  /**\r\n   * Display name for the group.\r\n   */\r\n  groupName?: string;\r\n\r\n  /**\r\n   * List of PropertyPane fields.\r\n   */\r\n  /* tslint:disable-next-line:no-any */\r\n  groupFields: IPropertyPaneField<any>[];\r\n}\r\n\r\n/**\r\n * Interface for PropertyPaneGroup props.\r\n */\r\nexport interface IPropertyPaneGroupProps extends IPropertyPaneGroup {\r\n\r\n  /**\r\n   * Indicates whether the groups on the PropertyPanePage should be displayed as an Accordion or not.\r\n   * Defaullt value is false.\r\n   */\r\n  displayGroupsAsAccordion?: boolean;\r\n\r\n  /**\r\n   * Callback triggered when there is a change in any of the PropertyPaneFields.\r\n   */\r\n  /* tslint:disable:no-any */\r\n  onChange?: (targetProperty: string, value: any) => void;\r\n\r\n  /**\r\n   * Properties bag of the web part.\r\n   */\r\n  properties?: any;\r\n\r\n  /**\r\n   * Callback to set the entry state of the PropertyPane.\r\n   * This callback internally is responsible for changing the state of 'Apply'/'Cancel' buttons and\r\n   * update the invalidEntries dictionary.\r\n   */\r\n  /* tslint:enable:no-any */\r\n  setEntryState?: (targetProperty: string, isValidEntry: boolean) => void;\r\n}\r\n"],"sourceRoot":"/src"}