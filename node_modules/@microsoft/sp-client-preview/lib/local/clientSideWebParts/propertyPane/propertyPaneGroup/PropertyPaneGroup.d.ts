/**
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 *
 * @file PropertyPaneGroup.tsx
 */
import * as React from 'react';
import { IPropertyPaneGroupProps } from './IPropertyPaneGroup';
/**
 * Interface for PropertyPaneGroup state.
 */
export interface IPropertyPaneGroupState {
    isDetailsShown: boolean;
    id?: string;
}
/**
 * React Component: PropertyPaneGroup.
 */
export default class PropertyPaneGroup extends React.Component<IPropertyPaneGroupProps, IPropertyPaneGroupState> {
    refs: {
        [key: string]: Element;
        propertyPaneGroup: HTMLElement;
    };
    /**
     * An array of keys associated with the PropertyPaneGroup fields. This array is
     * to ensure that keys are unique for the fields within the PropertyPaneGroup.
     * This resets on every render of the PropertyPaneGroup.
     *
     * @private
     * @type {{[key: string]: boolean}}
     */
    private _keys;
    /**
     * constructor
     */
    constructor(props: IPropertyPaneGroupProps);
    /**
     * render: renders the PropertyPaneGroup component.
     */
    render(): React.ReactElement<{}>;
    private _renderGroup();
    /**
     * _renderGroupField: renders the individual groupField based on the field type.
     */
    private _renderGroupField<T>(groupField);
    /**
     * Event handler for a group field's onChange event.
     */
    private _onChange(groupField, value);
    /**
     * Event handler for a ChoiceGroup's onChange event.
     *
     * @params {IPropertyPaneField} groupField: the property pane control which has just invoked onChanged event.
     * @params {IChoiceGroupOption} checkedOption: the option representing the field which is checked now.
     */
    private _onChoiceGroupChange(groupField, checkedOption);
    /**
     * Event handler for a DropDown's onChange event.
     * @todo (SPPPLAT VSO#169096) Change fabric controls to send in a common type for all the events.
     * Then change this method to use the common type.
     */
    private _onDropDownChange(groupField, selectedItem, selectedIndex);
    /**
     * Event handler for header click.
     */
    private _onHeaderClicked();
    private _onNotifyValidationResult(errorMessage, value, groupField, setEntryState);
}
