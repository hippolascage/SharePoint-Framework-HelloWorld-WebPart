{"version":3,"sources":["local/clientSideWebParts/propertyPane/propertyPane/PropertyPane.tsx"],"names":[],"mappings":"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","file":"local/clientSideWebParts/propertyPane/propertyPane/PropertyPane.js","sourcesContent":["/**\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * @file Root component of the inbuilt webpart property configuration user experience.\r\n *\r\n */\r\n\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Compare } from '@microsoft/sp-client-base';\r\nimport { StringHelper } from '@ms/odsp-utilities-bundle';\r\n\r\nimport { IPropertyPaneData } from './IPropertyPane';\r\nimport { IPropertyPanePage } from '../propertyPanePage/IPropertyPanePage';\r\nimport PropertyPanePage from '../propertyPanePage/PropertyPanePage';\r\nimport PropertyPaneTitleBar from '../propertyPaneTitleBar/PropertyPaneTitleBar';\r\nimport Strings from '../loc/Strings.resx';\r\nimport propertyPaneStyles from './PropertyPane.module.scss';\r\nimport propertyPanePageStyles from '../propertyPanePage/PropertyPanePage.module.scss';\r\n// VSO: Bug 227235 Remove this dependency on Canvas11y\r\n\r\nimport {\r\n  Fabric,\r\n  FocusTrapZone,\r\n  KeyCodes,\r\n  css\r\n} from 'office-ui-fabric-react';\r\n\r\nimport {\r\n  getFocusableChildren,\r\n  getFirstFocusableChild,\r\n  isKey,\r\n  KeyCodes as ExtendedKeyCodes\r\n} from '../../../appBase/components/sp-canvas/a11y/CanvasA11y';\r\n\r\n/**\r\n * Propertypane component props.\r\n */\r\nexport interface IPropertyPaneProps {\r\n  data: IPropertyPaneData;\r\n}\r\n\r\n/**\r\n * Propertypane component state.\r\n */\r\nexport interface IPropertyPaneState {\r\n  isSaveButtonEnabled: boolean;\r\n  saveConfirmationMessage: string;\r\n  currentPage: number;\r\n}\r\n\r\n/**\r\n * A constant value to delay the clearing of save confirmation message.\r\n */\r\nconst CLEAR_DELAY: number = 100;\r\n\r\n/**\r\n * A constant value to set when there is no web part to configure.\r\n */\r\nconst NO_WEBPART_ID: string = 'No_Web_Part_ID';\r\n\r\n/**\r\n * Page direction.\r\n */\r\nenum PageDirection {\r\n  back = -1,\r\n  next = 1\r\n}\r\n\r\n/**\r\n * Propertypane component.\r\n */\r\nexport default class PropertyPane extends React.Component<IPropertyPaneProps, IPropertyPaneState> {\r\n\r\n  public refs: {\r\n    [key: string]: Element,\r\n    propertyPane: HTMLElement\r\n  };\r\n\r\n  private _properties: IPropertyPaneProps;\r\n  private _descriptionId: string;\r\n  private _invalidEntries: { [key: string]: boolean };\r\n  private _cssClassForActionableElement: string;\r\n  private _propertyPane: HTMLElement;\r\n  private _propertyPaneContent: HTMLElement;\r\n  private _currentlyConfiguredWebPartId: string;\r\n  private _isPropertyPaneReplaced: boolean;\r\n\r\n  /**\r\n   * Constructor to instantiate the propertypane component.\r\n   */\r\n  constructor(props: IPropertyPaneProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isSaveButtonEnabled: false,\r\n      saveConfirmationMessage: '',\r\n      currentPage: 1\r\n    };\r\n\r\n    this._currentlyConfiguredWebPartId = props.data.webPartId;\r\n\r\n    // method bindings.\r\n    this._onChange = this._onChange.bind(this);\r\n    this._onPropertyPaneKeyDown = this._onPropertyPaneKeyDown.bind(this);\r\n    this._handleSaveClick = this._handleSaveClick.bind(this);\r\n    this._handleCloseClick = this._handleCloseClick.bind(this);\r\n    this._setContainerDiv = this._setContainerDiv.bind(this);\r\n\r\n    this._invalidEntries = {};\r\n  }\r\n\r\n  /**\r\n   * React component lifecycle event.\r\n   * @param props - new props for the component.\r\n   */\r\n  public componentWillReceiveProps(props: IPropertyPaneProps): void {\r\n    if (this._currentlyConfiguredWebPartId !== props.data.webPartId || props.data.shouldResetState) {\r\n      const webPartId: string = props.data.webPartId ? props.data.webPartId : NO_WEBPART_ID;\r\n      this._resetState(webPartId);\r\n    } else {\r\n      this.setState({\r\n        saveConfirmationMessage: ''\r\n      } as IPropertyPaneState);\r\n    }\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    // @todo: for some god forsaken reason the z-index in the class does not apply. Hence this hack\r\n    // Some react thing that I don't have time to dig into right now. Perhaps later.\r\n    const domNode: HTMLElement = ReactDOM.findDOMNode(this) as HTMLElement;\r\n    domNode.style.zIndex = '999';\r\n\r\n    if (this.props.data.onRendered) {\r\n      this.props.data.onRendered();\r\n    }\r\n    // This is the hack to workaround a react bug that doesn't set the focus in componentDidMount properly\r\n    // VSO:Bug 215692 Remove the hack and implement focus methods in fabric react\r\n    this._setTimeOutForFocus();\r\n  }\r\n\r\n  public componentDidUpdate(props: IPropertyPaneProps): void {\r\n    // When empty property pane is loaded, onRendered method will be undefined.\r\n    if (this.props.data.onRendered) {\r\n      this.props.data.onRendered();\r\n      if (this._isPropertyPaneReplaced) {\r\n        this._updateTabIndexes(0, true);\r\n        this._setTimeOutForFocus();\r\n        this._isPropertyPaneReplaced = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * React component lifecycle method.\r\n   * Added this method to avoid, unnecessary renders.\r\n   */\r\n  public shouldComponentUpdate(nextProps: IPropertyPaneProps, nextState: IPropertyPaneState): boolean {\r\n    return !Compare.shallowCompare(this.props, nextProps) || !Compare.shallowCompare(this.state, nextState);\r\n  }\r\n\r\n  public render(): React.ReactElement<{}> {\r\n    this._properties = this.props.data.properties;\r\n\r\n    return (\r\n      <Fabric>\r\n        <div role='alert'\r\n          aria-live='polite'\r\n          className={ propertyPaneStyles.propertyPaneScreenReaderOnly }>\r\n          <span>{ this.state.saveConfirmationMessage }</span>\r\n        </div>\r\n        <FocusTrapZone\r\n          isClickableOutsideFocusTrap='true'\r\n          firstFocusableSelector={ this._cssClassForActionableElement }\r\n          forceFocusInsideTrap={ false }>\r\n          <div\r\n            className={ css('ms-font-m', propertyPaneStyles.propertyPane) }\r\n            role='dialog'\r\n            aria-labelledby='propertyPaneTitleId'\r\n            aria-describedby={ this._descriptionId }\r\n            ref={ (c: HTMLElement): HTMLElement => this._propertyPane = c }\r\n            onKeyDown={ this._onPropertyPaneKeyDown }>\r\n            <PropertyPaneTitleBar title={ this.props.data.title } onClose={ this._handleCloseClick } />\r\n            { this._renderContent() }\r\n          </div>\r\n        </FocusTrapZone>\r\n      </Fabric>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Resetting the PropertyPane state.\r\n   * @param webPartId - web part id to be configured with.\r\n   */\r\n  private _resetState(webPartId: string): void {\r\n    this._isPropertyPaneReplaced = true;\r\n    this._currentlyConfiguredWebPartId = webPartId;\r\n\r\n    this.setState({\r\n      isSaveButtonEnabled: false,\r\n      saveConfirmationMessage: '',\r\n      currentPage: 1\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Renders the content on the property pane, below the title.\r\n   */\r\n  private _renderContent(): React.ReactElement<{}> {\r\n    if (this._shouldRenderEmptyPage) {\r\n      return this._renderNoConfigurationState();\r\n    } else {\r\n      return (\r\n        <div>\r\n          { this._renderPage() }\r\n          <div className={ propertyPanePageStyles.propertyPaneFooter }>\r\n            { this._renderApplyButton() }\r\n            { this._pageNavigationButtons() }\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns if the empty page should be rendered in property pane.\r\n   */\r\n  private get _shouldRenderEmptyPage(): boolean {\r\n    return (!this.props.data.settings ||\r\n      !this.props.data.settings.pages ||\r\n      this.props.data.settings.pages.length === 0 ||\r\n      !this.props.data.settings.pages[this.state.currentPage - 1].groups ||\r\n      this.props.data.settings.pages[this.state.currentPage - 1].groups.length === 0);\r\n  }\r\n\r\n  /**\r\n   * Renders the Apply button, if property pane is not reactive.\r\n   */\r\n  private _renderApplyButton(): React.ReactElement<{}> {\r\n    if (!this.props.data.isReactive) {\r\n      return (\r\n        <div className={ propertyPanePageStyles.propertyPaneButtonCommands }>\r\n          <button className='ms-Button ms-Button--primary' disabled={ !this.state.isSaveButtonEnabled }\r\n            onClick={ this._handleSaveClick }>\r\n            <span className='ms-Button-label'>{ Strings.Save }</span>\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renders page navigation buttons.\r\n   */\r\n  private _pageNavigationButtons(): React.ReactElement<{}> {\r\n    if (this.props.data.settings.pages.length > 1) {\r\n      return (\r\n        <div className={ propertyPanePageStyles.propertyPanePageNav }>\r\n          <button\r\n            className={ propertyPanePageStyles.propertyPaneBackNavLink }\r\n            disabled={ this.state.currentPage === 1 }\r\n            onClick={ () => { this._flipPage(PageDirection.back); } }>\r\n            <i className={ css(\r\n              this._arrowKeyIcon(PageDirection.back),\r\n              propertyPanePageStyles.propertyPaneBackArrow) }></i>\r\n            { Strings.PropertyPaneBackPage }\r\n          </button>\r\n          <span role='status' className={ css(propertyPanePageStyles.propertyPanePageOfPages) }>\r\n            { StringHelper.format(\r\n              Strings.PropertyPanePageOfPages,\r\n              this.state.currentPage,\r\n              this.props.data.settings.pages.length\r\n            ) }\r\n          </span>\r\n          <button\r\n            className={ propertyPanePageStyles.propertyPaneNextNavLink }\r\n            disabled={ this.state.currentPage === this.props.data.settings.pages.length }\r\n            onClick={ () => { this._flipPage(PageDirection.next); } }>\r\n            { Strings.PropertyPaneNextPage }\r\n            <i className={ css(\r\n              this._arrowKeyIcon(PageDirection.next),\r\n              propertyPanePageStyles.propertyPaneNextArrow) }></i>\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      /* tslint:disable:no-null-keyword */\r\n      return null;\r\n      /* tslint:enable:no-null-keyword */\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Flips the page based on the direction.\r\n   * @param direction - direction of the page flip. Positive value is forward direction, negative is backwards.\r\n   */\r\n  private _flipPage(direction: PageDirection): void {\r\n    const page: number = this.state.currentPage + direction;\r\n\r\n    this.setState({\r\n      currentPage: page\r\n    } as IPropertyPaneState);\r\n\r\n    // trigger rendering the page\r\n    this.props.data.render();\r\n    this._setTimeOutForFocus();\r\n  }\r\n\r\n  /**\r\n   * Renders page on the property pane.\r\n   */\r\n  private _renderPage(): React.ReactElement<IPropertyPaneProps> {\r\n    const pages: IPropertyPanePage[] = this.props.data.settings.pages;\r\n    const page: IPropertyPanePage = pages[this.state.currentPage - 1];\r\n\r\n    if (page.header && page.header.description) {\r\n      this._descriptionId = 'propertyPaneDescriptionId';\r\n    }\r\n\r\n    return (\r\n      <PropertyPanePage\r\n        pageDescription={ page.header ? page.header.description : undefined }\r\n        displayGroupsAsAccordion={ page.displayGroupsAsAccordion }\r\n        onChange={ this._onChange.bind(this) }\r\n        propertyGroups={ page.groups }\r\n        properties={ this._properties }\r\n        setEntryState={ (targetProperty: string, isValidEntry: boolean): void => {\r\n          this._setEntryState(targetProperty, isValidEntry);\r\n        } }\r\n        setContainerDiv= { this._setContainerDiv }\r\n        />\r\n    );\r\n  }\r\n\r\n  private _setContainerDiv(containerDiv: HTMLDivElement): void {\r\n    this._propertyPaneContent = containerDiv;\r\n  }\r\n\r\n  /**\r\n   * Renders the description for no configuration scenario.\r\n   */\r\n  private _renderNoConfigurationState(): React.ReactElement<{}> {\r\n    return (\r\n      <div>\r\n        <div className={ propertyPanePageStyles.propertyPanePageContent }>\r\n          <div role='alert'\r\n            aria-live='polite'\r\n            className={ propertyPaneStyles.propertyPaneDescription }>\r\n            { Strings.PropertyPaneEmptyStateDescription }</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _setEntryState(targetProperty: string, isValidEntry: boolean): void {\r\n\r\n    // maintain the list of invalid entries\r\n    if (isValidEntry) {\r\n      if (this._invalidEntries.hasOwnProperty(targetProperty)) {\r\n        delete this._invalidEntries[targetProperty];\r\n      }\r\n    } else {\r\n      this._invalidEntries[targetProperty] = true;\r\n    }\r\n\r\n    // enable the save button in Reactive mode if there are no invalid entries\r\n    if (!this.props.data.isReactive) {\r\n      this._enableSaveButton(Object.keys(this._invalidEntries).length === 0);\r\n    }\r\n  }\r\n\r\n  private _enableSaveButton(enabled: boolean): void {\r\n    this.setState({\r\n      isSaveButtonEnabled: enabled\r\n    } as IPropertyPaneState);\r\n  }\r\n\r\n  private _onChange(targetProperty: string, value: boolean | string): void {\r\n    this._properties[targetProperty] = value;\r\n\r\n    if (!this._invalidEntries.hasOwnProperty(targetProperty)) {\r\n      this._raiseEvent(targetProperty, value);\r\n    }\r\n  }\r\n\r\n  private _handleSaveClick(): void {\r\n    this.setState({\r\n      saveConfirmationMessage: Strings.SaveConfirmation\r\n    } as IPropertyPaneState);\r\n\r\n    this.props.data.onSave();\r\n    this._enableSaveButton(false);\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        saveConfirmationMessage: ''\r\n      } as IPropertyPaneState);\r\n    }, CLEAR_DELAY);\r\n  }\r\n\r\n  private _handleCloseClick(): void {\r\n    this._resetState(NO_WEBPART_ID);\r\n    this._updateTabIndexes(-1, false);\r\n\r\n    this.props.data.onClose();\r\n  }\r\n\r\n  /* tslint:disable:no-any */\r\n  private _raiseEvent(targetProperty: string, value: any): void {\r\n    /* tslint:enable:no-any */\r\n    this.props.data.onPropertyChange(targetProperty, value);\r\n  }\r\n\r\n  private _onPropertyPaneKeyDown(ev: React.KeyboardEvent): void {\r\n    if (isKey(KeyCodes.escape, ev)) {\r\n      ev.preventDefault();\r\n      this._handleCloseClick();\r\n    } else if (isKey(ExtendedKeyCodes.P, ev, true)) {\r\n      ev.preventDefault();\r\n      this.props.data.onLostFocus();\r\n    }\r\n  }\r\n\r\n  private _arrowKeyIcon(dir: PageDirection): string {\r\n    const rtl: boolean = document.dir === 'rtl';\r\n    const iconCSS: string = 'ms-Icon ms-Icon--Chevron';\r\n\r\n    if (dir === PageDirection.back) {\r\n      return iconCSS + (rtl ? 'Right' : 'Left');\r\n    } else {\r\n      return iconCSS + (rtl ? 'Left' : 'Right');\r\n    }\r\n  }\r\n\r\n  private _setTimeOutForFocus(): void {\r\n    setTimeout(() => {\r\n      const propertyPane: HTMLElement = this._shouldRenderEmptyPage ?\r\n        this._propertyPane : this._propertyPaneContent;\r\n      this._focusOnFirstActionableElement(propertyPane);\r\n    }, 0);\r\n  }\r\n\r\n  private _focusOnFirstActionableElement(propertyPane: HTMLElement): void {\r\n    if (propertyPane) {\r\n      const firstElement: HTMLElement = getFirstFocusableChild(propertyPane);\r\n      if (firstElement) {\r\n        firstElement.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to update the tab indexes of all the elements in the root to the given value.\r\n   * @param tabIndex\r\n   */\r\n  private _updateTabIndexes(tabIndex: number, ignoreTabIndexes: boolean): void {\r\n    const rootElement: HTMLElement = this._propertyPane as HTMLElement;\r\n    const elements: HTMLElement[] = getFocusableChildren(rootElement, ignoreTabIndexes);\r\n\r\n    for (const el of elements) {\r\n      (el as HTMLElement).tabIndex = tabIndex;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}