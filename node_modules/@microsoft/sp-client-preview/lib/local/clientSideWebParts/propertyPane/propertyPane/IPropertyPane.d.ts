/**
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 *
 * @file PropertyPane interfaces for the developers wanting to configure the web parts.
 */
import { IPropertyPanePage } from '../propertyPanePage/IPropertyPanePage';
/**
 * Web part - PropertyPane data contract.
 */
export interface IPropertyPaneData {
    /**
     * Web part instance id.
     * @internal
     */
    webPartId: string;
    /**
     * Title of the web part.
     * @internal
     */
    title: string;
    /**
     * Indicates whether the web part's configuration is reactive or not.
     * @internal
     */
    isReactive?: boolean;
    /**
     * Indicates whether the PropertyPane state should reset or not.
     * @internal
     */
    shouldResetState?: boolean;
    /**
     * Notification event fired when the property has already been validated and modified.
     */
    onPropertyChange: (propertyName: string, newValue: any) => void;
    /**
     * Event callback for 'Apply' click.
     */
    onSave: () => void;
    /**
     * Event callback for 'Close' click.
     */
    onClose: () => void;
    /**
     * Event callback fired when the configuration is completed for the web part.
     */
    onConfigurationComplete: () => void;
    /**
     * Event callback fired after the PropertyPane is rendered.
     */
    onRendered: () => void;
    /**
     * Event callback fired when the focus is handed back to the web part
     */
    onLostFocus: () => void;
    /**
     * Callback to re-render the PropertyPane.
     * @internal
     */
    render?: () => void;
    /**
     * Property bag from the web part.
     */
    properties: any;
    /**
     * Web part configuration settings.
     */
    settings: IPropertyPaneSettings;
}
/**
 * Web part configuration settings
 */
export interface IPropertyPaneSettings {
    /**
     * Page to be displayed on the PropertyPane.
     */
    currentPage?: number;
    /**
     * Total number of pages on the PropertyPane.
     */
    pages: IPropertyPanePage[];
}
