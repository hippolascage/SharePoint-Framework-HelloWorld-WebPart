{"version":3,"sources":["local/clientSideWebParts/core/classicPages/ClassicPageHost.ts"],"names":[],"mappings":"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","file":"local/clientSideWebParts/core/classicPages/ClassicPageHost.js","sourcesContent":["/**\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * @file Web part host for classic SharePoint pages.\r\n */\r\n\r\nimport {\r\n  JsonUtilities,\r\n  ServiceScope,\r\n  PageContext,\r\n  pageContextServiceKey\r\n} from '@microsoft/sp-client-base';\r\nimport IWebPartData from '../IWebPartData';\r\nimport IWebPartHost from '../../../../local/common/webParts/IWebPartHost';\r\nimport { WebPartConfigurationEvent } from '../../../../local/common/webParts/PropertyPaneDefinitions';\r\n\r\n/**\r\n * This class represents the host for client side web parts on classic SharePoint pages.\r\n * @see IWebPartHost for more details on the role of a web part host.\r\n */\r\nexport class ClassicPageHost implements IWebPartHost {\r\n  private static _instance: ClassicPageHost;\r\n  private _serviceScope: ServiceScope;\r\n\r\n  public static getInstance(): ClassicPageHost {\r\n    if (ClassicPageHost._instance === undefined) {\r\n      ClassicPageHost._instance = new ClassicPageHost();\r\n    }\r\n    return ClassicPageHost._instance;\r\n  }\r\n\r\n  /**\r\n   * constructor\r\n   */\r\n  constructor() {\r\n    this.setDirty = this.setDirty.bind(this);\r\n    this.webPartConfigurationEventCallback = this.webPartConfigurationEventCallback.bind(this);\r\n  }\r\n\r\n  /**\r\n   * @see IWebPartHost\r\n   */\r\n  public get serviceScope(): ServiceScope {\r\n    this._ensureInitialized();\r\n    return this._serviceScope;\r\n  }\r\n\r\n  /* tslint:disable:no-any */\r\n  public setDirty(instanceId: string, data?: any): void {\r\n  /* tslint:enable:no-any */\r\n    this._setData(data);\r\n  }\r\n\r\n  /**\r\n   * @see IWebPartHost.ts\r\n   */\r\n  public webPartConfigurationEventCallback(event: WebPartConfigurationEvent, data?: IWebPartData): void {\r\n    if (event === WebPartConfigurationEvent.ConfigurationComplete) {\r\n      this._setData(data);\r\n    }\r\n  }\r\n\r\n  /* tslint:disable:no-any */\r\n  private _setData(data?: any): void {\r\n  /* tslint:enable:no-any */\r\n    if (data) {\r\n      const dataField: Element = document.querySelector('#ClientSideToolPartData');\r\n      const idField: Element = document.querySelector('#ClientSideToolPartId');\r\n      const webPartBeingConfiguredId: string = idField.getAttribute('value');\r\n      if (dataField && webPartBeingConfiguredId === data.id) {\r\n        dataField.setAttribute('value', JsonUtilities.encode(JSON.stringify(data)));\r\n      }\r\n    }\r\n  }\r\n\r\n  private _ensureInitialized(): void {\r\n    const serviceScope: ServiceScope = ServiceScope.startNewRoot();\r\n\r\n    // This bootstrapping code should be reconciled with how applications are loaded by the shell.\r\n\r\n    // Task 228547 should remove this code\r\n    const pageContext: PageContext = serviceScope.createDefaultAndProvide(pageContextServiceKey);\r\n    const pageContextInfoName: string = '_spPageContextInfo';\r\n    pageContext.initialize({\r\n      cultureInfo: {\r\n        currentCultureName: window[pageContextInfoName].currentCultureName,\r\n        currentUICultureName: window[pageContextInfoName].currentUICultureName\r\n      },\r\n      web: {\r\n        absoluteUrl: window[pageContextInfoName].webAbsoluteUrl,\r\n        id: window[pageContextInfoName].webId,\r\n        serverRelativeUrl: window[pageContextInfoName].webServerRelativeUrl,\r\n        title: window[pageContextInfoName].webTitle\r\n      },\r\n      site: {\r\n        id: window[pageContextInfoName].siteId\r\n      },\r\n      user: {\r\n        displayName: window[pageContextInfoName].userDisplayName,\r\n        loginName: window[pageContextInfoName].userLoginName\r\n      }\r\n    });\r\n\r\n    serviceScope.finish();\r\n    this._serviceScope = serviceScope;\r\n  }\r\n}\r\n\r\n/* tslint:disable:export-name */\r\nexport default ClassicPageHost;\r\n/* tslint:enable:export-name */\r\n"],"sourceRoot":"/src"}