/**
* @Copyright (c) Microsoft Corporation.  All rights reserved.
*
* Code to help boostrap client side web parts on classic pages.
*/
import { IClientSideWebPartManifest } from '@microsoft/sp-module-interfaces';
import { DisplayMode } from '@microsoft/sp-client-base';
import IWebPartData from '../IWebPartData';
/**
 * This class helps bootstrap client side web parts onto classic SharePoint pages.
 * Ideally client side web parts should be bootstrapped similar to the modern pages.
 * @todo (SPPPLAT VSO#228547) tracks fixing that.
 *
 * @internal
 */
export default class ClassicPageBootstrapper {
    private _initialized;
    private _manager;
    private _logSource;
    /**
     * Load client side web part on a classic page
     *
     * @param instanceId - Instance id of the webpart.
     * @param manifest - The webp art manifest.
     * @param data - Instance data for the control.
     * @param mode - DisplayMode for the web part.
     */
    loadClientSideWebPart(instanceId: string, manifest: IClientSideWebPartManifest<any>, data: IWebPartData, mode?: DisplayMode): void;
    /**
     * Log an error in case of loading failure.
     *
     * @param instanceId - Instance id of the webpart e.g. a GUID.
     * @param error - The error string.
     */
    logClientSideWebPartLoadError(instanceId: string, error: string): void;
    /**
     * Global method called by the webpart configure button in the classic page
     *
     * @param instanceId - Instance id of the webpart e.g. a GUID.
     * @param title - The title of the webpart.
     */
    configureStart(instanceId: string, title: string): void;
    /**
     * Initialize the classic page bootstrapper.
     */
    private _initialize();
    /**
     * Find the web part container DOM element.
     *
     * @param instanceId - Instance id of the webpart e.g. a GUID.
     */
    private _findWebPartContainer(instanceId);
}
