{"version":3,"sources":["local/clientSideWebParts/core/test/BaseClientSideWebPart.test.ts"],"names":[],"mappings":"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","file":"local/clientSideWebParts/core/test/BaseClientSideWebPart.test.js","sourcesContent":["\r\nimport { IClientSideWebPartInternal } from '../IClientSideWebPartInternal';\r\nimport BaseClientSideWebPart from '../BaseClientSideWebPart';\r\nimport { IPropertyPaneData } from '../../propertyPane/propertyPane/IPropertyPane';\r\nimport { default as IWebPartData } from '../IWebPartData';\r\nimport TestWebPart, { TestWebPartWithNoRender } from './TestWebPart';\r\nimport { MockWebPartContext } from './WebPartMocks';\r\n\r\nconst { assert, expect }: Chai.ChaiStatic = chai;\r\n\r\ndescribe('BaseClientSideWebPart', (): void => {\r\n\r\n  it('Base class cannot be instantiated', (): void => {\r\n    expect((): BaseClientSideWebPart<{}>  => {\r\n      return new BaseClientSideWebPart<{}>(new MockWebPartContext());\r\n    }).to.throw();\r\n    expect((): TestWebPart => { return new TestWebPart(new MockWebPartContext()); }).to.not.throw();\r\n  });\r\n\r\n  it('Invalid parameters are not accepted', (): void => {\r\n    let wpc: MockWebPartContext = new MockWebPartContext();\r\n    expect((): TestWebPart => { return new TestWebPart(wpc); })\r\n      .to.not.throw();\r\n\r\n    wpc = new MockWebPartContext();\r\n    wpc.domElement = undefined;\r\n    expect((): TestWebPart => {\r\n      return new TestWebPart(wpc); })\r\n        .to.throw('The value for \\\"webpart element\\\" must not be undefined');\r\n\r\n    wpc = new MockWebPartContext();\r\n    wpc.instanceId = undefined;\r\n    expect((): TestWebPart => {\r\n      return new TestWebPart(wpc); })\r\n        .to.throw('The value for \\\"webpart instanceId\\\" must not be undefined');\r\n\r\n    wpc = new MockWebPartContext();\r\n    wpc.manifest = undefined;\r\n    expect((): TestWebPart => { return new TestWebPart(wpc); })\r\n      .to.throw('The value for \\\"webpart manifest\\\" must not be undefined');\r\n\r\n    wpc = new MockWebPartContext();\r\n    wpc.host = undefined;\r\n    expect((): TestWebPart => { return new TestWebPart(wpc); })\r\n      .to.throw('The value for \\\"webpart host\\\" must not be undefined');\r\n\r\n    wpc = new MockWebPartContext();\r\n    wpc.eventAggregator = undefined;\r\n    expect((): TestWebPart => { return new TestWebPart(wpc); })\r\n      .to.throw('The value for \\\"webpart context eventAggregator\\\" must not be undefined');\r\n\r\n    wpc = new MockWebPartContext();\r\n    wpc.statusRenderer = undefined;\r\n    expect((): TestWebPart => { return new TestWebPart(wpc); })\r\n      .to.throw('The value for \\\"webpart context statusRenderer\\\" must not be undefined');\r\n\r\n    wpc = new MockWebPartContext();\r\n    wpc.pageContext = undefined;\r\n    expect((): TestWebPart => { return new TestWebPart(wpc); })\r\n      .to.throw('The value for \\\"webpart context pageContext\\\" must not be undefined');\r\n  });\r\n\r\n  it('Has valid public properties after initialization', (): void => {\r\n    const c: MockWebPartContext = new MockWebPartContext();\r\n    c.domElement.id = 'id1';\r\n    const wp: TestWebPart = new TestWebPart(c);\r\n\r\n    assert.strictEqual(c.domElement.id, wp.publicDomElement.id, 'id');\r\n    assert.deepEqual(c.manifest, wp.publicManifest, 'manifest');\r\n    assert.strictEqual(c.instanceId, wp.publicInstanceId, 'instanceId');\r\n    assert.deepEqual(c.host, wp.publicHost, 'host');\r\n    assert.deepEqual(c.manifest.properties, wp.publicProperties, 'properties');\r\n    assert.strictEqual(false, wp.publicRenderedOnce, 'renderedOnce');\r\n    assert.strictEqual(wp.publicContext, c);\r\n  });\r\n\r\n  it('Base class render throws', (): void => {\r\n    const wp: TestWebPartWithNoRender = new TestWebPartWithNoRender(new MockWebPartContext());\r\n    /* tslint:disable:no-any */\r\n    expect((): void => { (wp as any).render(); }).to.throw();\r\n    /* tslint:enable:no-any */\r\n  });\r\n\r\n  it('Dispose does not nullify dom element', (): void => {\r\n    const c: MockWebPartContext = new MockWebPartContext();\r\n    const wp: TestWebPart = new TestWebPart(c);\r\n    assert(!!c.domElement);\r\n    /* tslint:disable:no-any */\r\n    (wp as any)._internalDispose();\r\n    /* tslint:enable:no-any */\r\n    assert(c.domElement);\r\n  });\r\n\r\n  it('Serialize returns correct data', (): void => {\r\n    const c: MockWebPartContext = new MockWebPartContext();\r\n    const wp: TestWebPart = new TestWebPart(c);\r\n\r\n    const data: {} = {\r\n      id: c.manifest.id,\r\n      instanceId: c.instanceId,\r\n      version: c.manifest.version,\r\n      title: c.manifest.title.default,\r\n      properties: c.manifest.properties,\r\n      htmlProperties: ''\r\n    };\r\n\r\n    /* tslint:disable:no-any */\r\n    assert.deepEqual(data, (wp as any as IClientSideWebPartInternal)._internalSerialize(), 'serialized data');\r\n    /* tslint:enable:no-any */\r\n  });\r\n\r\n  it('Serialize returns correct data with html properties', (): void => {\r\n    const c: MockWebPartContext = new MockWebPartContext();\r\n    c.manifest.searchablePropertyNames = ['prop1'];\r\n    c.manifest.linkPropertyNames = ['prop2'];\r\n    c.manifest.imageLinkPropertyNames = ['prop3'];\r\n    const wp: TestWebPart = new TestWebPart(c);\r\n\r\n    const htmlPropsString: string =\r\n      `<div data-sp-prop-name='prop1'>value1</div>` +\r\n      `<link data-sp-prop-name='prop2' href='http://www.contoso.com/page1.aspx'>` +\r\n      `<img data-sp-prop-name='prop2' href='http://www.contoso.com/image.png'>`;\r\n\r\n    const data: IWebPartData = {\r\n      id: c.manifest.id,\r\n      instanceId: c.instanceId,\r\n      version: c.manifest.version,\r\n      title: c.manifest.title.default,\r\n      properties: c.manifest.properties,\r\n      htmlProperties: htmlPropsString\r\n    };\r\n\r\n    // @todo: this should be deep equal\r\n    /* tslint:disable:no-any */\r\n    assert.notDeepEqual(data, (wp as any)._internalSerialize(), 'serialized data');\r\n    /* tslint:enable:no-any */\r\n  });\r\n\r\n  // Property Pane\r\n  it ('Get property pane settings returns correct data', (): void => {\r\n    const c: MockWebPartContext = new MockWebPartContext();\r\n    const wp: TestWebPart = new TestWebPart(c);\r\n\r\n    const data: IPropertyPaneData = {\r\n      webPartId: c.instanceId,\r\n      title: c.manifest.title.default,\r\n      settings: wp.publicPropertyPaneSettings,\r\n      onPropertyChange: undefined,\r\n      onClose: undefined,\r\n      onSave: undefined,\r\n      onRendered: undefined,\r\n      onConfigurationComplete: undefined,\r\n      onLostFocus: undefined,\r\n      properties: c.manifest.properties\r\n    };\r\n\r\n    /* tslint:disable:no-any */\r\n    const props: IPropertyPaneData = (wp as any as IClientSideWebPartInternal)._internalGetPropertyPaneSettings();\r\n    /* tslint:enable:no-any */\r\n\r\n    assert.strictEqual(data.webPartId, props.webPartId, 'webPartId');\r\n    assert.strictEqual(data.settings.currentPage, props.settings.currentPage, 'currentPage');\r\n    assert.deepEqual(data.properties, props.properties, 'properties');\r\n    assert.strictEqual(data.settings.pages.length, 1, 'length');\r\n  });\r\n\r\n  it('Base class onEvent does not throw', (): void => {\r\n    const wp: TestWebPartWithNoRender = new TestWebPartWithNoRender(new MockWebPartContext());\r\n    /* tslint:disable:no-any */\r\n    expect((): void => { (wp as any).onEvent('testEvent', undefined); }).to.not.throw();\r\n    /* tslint:enable:no-any */\r\n  });\r\n\r\n  // Eventing\r\n  it('Base class onEvent does not throw', (): void => {\r\n      const wp: TestWebPartWithNoRender = new TestWebPartWithNoRender(new MockWebPartContext());\r\n      /* tslint:disable:no-any */\r\n      expect((): void => { (wp as any).onEvent('testEvent', undefined); }).to.not.throw();\r\n      /* tslint:enable:no-any */\r\n  });\r\n});\r\n\r\n"],"sourceRoot":"/src"}