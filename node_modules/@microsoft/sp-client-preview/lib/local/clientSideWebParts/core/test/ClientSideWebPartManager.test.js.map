{"version":3,"sources":["local/clientSideWebParts/core/test/ClientSideWebPartManager.test.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,oEAAoE;AACpE,gEAAgE;AAChE,sEAAsE;AACtE,2CAA2C;AAC3C,gFAAgF;AAChF,WAAW;AACX,+BAA+B;AAC/B,wBAAwB;AACxB,qBAAqB;AACrB,wCAAwC;AACxC,2BAA2B;AAE3B,oDAAoD;AAEpD,QAAQ,CAAC,0BAA0B,EAAE;IACrC,6FAA6F;IAC7F,gCAAgC;IAChC,0CAA0C;IAE1C,kDAAkD;IAClD,gBAAgB;IAChB,+FAA+F;IAE/F,iCAAiC;IACjC,4BAA4B;IAC5B,iHAAiH;IAEjH,iCAAiC;IACjC,uBAAuB;IACvB,sGAAsG;IAEtG,iCAAiC;IACjC,+BAA+B;IAC/B,+EAA+E;IAE/E,iCAAiC;IACjC,+EAA+E;IAC/E,QAAQ;IAER,kDAAkD;IAClD,gBAAgB;IAChB,6DAA6D;IAE7D,2CAA2C;IAC3C,2BAA2B;IAC3B,6DAA6D;IAE7D,2CAA2C;IAC3C,2BAA2B;IAC3B,6DAA6D;IAE7D,2CAA2C;IAC3C,yBAAyB;IACzB,6DAA6D;IAE7D,mDAAmD;IACnD,mEAAmE;IACnE,MAAM;IAEN,iDAAiD;IACjD,mDAAmD;IACnD,2EAA2E;IAC3E,QAAQ;AACR,CAAC,CAAC,CAAC","file":"local/clientSideWebParts/core/test/ClientSideWebPartManager.test.js","sourcesContent":["'use strict';\r\n\r\n// import IWebPartHost from '../../../common/webParts/IWebPartHost';\r\n// import BaseClientSideWebPart from '../BaseClientSideWebPart';\r\n// import ClientSideWebPartManager from '../ClientSideWebPartManager';\r\n// import TestWebPart from './TestWebPart';\r\n// import IWebPartContext, { IWebPartManagerContext } from '../IWebPartContext';\r\n// import {\r\n//   MockWebPartManagerContext,\r\n//   MockWebPartContext,\r\n//   MockWebPartHost,\r\n//   MockClientSideWebPartStatusRenderer\r\n// } from './WebPartMocks';\r\n\r\n// const { assert, expect }: Chai.ChaiStatic = chai;\r\n\r\ndescribe('ClientSideWebPartManager', () => {\r\n//   let wpm: ClientSideWebPartManager = new ClientSideWebPartManager(new MockWebPartHost());\r\n//   let h: IWebPartHost = null;\r\n//   let c: IWebPartManagerContext = null;\r\n\r\n//   it('Constructor argument validation', () => {\r\n//     h = null;\r\n//     expect(function () { new ClientSideWebPartManager(h); }).to.throw('ArgumentNull: host');\r\n\r\n//     h = new MockWebPartHost();\r\n//     h.pageContext = null;\r\n//     expect(function () { new ClientSideWebPartManager(h); }).to.throw('ArgumentNull: host.preloadedPageData');\r\n\r\n//     h = new MockWebPartHost();\r\n//     h.logger = null;\r\n//     expect(function () { new ClientSideWebPartManager(h); }).to.throw('ArgumentNull: host.logger');\r\n\r\n//     h = new MockWebPartHost();\r\n//     h.statusRenderer = null;\r\n//     expect(function () { new ClientSideWebPartManager(h); }).to.not.throw();\r\n\r\n//     h = new MockWebPartHost();\r\n//     expect(function () { new ClientSideWebPartManager(h); }).to.not.throw();\r\n//   });\r\n\r\n//   it('loadWebPart argument validation', () => {\r\n//     c = null;\r\n//     expect(function () { wpm.loadWebPart(c) }).to.throw();\r\n\r\n//     c = new MockWebPartManagerContext();\r\n//     c.domElement = null;\r\n//     expect(function () { wpm.loadWebPart(c) }).to.throw();\r\n\r\n//     c = new MockWebPartManagerContext();\r\n//     c.instanceId = null;\r\n//     expect(function () { wpm.loadWebPart(c) }).to.throw();\r\n\r\n//     c = new MockWebPartManagerContext();\r\n//     c.manifest = null;\r\n//     expect(function () { wpm.loadWebPart(c) }).to.throw();\r\n\r\n//     //@todo c = new MockWebPartManagerContext();\r\n//     //expect(function () { wpm.loadWebPart(c) }).to.not.throw();\r\n// });\r\n\r\n//   it('Loading indicator is displayed', () => {\r\n//     //@todo c = new MockWebPartManagerContext();\r\n//     //c.host.statusRenderer = new MockClientSideWebPartStatusRenderer();\r\n//   });\r\n});\r\n"],"sourceRoot":"/src"}