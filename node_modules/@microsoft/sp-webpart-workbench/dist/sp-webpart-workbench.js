define("8be81a5c-af38-4bb2-af97-afa3b64dfbed", ["react","react-dom","@microsoft/sp-client-preview","@microsoft/sp-client-base","8be81a5c-af38-4bb2-af97-afa3b64dfbed_strings","office-ui-fabric-react"], function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_19__, __WEBPACK_EXTERNAL_MODULE_62__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(1);
	/* tslint:disable:no-unused-variable */
	var React = __webpack_require__(2);
	/* tslint:enable:no-unused-variable */
	var ReactDOM = __webpack_require__(3);
	var sp_client_preview_1 = __webpack_require__(4);
	var sp_module_loader_1 = __webpack_require__(5);
	var Workbench_1 = __webpack_require__(6);
	var WorkBenchStore_1 = __webpack_require__(103);
	var PageStore_1 = __webpack_require__(104);
	__webpack_require__(325);
	var SpWebpartWorkbench = (function (_super) {
	    __extends(SpWebpartWorkbench, _super);
	    function SpWebpartWorkbench() {
	        _super.apply(this, arguments);
	    }
	    SpWebpartWorkbench.prototype.onLoad = function () {
	        var _this = this;
	        // @todo (SPPPlat VSO bug #189028) This is a workaround for a TypeScript compiler bug
	        // that we reported.  After the compiler is fixed, we will remove the typecast.
	        /* tslint:disable:no-any */
	        this._pageStore = new PageStore_1.PageStore(this.shell.serviceScope);
	        /* tslint:enable:no-any */
	        // Only attempt to load debug manifests if we're running on a SharePoint box
	        if (!window.location.hostname.match(/localhost/i)) {
	            sp_module_loader_1.default.forceLoadDebugManifests().then(function () {
	                /* tslint:disable:no-console */
	                console.debug('Debug manifests loaded');
	                /* tslint:enable:no-console */
	                _this._pageStore.setPageReady();
	            });
	        }
	        else {
	            this._pageStore.setPageReady();
	        }
	    };
	    SpWebpartWorkbench.prototype.onRender = function () {
	        var workbenchstore = new WorkBenchStore_1.WorkBenchStore();
	        ReactDOM.render(React.createElement(Workbench_1.WorkBench, {store: workbenchstore, pageStore: this._pageStore}), this.domElement);
	    };
	    return SpWebpartWorkbench;
	}(sp_client_preview_1.ClientSideApplication));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = new SpWebpartWorkbench();
	/* tslint:enable:export-name */
	


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var scripts = document.getElementsByTagName('script');
	var regex = new RegExp('sp-webpart-workbench_?[a-zA-Z0-9]*.js', 'i');
	var found = false;
	
	if (scripts && scripts.length) {
	  for (var i = 0; i < scripts.length; i++) {
	    if (!scripts[i]) continue;
	    var path = scripts[i].getAttribute('src');
	    if (path && path.match(regex)) {
	      __webpack_require__.p = path.substring(0, path.lastIndexOf('/') + 1);
	      found = true;
	      break;
	    }
	  }
	}
	
	if (!found) {
	  for (var global in window.__setWebpackPublicPathLoaderSrcRegistry__) {
	    if (global && global.match(regex)) {
	      __webpack_require__.p = global.substring(0, global.lastIndexOf('/') + 1);
	      break;
	    }
	  }
	}

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_4__;

/***/ },
/* 5 */
/***/ function(module, exports) {

	"use strict";
	/* tslint:disable:no-any */
	var importableSpModuleLoader = window.spModuleLoader;
	/* tslint:enable:no-any */
	// Return a dummy module loader if the module loader isn't present on the page. This occurs during unit tests.
	if (!importableSpModuleLoader) {
	    importableSpModuleLoader = {
	        combokeys: undefined,
	        loadScript: function () { return Promise.reject(new Error('Module loader not present')); },
	        loadStandardLibraryModule: function () { return Promise.reject(new Error('Module loader not present')); },
	        loadManifestModules: function () { return Promise.reject(new Error('Module loader not present')); },
	        importManifests: function () { throw new Error('Module loader not present'); },
	        forceLoadDebugManifests: function () { throw new Error('Module loader not present'); },
	        getManifests: function () { return []; },
	        loadCss: function () { throw new Error('Module loader not present'); }
	    };
	}
	exports.combokeys = importableSpModuleLoader ? importableSpModuleLoader.combokeys : undefined;
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = importableSpModuleLoader;
	


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @Copyright (c) Microsoft Corporation.  All rights reserved.
	 *
	 * @file Workbench.tsx
	 * The top level file for the Workbench. The Workbench is a tool that SharePoint
	 * developers use to test their Web Parts. It is designed to make development
	 * efficient by providing a production-like evironment for the developer to
	 * test their Web Part and quickly make changes.
	 */
	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var React = __webpack_require__(2);
	var ZoneHost_1 = __webpack_require__(7);
	var CommandBar_1 = __webpack_require__(14);
	var DetailsPane_1 = __webpack_require__(20);
	var Page_1 = __webpack_require__(48);
	var mobservable_react_1 = __webpack_require__(30);
	var WebPartStore_1 = __webpack_require__(59);
	var MobilePreview_1 = __webpack_require__(61);
	__webpack_require__(100);
	var WorkBench = (function (_super) {
	    __extends(WorkBench, _super);
	    function WorkBench() {
	        _super.call(this);
	        this._webPartStore = new WebPartStore_1.default();
	        this.state = {
	            displayMobilePreview: false,
	            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Phone
	        };
	        this._onClickMobileView = this._onClickMobileView.bind(this);
	        this._onClickTabletView = this._onClickTabletView.bind(this);
	        this._closeMobilePreview = this._closeMobilePreview.bind(this);
	        this._setSuiteNavZIndex = this._setSuiteNavZIndex.bind(this);
	    }
	    // React magically finds this function by looking for the specific function name.
	    // https://facebook.github.io/react/docs/context.html
	    WorkBench.prototype.getChildContext = function () {
	        return {
	            pageStore: this.props.pageStore,
	            webPartStore: this._webPartStore
	        };
	    };
	    WorkBench.prototype.render = function () {
	        var zones = [];
	        var mobilePreview = undefined;
	        var _a = this.props.store, addinType = _a.addinType, isEditing = _a.isEditing, isDetailsPaneVisible = _a.isDetailsPaneVisible;
	        var rootClass = 'WorkBench ms-font-m' +
	            (isEditing ? ' is-editing' : '') +
	            (isDetailsPaneVisible ? ' has-pane' : '');
	        var pageStore = this.props.pageStore;
	        if (addinType) {
	            zones.push(React.createElement(ZoneHost_1.default, {addinType: addinType}));
	        }
	        if (this.state.displayMobilePreview) {
	            mobilePreview = React.createElement(MobilePreview_1.default, {onExit: this._closeMobilePreview, deviceType: this.state.mobilePreviewDeviceType});
	        }
	        return (React.createElement("div", {className: rootClass}, React.createElement("div", {className: 'WorkBench-header'}, React.createElement("div", {className: 'WorkBench-headerMenu'}, React.createElement("i", {className: 'ms-Icon ms-Icon--waffle'})), React.createElement("div", {className: 'WorkBench-headerTitle ms-font-xl'}, React.createElement("em", null, "Office 365"), " SharePoint Workbench"), React.createElement("div", {className: 'WorkBench-headerPerson'}, React.createElement("i", {className: 'ms-Icon ms-Icon--person'}))), React.createElement("div", null, React.createElement("div", {id: 'workbenchCommandBar', className: 'WorkBench-commandBar'}, React.createElement(CommandBar_1.default, {store: pageStore, appStore: this.props.store, onClickMobileView: this._onClickMobileView, onClickTabletView: this._onClickTabletView, closeMobilePreview: this._closeMobilePreview})), React.createElement("div", {id: 'workbenchPageContent', className: 'WorkBench-pageContent'}, React.createElement(Page_1.default, {store: pageStore, appStore: this.props.store}), React.createElement(DetailsPane_1.default, null))), zones, mobilePreview));
	    };
	    WorkBench.prototype._onClickMobileView = function () {
	        this.setState({
	            displayMobilePreview: true,
	            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Phone
	        });
	        this._setSuiteNavZIndex('0');
	    };
	    WorkBench.prototype._onClickTabletView = function () {
	        this.setState({
	            displayMobilePreview: true,
	            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Tablet
	        });
	        this._setSuiteNavZIndex('0');
	    };
	    WorkBench.prototype._closeMobilePreview = function () {
	        this.setState({
	            displayMobilePreview: false,
	            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Phone
	        });
	        this._setSuiteNavZIndex('5');
	    };
	    /**
	     * Sets the z-index of the suite nav.
	     * Purpose of this is so that the suite nav doesn't cover up the mobile preview header.
	     * Should find a better way to achieve this.
	     */
	    WorkBench.prototype._setSuiteNavZIndex = function (value) {
	        var suiteNav = document.getElementById('SuiteNavPlaceHolder');
	        if (suiteNav) {
	            suiteNav.style.zIndex = value;
	        }
	    };
	    /* tslint:disable:no-any */
	    WorkBench.childContextTypes = {
	        /* tslint:enable:no-any */
	        pageStore: React.PropTypes.object,
	        webPartStore: React.PropTypes.object
	    };
	    WorkBench = __decorate([
	        mobservable_react_1.observer
	    ], WorkBench);
	    return WorkBench;
	}(React.Component));
	exports.WorkBench = WorkBench;
	


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(2);
	var sp_client_base_1 = __webpack_require__(8);
	__webpack_require__(9);
	var ZoneHost = (function (_super) {
	    __extends(ZoneHost, _super);
	    function ZoneHost() {
	        _super.call(this);
	        this.state = {
	            isDropping: false
	        };
	    }
	    ZoneHost.prototype.render = function () {
	        return (React.createElement("div", {className: this._getClassName(), ref: 'zoneArea', onDragOver: this._onDragOver.bind(this), onDragLeave: this._onDragLeave.bind(this)}, "I am a webpart."));
	    };
	    ZoneHost.prototype.componentDidMount = function () {
	        /* tslint:disable:no-any */
	        var addinType = this.props.addinType;
	        /* tslint:enable:no-any */
	        if (addinType) {
	            var zoneAreaElement = this.refs.zoneArea;
	            /* tslint:disable:no-any */
	            var addin = new addinType(zoneAreaElement);
	            /* tslint:enable:no-any */
	            addin.render(sp_client_base_1.DisplayMode.Read);
	        }
	    };
	    ZoneHost.prototype._getClassName = function () {
	        return 'ZoneHost' +
	            (this.props.isEditing ? ' is-editing' : '') +
	            (this.state.isDropping ? ' ZoneHost--isDropping' : '');
	    };
	    ZoneHost.prototype._onDragOver = function (ev) {
	        ev.preventDefault();
	        this.setState({
	            isDropping: true
	        });
	    };
	    ZoneHost.prototype._onDragLeave = function (ev) {
	        this.setState({
	            isDropping: false
	        });
	    };
	    ZoneHost.columnDefinition = 'ms-u-sm12';
	    return ZoneHost;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ZoneHost;
	


/***/ },
/* 8 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_8__;

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(10);
	


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(11);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, ".ZoneHost{min-height:100px;min-width:100px;background:#DDD;height:100%}.ZoneHost--isDropping{background:#EAEAEA}", ""]);
	
	// exports


/***/ },
/* 12 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 13 */
/***/ function(module, exports) {

	"use strict";
	;
	;
	// IE needs to inject styles using cssText. However, we need to evaluate this lazily, so this
	// value will initialize as undefined, and later will be set once on first loadStyles injection.
	var _injectStylesWithCssText;
	// Store the theming state in __themeState__ global scope for reuse in the case of duplicate
	// load-themed-styles hosted on the page.
	var _root = (typeof window === 'undefined') ? {} : window;
	var _themeState = _root.__themeState__ = _root.__themeState__ || {
	    theme: null,
	    lastStyleElement: null,
	    registeredStyles: []
	};
	/**
	 * Matches theming tokens. For example, "[theme: themeSlotName, default: #FFF]" (including the quotes).
	 */
	/* tslint:disable: max-line-length */
	var _themeTokenRegex = /[\'\"]\[theme:\s*(\w+)\s*(?:\,\s*default:\s*([\\"\']?[\.\,\(\)\#\-\s\w]*[\.\,\(\)\#\-\w][\"\']?))?\s*\][\'\"]/g;
	/* tslint:enable: max-line-length */
	/** Maximum style text length, for supporting IE style restrictions. */
	var MAX_STYLE_CONTENT_SIZE = 10000;
	/**
	 * Loads a set of style text. If it is registered too early, we will register it when the window.load
	 * event is fired.
	 * @param {string | ThemableArray} styles Themable style text to register.
	 */
	function loadStyles(styles) {
	    var styleParts = Array.isArray(styles) ? styles : splitStyles(styles);
	    if (_injectStylesWithCssText === undefined) {
	        _injectStylesWithCssText = shouldUseCssText();
	    }
	    applyThemableStyles(styleParts);
	}
	exports.loadStyles = loadStyles;
	/**
	 * Loads a set of style text. If it is registered too early, we will register it when the window.load event
	 * is fired.
	 * @param {string} styleText Style to register.
	 * @param {IStyleRecord} styleRecord Existing style record to re-apply.
	 */
	function applyThemableStyles(styles, styleRecord) {
	    _injectStylesWithCssText ?
	        registerStylesIE(styles, styleRecord) :
	        registerStyles(styles, styleRecord);
	}
	/**
	 * Registers a set theme tokens to find and replace. If styles were already registered, they will be
	 * replaced.
	 * @param {any} theme JSON object of theme tokens to values.
	 */
	function loadTheme(theme) {
	    _themeState.theme = theme;
	    // reload styles.
	    reloadStyles();
	}
	exports.loadTheme = loadTheme;
	/**
	 * Reloads styles.
	 * @param {any} theme JSON object of theme tokens to values.
	 */
	function reloadStyles() {
	    if (_themeState.theme) {
	        for (var _i = 0, _a = _themeState.registeredStyles; _i < _a.length; _i++) {
	            var styleRecord = _a[_i];
	            applyThemableStyles(styleRecord.themableStyle, styleRecord);
	        }
	    }
	}
	/**
	 * Find theme tokens and replaces them with provided theme values.
	 * @param {string} styles Tokenized styles to fix.
	 */
	function detokenize(styles) {
	    if (styles) {
	        styles = resolveThemableArray(splitStyles(styles));
	    }
	    return styles;
	}
	exports.detokenize = detokenize;
	/**
	 * Resolves ThemingInstruction objects in an array and joins the result into a string.
	 * @param {ThemableArray} splitStyleArray ThemableArray to resolve and join.
	 */
	function resolveThemableArray(splitStyleArray) {
	    var theme = _themeState.theme;
	    var resolvedCss;
	    if (splitStyleArray) {
	        // Resolve the array of theming instructions to an array of strings.
	        // Then join the array to produce the final CSS string.
	        var resolvedArray = splitStyleArray.map(function (currentValue) {
	            var themeSlot = currentValue.theme;
	            if (themeSlot != null) {
	                // A theming annotation. Resolve it.
	                var themedValue = theme ? theme[themeSlot] : null;
	                var defaultValue = currentValue.defaultValue;
	                // Warn to console if we hit an unthemed value even when themes are provided.
	                // Allow the themedValue to be null to explicitly request the default value.
	                if (theme && !themedValue && console && !(themeSlot in theme)) {
	                    /* tslint:disable: max-line-length */
	                    console.warn("Theming value not provided for \"" + themeSlot + "\". Falling back to \"" + (defaultValue || 'inherit') + "\".");
	                }
	                return themedValue || defaultValue || 'inherit';
	            }
	            else {
	                // A non-themable string. Preserve it.
	                return currentValue.rawString;
	            }
	        });
	        resolvedCss = resolvedArray.join('');
	    }
	    return resolvedCss;
	}
	/**
	 * Split tokenized CSS into an array of strings and theme specification objects
	 * @param {string} styles Tokenized styles to split.
	 */
	function splitStyles(styles) {
	    var result = [];
	    if (styles) {
	        var pos = 0; // Current position in styles.
	        var tokenMatch = void 0;
	        while (tokenMatch = _themeTokenRegex.exec(styles)) {
	            var matchIndex = tokenMatch.index;
	            if (matchIndex > pos) {
	                result.push({
	                    rawString: styles.substring(pos, matchIndex)
	                });
	            }
	            result.push({
	                theme: tokenMatch[1],
	                defaultValue: tokenMatch[2] // May be undefined
	            });
	            // index of the first character after the current match
	            pos = _themeTokenRegex.lastIndex;
	        }
	        // Push the rest of the string after the last match.
	        result.push({
	            rawString: styles.substring(pos)
	        });
	    }
	    return result;
	}
	exports.splitStyles = splitStyles;
	/**
	 * Registers a set of style text. If it is registered too early, we will register it when the
	 * window.load event is fired.
	 * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.
	 * @param {IStyleRecord} styleRecord May specify a style Element to update.
	 */
	function registerStyles(styleArray, styleRecord) {
	    var head = document.getElementsByTagName('head')[0];
	    var styleElement = document.createElement('style');
	    styleElement.type = 'text/css';
	    styleElement.appendChild(document.createTextNode(resolveThemableArray(styleArray)));
	    if (styleRecord) {
	        head.replaceChild(styleElement, styleRecord.styleElement);
	        styleRecord.styleElement = styleElement;
	    }
	    else {
	        head.appendChild(styleElement);
	    }
	    if (!styleRecord) {
	        _themeState.registeredStyles.push({
	            styleElement: styleElement,
	            themableStyle: styleArray
	        });
	    }
	}
	/**
	 * Registers a set of style text, for IE 9 and below, which has a ~30 style element limit so we need
	 * to register slightly differently.
	 * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.
	 * @param {IStyleRecord} styleRecord May specify a style Element to update.
	 */
	function registerStylesIE(styleArray, styleRecord) {
	    var head = document.getElementsByTagName('head')[0];
	    var lastStyleElement = _themeState.lastStyleElement, registeredStyles = _themeState.registeredStyles;
	    var stylesheet = lastStyleElement ? lastStyleElement.styleSheet : null;
	    var lastStyleContent = stylesheet ? stylesheet.cssText : '';
	    var lastRegisteredStyle = registeredStyles[registeredStyles.length - 1];
	    var resolvedStyleText = resolveThemableArray(styleArray);
	    if (!lastStyleElement || (lastStyleContent.length + resolvedStyleText.length) > MAX_STYLE_CONTENT_SIZE) {
	        lastStyleElement = document.createElement('style');
	        lastStyleElement.type = 'text/css';
	        if (styleRecord) {
	            head.replaceChild(lastStyleElement, styleRecord.styleElement);
	            styleRecord.styleElement = lastStyleElement;
	        }
	        else {
	            head.appendChild(lastStyleElement);
	        }
	        if (!styleRecord) {
	            lastRegisteredStyle = {
	                styleElement: lastStyleElement,
	                themableStyle: styleArray
	            };
	            registeredStyles.push(lastRegisteredStyle);
	        }
	    }
	    lastStyleElement.styleSheet.cssText += detokenize(resolvedStyleText);
	    Array.prototype.push.apply(lastRegisteredStyle.themableStyle, styleArray); // concat in-place
	    // Preserve the theme state.
	    _themeState.lastStyleElement = lastStyleElement;
	}
	/**
	 * Checks to see if styleSheet exists as a property off of a style element.
	 * This will determine if style registration should be done via cssText (<= IE9) or not
	 */
	function shouldUseCssText() {
	    var useCSSText = false;
	    if (typeof document !== 'undefined') {
	        var emptyStyle = document.createElement('style');
	        emptyStyle.type = 'text/css';
	        useCSSText = !!emptyStyle.styleSheet;
	    }
	    return useCSSText;
	}
	


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(2);
	__webpack_require__(15);
	var CommandBar_resx_1 = __webpack_require__(18);
	var CommandBar = (function (_super) {
	    __extends(CommandBar, _super);
	    function CommandBar(props) {
	        _super.call(this, props);
	        this._pageStore = props.store;
	        this._onClickClear = this._onClickClear.bind(this);
	        this._onClickReadEdit = this._onClickReadEdit.bind(this);
	    }
	    CommandBar.prototype.render = function () {
	        if (this.props.appStore.isEditing) {
	            return (React.createElement("div", {className: 'ms-CommandBar'}, React.createElement("div", {className: 'ms-CommandBar-sideCommands'}, React.createElement("div", {className: 'ms-CommandBarItem'}, React.createElement("div", {className: 'ms-CommandBarItem-linkWrapper'}, React.createElement("a", {className: 'ms-CommandBarItem-link', onClick: this.props.onClickMobileView}, React.createElement("span", {className: 'ms-CommandBarItem-icon ms-Icon ms-Icon--mobile'}), React.createElement("span", {className: 'ms-CommandBarItem-commandText ms-font-m ms-font-weight-regular'}, CommandBar_resx_1.default.Mobile)))), React.createElement("div", {className: 'ms-CommandBarItem'}, React.createElement("div", {className: 'ms-CommandBarItem-linkWrapper'}, React.createElement("a", {className: 'ms-CommandBarItem-link', onClick: this.props.onClickTabletView}, React.createElement("span", {className: 'ms-CommandBarItem-icon ms-Icon ms-Icon--tablet'}), React.createElement("span", {className: 'ms-CommandBarItem-commandText ms-font-m ms-font-weight-regular'}, CommandBar_resx_1.default.Tablet)))), React.createElement("div", {className: 'ms-CommandBarItem'}, React.createElement("div", {className: 'ms-CommandBarItem-linkWrapper'}, React.createElement("a", {className: 'ms-CommandBarItem-link', onClick: this._onClickReadEdit.bind(this)}, React.createElement("span", {className: 'ms-CommandBarItem-icon ms-Icon ms-Icon--eye'}), React.createElement("span", {className: 'ms-CommandBarItem-commandText ms-font-m ms-font-weight-regular'}, "Preview"))))), React.createElement("div", {className: 'ms-CommandBar-mainArea'}, React.createElement("div", {className: 'ms-CommandBarItem'}, React.createElement("div", {className: 'ms-CommandBarItem-linkWrapper'}, React.createElement("a", {className: 'ms-CommandBarItem-link'}, React.createElement("span", {className: 'ms-CommandBarItem-icon ms-Icon ms-Icon--save'}), React.createElement("span", {className: 'ms-CommandBarItem-commandText ms-font-m ms-font-weight-regular'}, "Save")))), React.createElement("div", {className: 'ms-CommandBarItem'}, React.createElement("div", {className: 'ms-CommandBarItem-linkWrapper'}, React.createElement("a", {className: 'ms-CommandBarItem-link', onClick: this._onClickClear.bind(this)}, React.createElement("span", {className: 'ms-CommandBarItem-icon ms-Icon ms-Icon--reactivate'}), React.createElement("span", {className: 'ms-CommandBarItem-commandText ms-font-m ms-font-weight-regular'}, "Discard")))))));
	        }
	        else {
	            return (React.createElement("div", {className: 'ms-CommandBar'}, React.createElement("div", {className: 'ms-CommandBar-sideCommands'}, React.createElement("div", {className: 'ms-CommandBarItem'}, React.createElement("div", {className: 'ms-CommandBarItem-linkWrapper'}, React.createElement("a", {className: 'ms-CommandBarItem-link', onClick: this._onClickReadEdit.bind(this)}, React.createElement("span", {className: 'ms-CommandBarItem-icon ms-Icon ms-Icon--pencil'}), React.createElement("span", {className: 'ms-CommandBarItem-commandText ms-font-m ms-font-weight-regular'}, "Edit")))))));
	        }
	    };
	    CommandBar.prototype._onClickClear = function () {
	        this._pageStore.clearPageState();
	    };
	    CommandBar.prototype._onClickReadEdit = function () {
	        this.props.appStore.toggleEdit();
	    };
	    return CommandBar;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = CommandBar;
	


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(16);
	


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(17);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, ".ms-CommandBarItem-icon{margin-right:4px}", ""]);
	
	// exports


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/* This file was generated by a tool. Modifying it will produce unexpected behavior. */
	/* tslint:disable */
	"use strict";
	var strings =  false
	    ? require('../../resx-strings/en-us.json')
	    : __webpack_require__(19);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = strings['_9UktoXJQycrpnNb1t4fhyQ'] || {};
	


/***/ },
/* 19 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_19__;

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(2);
	var ConnectedAddinPickerPane_1 = __webpack_require__(21);
	__webpack_require__(45);
	/* tslint:disable:export-name */
	var WorkBench = (function (_super) {
	    __extends(WorkBench, _super);
	    function WorkBench() {
	        _super.apply(this, arguments);
	    }
	    /* tslint:enable:export-name */
	    WorkBench.prototype.render = function () {
	        return (React.createElement("div", {className: 'DetailsPane ms-font-m'}, React.createElement("div", {className: 'DetailsPane-header'}, React.createElement("i", {className: 'DetailsPane-closeButton ms-Icon ms-Icon--x'}), React.createElement("div", {className: 'DetailsPane-headerText'}, "WebParts")), React.createElement("div", {className: 'DetailsPane-content'}, React.createElement("div", {className: 'DetailsPane-section'}, React.createElement("div", {className: 'DetailsPane-sectionContent'}, React.createElement(ConnectedAddinPickerPane_1.default, null))))));
	    };
	    return WorkBench;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = WorkBench;
	


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(2);
	var AddinPickerPane_1 = __webpack_require__(22);
	var AddinPickerStore_1 = __webpack_require__(44);
	var ConnectedAddinPickerPane = (function (_super) {
	    __extends(ConnectedAddinPickerPane, _super);
	    function ConnectedAddinPickerPane() {
	        _super.apply(this, arguments);
	    }
	    ConnectedAddinPickerPane.prototype.render = function () {
	        return React.createElement(AddinPickerPane_1.default, {store: this._store});
	    };
	    ConnectedAddinPickerPane.prototype.componentWillMount = function () {
	        this._store = new AddinPickerStore_1.default(this.context.webPartStore);
	    };
	    ConnectedAddinPickerPane.prototype.componentWillUnmount = function () {
	        // this._store.dispose();
	        this._store = undefined;
	    };
	    ConnectedAddinPickerPane.contextTypes = {
	        webPartStore: React.PropTypes.object.isRequired
	    };
	    return ConnectedAddinPickerPane;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ConnectedAddinPickerPane;
	


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var React = __webpack_require__(2);
	var SearchBox_1 = __webpack_require__(23);
	__webpack_require__(27);
	var mobservable_react_1 = __webpack_require__(30);
	var AddinPickerPane = (function (_super) {
	    __extends(AddinPickerPane, _super);
	    function AddinPickerPane() {
	        _super.call(this);
	    }
	    AddinPickerPane.prototype.render = function () {
	        var store = this.props.store;
	        var itemElements = store.parts ?
	            store.parts.map(function (addin) { return (React.createElement("div", {className: 'List-cell', key: addin.id}, React.createElement("div", {className: 'Item', draggable: true}, React.createElement("div", {className: 'Item-image ms-Icon ms-Icon--' + addin.iconFontName}), React.createElement("div", {className: 'Item-title ms-font-l'}, addin.displayName), React.createElement("div", {className: 'Item-description ms-font-s'}, addin.description)))); })
	            : null;
	        /* tslint:enable:no-null-keyword */
	        return (React.createElement("div", {className: 'AddinPickerPane'}, React.createElement(SearchBox_1.default, {label: 'Search', onChange: this._onFilter.bind(this)}), !store.isLoading && store.filterText && !store.parts.length ?
	            React.createElement("div", {className: 'AddinPickerPane-message'}, "No results")
	            :
	                React.createElement("div", {className: 'List'}, store.isLoading ?
	                    React.createElement("div", {className: 'AddinPickerPane-message'}, "Loading...")
	                    : itemElements, store.errorMessage
	                    ? React.createElement("div", {className: 'AddinPickerPane-error'}, store.errorMessage)
	                    : null, "/* tslint:enable:no-null-keyword */")));
	    };
	    AddinPickerPane.prototype._onFilter = function (filterText) {
	        this.props.store.filter(filterText);
	    };
	    AddinPickerPane = __decorate([
	        mobservable_react_1.observer
	    ], AddinPickerPane);
	    return AddinPickerPane;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = AddinPickerPane;
	


/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(2);
	__webpack_require__(24);
	var SearchBox = (function (_super) {
	    __extends(SearchBox, _super);
	    function SearchBox() {
	        _super.call(this);
	        this.state = {
	            isActive: false,
	            value: ''
	        };
	        this._onClose = this._onClose.bind(this);
	        this._onInputBlur = this._onInputBlur.bind(this);
	        this._onInputChange = this._onInputChange.bind(this);
	        this._onInputFocus = this._onInputFocus.bind(this);
	        this._onInputKeyPress = this._onInputKeyPress.bind(this);
	    }
	    SearchBox.prototype.render = function () {
	        var label = this.props.label;
	        return (React.createElement("div", {className: 'ms-SearchBox' + (this.state.isActive ? ' is-active' : '')}, React.createElement("input", {className: 'ms-SearchBox-field', onBlur: this._onInputBlur, onChange: this._onInputChange, onFocus: this._onInputFocus, onKeyPress: this._onInputKeyPress, value: this.state.value}), React.createElement("label", {className: 'ms-SearchBox-label', style: {
	            display: this.state.isActive || this.state.value ? 'none' : 'block'
	        }}, React.createElement("i", {className: 'ms-SearchBox-icon ms-Icon ms-Icon--search'}), label), React.createElement("button", {className: 'ms-SearchBox-closeButton', onMouseDown: this._onClose}, React.createElement("i", {className: 'ms-Icon ms-Icon--x'}))));
	    };
	    SearchBox.prototype.getValue = function () {
	        return this.state.value;
	    };
	    SearchBox.prototype.setValue = function (value) {
	        this.setState({
	            isActive: this.state.isActive,
	            value: value
	        });
	    };
	    ;
	    SearchBox.prototype._onClose = function () {
	        this.setState({
	            isActive: false,
	            value: ''
	        });
	    };
	    SearchBox.prototype._onInputBlur = function () {
	        this.setState({
	            isActive: false,
	            value: this.state.value
	        });
	    };
	    SearchBox.prototype._onInputChange = function (e) {
	        this.setState({
	            isActive: this.state.isActive,
	            value: e.target.value
	        });
	        if (this.props.onChange) {
	            this.props.onChange(e.target.value);
	        }
	    };
	    SearchBox.prototype._onInputFocus = function () {
	        this.setState({
	            isActive: true,
	            value: this.state.value
	        });
	    };
	    SearchBox.prototype._onInputKeyPress = function (e) {
	        var value = this.getValue();
	        if (value && e.charCode === 13 /* Enter */ && this.props.onSearch) {
	            this.props.onSearch(this.getValue());
	        }
	    };
	    return SearchBox;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = SearchBox;
	


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(25);
	


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(26);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, ".ms-SearchBox{display:block}.ms-SearchBox-field{width:100%}.ms-SearchBox-field:focus{outline:0}", ""]);
	
	// exports


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(28);
	


/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(29);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, ".AddinPickerPane-error,.AddinPickerPane-message{padding:10px;text-align:center}.AddinPickerPane-error{color:red}.Item{height:70px;box-sizing:border-box;padding:10px;position:relative;cursor:pointer}.Item:hover{background:#EAEAEA}.Item-image{width:50px;height:50px;line-height:50px;background:#CCC;position:absolute;left:10px;top:10px;font-size:30px;text-align:center}.Item-title{position:absolute;left:70px;top:10px;right:10px;height:25px;line-height:25px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.Item-description{position:absolute;left:70px;top:35px;right:10px;height:25px;line-height:25px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}", ""]);
	
	// exports


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {
	    function mrFactory(mobservable, React, ReactDOM) {
	        if (!mobservable)
	            throw new Error("mobservable-react requires the Mobservable package")
	        if (!React)
	            throw new Error("mobservable-react requires React to be available");
	
	        var isTracking = false;
	
	        // WeakMap<Node, Object>;
	        var componentByNodeRegistery = typeof WeakMap !== "undefined" ? new WeakMap() : undefined;
	        var renderReporter = new mobservable.extras.SimpleEventEmitter();
	
	        function findDOMNode(component) {
	            if (ReactDOM)
	                return ReactDOM.findDOMNode(component);
	            return null;
	        }
	
	        function reportRendering(component) {
	            var node = findDOMNode(component);
	            if (node)
	                componentByNodeRegistery.set(node, component);
	
	            renderReporter.emit({
	                event: 'render',
	                renderTime: component.__$mobRenderEnd - component.__$mobRenderStart,
	                totalTime: Date.now() - component.__$mobRenderStart,
	                component: component,
	                node: node
	            });
	        }
	
	        var reactiveMixin = {
	            componentWillMount: function() {
	                var baseRender = this.render;
	                this.__$mobDependencies = [];
	
	                this.render = function() {
	                    if (isTracking)
	                        this.__$mobRenderStart = Date.now();
	
	                    // invoke the old render function and in the mean time track all dependencies using
	                    // 'autorun'.
	                    // when the dependencies change, the function is triggered, but we don't want to
	                    // rerender because that would ignore the normal React lifecycle,
	                    // so instead we dispose the current observer and trigger a force update.
	                    var hasRendered = false;
	                    var self = this;
	                    var rendering;
	                    this.__$mobRenderDisposer = mobservable.autorun(function reactiveRender() {
	                        if (!hasRendered) {
	                            hasRendered = true;
	                            // withStrict: throw errors if the render function tries to alter state.
	                            mobservable.extras.withStrict(true, function() {
	                                rendering = baseRender.call(self);
	                            });
	                        } else {
	                            self.__$mobRenderDisposer(); // dispose
	                            if (self.__$mobHasUnmounted !== true) // Fixes #12, should not be needed after fixing mobservable #71
	                                React.Component.prototype.forceUpdate.call(self);
	                        }
	                    });
	
	                    this.render.$mobservable = this.__$mobRenderDisposer.$mobservable;
	
	                    // Generate friendly name for debugging
	                    this.render.$mobservable.context.name = [
	                        this.displayName || this.name || (this.constructor && this.constructor.name) || "<component>",
	                        "#", this._reactInternalInstance && this._reactInternalInstance._rootNodeID,
	                        ".render()"
	                    ].join("");
	
	                    // make sure views are not disposed between the clean-up of the observer and the next render
	                    // (invoked through force update)
	                    var newDependencies = this.__$mobRenderDisposer.$mobservable.observing.map(function(dep) {
	                        dep.setRefCount(+1);
	                        return dep;
	                    });
	                    this.__$mobDependencies.forEach(function(dep) {
	                        dep.setRefCount(-1);
	                    });
	                    this.__$mobDependencies = newDependencies;
	
	                    if (isTracking)
	                        this.__$mobRenderEnd = Date.now();
	                    return rendering;
	                }
	            },
	
	            componentWillUnmount: function() {
	                this.__$mobRenderDisposer && this.__$mobRenderDisposer();
	                this.__$mobDependencies.forEach(function(dep) {
	                    dep.setRefCount(-1);
	                });
	                this.__$mobHasUnmounted = true;
	                delete this.render.$mobservable;
	                if (isTracking) {
	                    var node = findDOMNode(this);
	                    if (node) {
	                        componentByNodeRegistery.delete(node);
	                    }
	                    renderReporter.emit({
	                        event: 'destroy',
	                        component: this,
	                        node: node
	                    });
	                }
	            },
	
	            componentDidMount: function() {
	                if (isTracking)
	                    reportRendering(this);
	            },
	
	            componentDidUpdate: function() {
	                if (isTracking)
	                    reportRendering(this);
	            },
	
	            shouldComponentUpdate: function(nextProps, nextState) {
	                // update on any state changes (as is the default)
	                if (this.state !== nextState)
	                    return true;
	                // update if props are shallowly not equal, inspired by PureRenderMixin
	                var keys = Object.keys(this.props);
	                var key;
	                if (keys.length !== Object.keys(nextProps).length)
	                    return true;
	                for(var i = keys.length -1; i >= 0, key = keys[i]; i--) {
	                    var newValue = nextProps[key];
	                    if (newValue !== this.props[key]) {
	                        return true;
	                    } else if (newValue && typeof newValue === "object" && !mobservable.isObservable(newValue)) {
	                        /**
	                         * If the newValue is still the same object, but that object is not observable,
	                         * fallback to the default React behavior: update, because the object *might* have changed.
	                         * If you need the non default behavior, just use the React pure render mixin, as that one
	                         * will work fine with mobservable as well, instead of the default implementation of
	                         * observer.
	                         */
	                        return true;
	                    }
	                }
	                return false;
	            }
	        }
	
	        function patch(target, funcName) {
	            var base = target[funcName];
	            var mixinFunc = reactiveMixin[funcName];
	            target[funcName] = function() {
	                base && base.apply(this, arguments);
	                mixinFunc.apply(this, arguments);
	            }
	        }
	
	        function observer(componentClass) {
	            // If it is function but doesn't seem to be a react class constructor,
	            // wrap it to a react class automatically
	            if (typeof componentClass === "function" && !componentClass.prototype.render && !componentClass.isReactClass && !React.Component.isPrototypeOf(componentClass)) {
	                return observer(React.createClass({
	                    displayName:     componentClass.displayName || componentClass.name,
	                    propTypes:       componentClass.propTypes,
	                    contextTypes:    componentClass.contextTypes,
	                    getDefaultProps: function() { return componentClass.defaultProps; },
	                    render:          function() { return componentClass.call(this, this.props, this.context); }
	                }));
	            }
	
	            if (!componentClass)
	                throw new Error("Please pass a valid component to 'observer'");
	            var target = componentClass.prototype || componentClass;
	
	            [
	                "componentWillMount",
	                "componentWillUnmount",
	                "componentDidMount",
	                "componentDidUpdate"
	            ].forEach(function(funcName) {
	                patch(target, funcName)
	            });
	
	            if (!target.shouldComponentUpdate)
	                target.shouldComponentUpdate = reactiveMixin.shouldComponentUpdate;
	            componentClass.isMobservableReactObserver = true;
	            return componentClass;
	        }
	
	        function trackComponents() {
	            if (typeof WeakMap === "undefined")
	                throw new Error("[mobservable-react] tracking components is not supported in this browser.");
	            if (!isTracking)
	                isTracking = true;
	        }
	
	        return ({
	            observer: observer,
	            reactiveComponent: function() {
	                console.warn("[mobservable-react] `reactiveComponent` has been renamed to `observer` and will be removed in 1.1.");
	                return observer.apply(null, arguments);
	            },
	            renderReporter: renderReporter,
	            componentByNodeRegistery: componentByNodeRegistery,
	            trackComponents: trackComponents
	        });
	    }
	
	    // UMD
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(31), __webpack_require__(2), __webpack_require__(3)], __WEBPACK_AMD_DEFINE_FACTORY__ = (mrFactory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if (typeof exports === 'object') {
	        module.exports = mrFactory(require('mobservable'), require('react'), require('react-dom'));
	    } else {
	        this.mobservableReact = mrFactory(this['mobservable'], this['React'], this['ReactDOM']);
	    }
	})();


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	var core = __webpack_require__(32);
	var dnode_1 = __webpack_require__(33);
	var utils_1 = __webpack_require__(38);
	var extras_1 = __webpack_require__(34);
	var simpleeventemitter_1 = __webpack_require__(37);
	__export(__webpack_require__(42));
	var core_1 = __webpack_require__(32);
	exports.isObservable = core_1.isObservable;
	exports.isObservableObject = core_1.isObservableObject;
	exports.isObservableArray = core_1.isObservableArray;
	exports.isObservableMap = core_1.isObservableMap;
	exports.observable = core_1.observable;
	exports.extendObservable = core_1.extendObservable;
	exports.asReference = core_1.asReference;
	exports.asFlat = core_1.asFlat;
	exports.asStructure = core_1.asStructure;
	exports.observe = core_1.observe;
	exports.autorun = core_1.autorun;
	exports.autorunUntil = core_1.autorunUntil;
	exports.autorunAsync = core_1.autorunAsync;
	exports.expr = core_1.expr;
	exports.toJSON = core_1.toJSON;
	exports.isReactive = core_1.isObservable;
	exports.map = core_1.map;
	exports.fastArray = core_1.fastArray;
	exports.makeReactive = core_1.observable;
	exports.extendReactive = core_1.extendObservable;
	exports.observeUntil = core_1.autorunUntil;
	exports.observeAsync = core_1.autorunAsync;
	var transform_1 = __webpack_require__(43);
	exports.createTransformer = transform_1.createTransformer;
	var dnode_2 = __webpack_require__(33);
	exports.untracked = dnode_2.untracked;
	exports.transaction = dnode_2.transaction;
	var observablemap_1 = __webpack_require__(41);
	exports.ObservableMap = observablemap_1.ObservableMap;
	exports._ = {
	    isComputingView: dnode_1.isComputingView,
	    quickDiff: utils_1.quickDiff
	};
	exports.extras = {
	    getDNode: extras_1.getDNode,
	    getDependencyTree: extras_1.getDependencyTree,
	    getObserverTree: extras_1.getObserverTree,
	    trackTransitions: extras_1.trackTransitions,
	    SimpleEventEmitter: simpleeventemitter_1.default,
	    withStrict: core.withStrict
	};


/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	var dnode_1 = __webpack_require__(33);
	var utils_1 = __webpack_require__(38);
	var observablevalue_1 = __webpack_require__(40);
	var observableview_1 = __webpack_require__(36);
	var observablearray_1 = __webpack_require__(39);
	var observableobject_1 = __webpack_require__(35);
	var observablemap_1 = __webpack_require__(41);
	var dnode_2 = __webpack_require__(33);
	function observable(v, keyOrScope) {
	    if (typeof arguments[1] === "string")
	        return observableDecorator.apply(null, arguments);
	    switch (arguments.length) {
	        case 0:
	            throw new Error("[mobservable.observable] Please provide at least one argument.");
	        case 1:
	            break;
	        case 2:
	            if (typeof v === "function")
	                break;
	            throw new Error("[mobservable.observable] Only one argument expected.");
	        default:
	            throw new Error("[mobservable.observable] Too many arguments. Please provide exactly one argument, or a function and a scope.");
	    }
	    if (isObservable(v))
	        return v;
	    var _a = getValueModeFromValue(v, ValueMode.Recursive), mode = _a[0], value = _a[1];
	    var sourceType = mode === ValueMode.Reference ? ValueType.Reference : getTypeOfValue(value);
	    switch (sourceType) {
	        case ValueType.Reference:
	        case ValueType.ComplexObject:
	            return toGetterSetterFunction(new observablevalue_1.ObservableValue(value, mode, null));
	        case ValueType.ComplexFunction:
	            throw new Error("[mobservable.observable] To be able to make a function reactive it should not have arguments. If you need an observable reference to a function, use `observable(asReference(f))`");
	        case ValueType.ViewFunction: {
	            var context = {
	                name: value.name,
	                object: value
	            };
	            return toGetterSetterFunction(new observableview_1.ObservableView(value, keyOrScope, context, mode === ValueMode.Structure));
	        }
	        case ValueType.Array:
	        case ValueType.PlainObject:
	            return makeChildObservable(value, mode, null);
	    }
	    throw "Illegal State";
	}
	exports.observable = observable;
	function map(initialValues, valueModifier) {
	    return new observablemap_1.ObservableMap(initialValues, valueModifier);
	}
	exports.map = map;
	function fastArray(initialValues) {
	    return observablearray_1.createObservableArray(initialValues, ValueMode.Flat, false, null);
	}
	exports.fastArray = fastArray;
	function asReference(value) {
	    return new AsReference(value);
	}
	exports.asReference = asReference;
	function asStructure(value) {
	    return new AsStructure(value);
	}
	exports.asStructure = asStructure;
	function asFlat(value) {
	    return new AsFlat(value);
	}
	exports.asFlat = asFlat;
	function isObservable(value, property) {
	    if (value === null || value === undefined)
	        return false;
	    if (property !== undefined) {
	        if (value instanceof observablemap_1.ObservableMap || value instanceof observablearray_1.ObservableArray)
	            throw new Error("[mobservable.isObservable] isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.");
	        else if (value.$mobservable instanceof observableobject_1.ObservableObject) {
	            var o = value.$mobservable;
	            return o.values && !!o.values[property];
	        }
	        return false;
	    }
	    return !!value.$mobservable || value instanceof dnode_2.DataNode;
	}
	exports.isObservable = isObservable;
	function autorun(view, scope) {
	    var _a = getValueModeFromValue(view, ValueMode.Recursive), mode = _a[0], unwrappedView = _a[1];
	    if (typeof unwrappedView !== "function")
	        throw new Error("[mobservable.autorun] expects a function");
	    if (unwrappedView.length !== 0)
	        throw new Error("[mobservable.autorun] expects a function without arguments");
	    var observable = new observableview_1.ObservableView(unwrappedView, scope, {
	        object: scope || view,
	        name: view.name
	    }, mode === ValueMode.Structure);
	    var disposedPrematurely = false;
	    var started = false;
	    dnode_2.runAfterTransaction(function () {
	        if (!disposedPrematurely) {
	            observable.setRefCount(+1);
	            started = true;
	        }
	    });
	    var disposer = utils_1.once(function () {
	        if (started)
	            observable.setRefCount(-1);
	        else
	            disposedPrematurely = true;
	    });
	    disposer.$mobservable = observable;
	    return disposer;
	}
	exports.autorun = autorun;
	function autorunUntil(predicate, effect, scope) {
	    var disposeImmediately = false;
	    var disposer = autorun(function () {
	        if (predicate.call(scope)) {
	            if (disposer)
	                disposer();
	            else
	                disposeImmediately = true;
	            dnode_1.untracked(function () { return effect.call(scope); });
	        }
	    });
	    if (disposeImmediately)
	        disposer();
	    return disposer;
	}
	exports.autorunUntil = autorunUntil;
	function autorunAsyncDeprecated(view, effect, delay, scope) {
	    if (delay === void 0) { delay = 1; }
	    var latestValue = undefined;
	    var timeoutHandle;
	    var disposer = autorun(function () {
	        latestValue = view.call(scope);
	        if (!timeoutHandle) {
	            timeoutHandle = setTimeout(function () {
	                effect.call(scope, latestValue);
	                timeoutHandle = null;
	            }, delay);
	        }
	    });
	    return utils_1.once(function () {
	        disposer();
	        if (timeoutHandle)
	            clearTimeout(timeoutHandle);
	    });
	}
	function autorunAsync(func, delay, scope) {
	    if (delay === void 0) { delay = 1; }
	    if (typeof delay === "function") {
	        console.warn("[mobservable] autorun(func, func) is deprecated and will removed in 2.0");
	        return autorunAsyncDeprecated.apply(null, arguments);
	    }
	    var shouldRun = false;
	    var tickScheduled = false;
	    var tick = observable(0);
	    var observedValues = [];
	    var disposer;
	    var isDisposed = false;
	    function schedule(f) {
	        setTimeout(f, delay);
	    }
	    function doTick() {
	        tickScheduled = false;
	        shouldRun = true;
	        tick(tick() + 1);
	    }
	    disposer = autorun(function () {
	        if (isDisposed)
	            return;
	        tick();
	        if (shouldRun) {
	            func.call(scope);
	            observedValues = disposer.$mobservable.observing;
	            shouldRun = false;
	        }
	        else {
	            observedValues.forEach(function (o) { return o.notifyObserved(); });
	            if (!tickScheduled) {
	                tickScheduled = true;
	                schedule(doTick);
	            }
	        }
	    });
	    return utils_1.once(function () {
	        isDisposed = true;
	        if (disposer)
	            disposer();
	    });
	}
	exports.autorunAsync = autorunAsync;
	function expr(expr, scope) {
	    if (!dnode_1.isComputingView())
	        console.warn("[mobservable.expr] 'expr' should only be used inside other reactive functions.");
	    return observable(expr, scope)();
	}
	exports.expr = expr;
	function extendObservable(target) {
	    var properties = [];
	    for (var _i = 1; _i < arguments.length; _i++) {
	        properties[_i - 1] = arguments[_i];
	    }
	    if (arguments.length < 2)
	        throw new Error("[mobservable.extendObservable] expected 2 or more arguments");
	    if (target instanceof observablemap_1.ObservableMap || properties instanceof observablemap_1.ObservableMap)
	        throw new Error("[mobservable.extendObservable] 'extendObservable' should not be used on maps, use map.merge instead");
	    properties.forEach(function (propSet) {
	        if (!propSet || typeof target !== "object")
	            throw new Error("[mobservable.extendObservable] 'extendObservable' expects one or more objects with properties to define");
	        extendObservableHelper(target, propSet, ValueMode.Recursive, null);
	    });
	    return target;
	}
	exports.extendObservable = extendObservable;
	function observableDecorator(target, key, baseDescriptor) {
	    if (arguments.length < 2 || arguments.length > 3)
	        throw new Error("[mobservable.@observable] A decorator expects 2 or 3 arguments, got: " + arguments.length);
	    var isDecoratingGetter = baseDescriptor && baseDescriptor.hasOwnProperty("get");
	    var descriptor = {};
	    var baseValue = undefined;
	    if (baseDescriptor) {
	        if (baseDescriptor.hasOwnProperty('get'))
	            baseValue = baseDescriptor.get;
	        else if (baseDescriptor.hasOwnProperty('value'))
	            baseValue = baseDescriptor.value;
	        else if (baseDescriptor.initializer) {
	            baseValue = baseDescriptor.initializer();
	            if (typeof baseValue === "function")
	                baseValue = asReference(baseValue);
	        }
	    }
	    if (!target || typeof target !== "object")
	        throw new Error("The @observable decorator can only be used on objects");
	    if (isDecoratingGetter) {
	        if (typeof baseValue !== "function")
	            throw new Error("@observable expects a getter function if used on a property (in member: '" + key + "').");
	        if (descriptor.set)
	            throw new Error("@observable properties cannot have a setter (in member: '" + key + "').");
	        if (baseValue.length !== 0)
	            throw new Error("@observable getter functions should not take arguments (in member: '" + key + "').");
	    }
	    descriptor.configurable = true;
	    descriptor.enumerable = true;
	    descriptor.get = function () {
	        var _this = this;
	        withStrict(false, function () {
	            observableobject_1.ObservableObject.asReactive(_this, null, ValueMode.Recursive).set(key, baseValue);
	        });
	        return this[key];
	    };
	    descriptor.set = isDecoratingGetter
	        ? observableview_1.throwingViewSetter(key)
	        : function (value) {
	            observableobject_1.ObservableObject.asReactive(this, null, ValueMode.Recursive).set(key, typeof value === "function" ? asReference(value) : value);
	        };
	    if (!baseDescriptor) {
	        Object.defineProperty(target, key, descriptor);
	    }
	    else {
	        return descriptor;
	    }
	}
	function toJSON(source, detectCycles, __alreadySeen) {
	    if (detectCycles === void 0) { detectCycles = true; }
	    if (__alreadySeen === void 0) { __alreadySeen = null; }
	    function cache(value) {
	        if (detectCycles)
	            __alreadySeen.push([source, value]);
	        return value;
	    }
	    if (detectCycles && __alreadySeen === null)
	        __alreadySeen = [];
	    if (detectCycles && source !== null && typeof source === "object") {
	        for (var i = 0, l = __alreadySeen.length; i < l; i++)
	            if (__alreadySeen[i][0] === source)
	                return __alreadySeen[i][1];
	    }
	    if (!source)
	        return source;
	    if (Array.isArray(source) || source instanceof observablearray_1.ObservableArray) {
	        var res = cache([]);
	        res.push.apply(res, source.map(function (value) { return toJSON(value, detectCycles, __alreadySeen); }));
	        return res;
	    }
	    if (source instanceof observablemap_1.ObservableMap) {
	        var res = cache({});
	        source.forEach(function (value, key) { return res[key] = toJSON(value, detectCycles, __alreadySeen); });
	        return res;
	    }
	    if (typeof source === "object" && utils_1.isPlainObject(source)) {
	        var res = cache({});
	        for (var key in source)
	            if (source.hasOwnProperty(key))
	                res[key] = toJSON(source[key], detectCycles, __alreadySeen);
	        return res;
	    }
	    if (isObservable(source) && source.$mobservable instanceof observablevalue_1.ObservableValue)
	        return toJSON(source(), detectCycles, __alreadySeen);
	    return source;
	}
	exports.toJSON = toJSON;
	var strict = false;
	function getStrict() {
	    return strict;
	}
	exports.getStrict = getStrict;
	function withStrict(newStrict, func) {
	    var baseStrict = strict;
	    strict = newStrict;
	    try {
	        func();
	    }
	    finally {
	        strict = baseStrict;
	    }
	}
	exports.withStrict = withStrict;
	(function (ValueType) {
	    ValueType[ValueType["Reference"] = 0] = "Reference";
	    ValueType[ValueType["PlainObject"] = 1] = "PlainObject";
	    ValueType[ValueType["ComplexObject"] = 2] = "ComplexObject";
	    ValueType[ValueType["Array"] = 3] = "Array";
	    ValueType[ValueType["ViewFunction"] = 4] = "ViewFunction";
	    ValueType[ValueType["ComplexFunction"] = 5] = "ComplexFunction";
	})(exports.ValueType || (exports.ValueType = {}));
	var ValueType = exports.ValueType;
	(function (ValueMode) {
	    ValueMode[ValueMode["Recursive"] = 0] = "Recursive";
	    ValueMode[ValueMode["Reference"] = 1] = "Reference";
	    ValueMode[ValueMode["Structure"] = 2] = "Structure";
	    ValueMode[ValueMode["Flat"] = 3] = "Flat";
	})(exports.ValueMode || (exports.ValueMode = {}));
	var ValueMode = exports.ValueMode;
	function getTypeOfValue(value) {
	    if (value === null || value === undefined)
	        return ValueType.Reference;
	    if (typeof value === "function")
	        return value.length ? ValueType.ComplexFunction : ValueType.ViewFunction;
	    if (Array.isArray(value) || value instanceof observablearray_1.ObservableArray)
	        return ValueType.Array;
	    if (typeof value == 'object')
	        return utils_1.isPlainObject(value) ? ValueType.PlainObject : ValueType.ComplexObject;
	    return ValueType.Reference;
	}
	exports.getTypeOfValue = getTypeOfValue;
	function extendObservableHelper(target, properties, mode, context) {
	    var meta = observableobject_1.ObservableObject.asReactive(target, context, mode);
	    for (var key in properties)
	        if (properties.hasOwnProperty(key)) {
	            meta.set(key, properties[key]);
	        }
	    return target;
	}
	exports.extendObservableHelper = extendObservableHelper;
	function toGetterSetterFunction(observable) {
	    var f = function (value) {
	        if (arguments.length > 0)
	            observable.set(value);
	        else
	            return observable.get();
	    };
	    f.$mobservable = observable;
	    f.observe = function (listener, fire) {
	        return observable.observe(listener, fire);
	    };
	    f.toString = function () {
	        return observable.toString();
	    };
	    return f;
	}
	exports.toGetterSetterFunction = toGetterSetterFunction;
	var AsReference = (function () {
	    function AsReference(value) {
	        this.value = value;
	        assertUnwrapped(value, "Modifiers are not allowed to be nested");
	    }
	    return AsReference;
	})();
	exports.AsReference = AsReference;
	var AsStructure = (function () {
	    function AsStructure(value) {
	        this.value = value;
	        assertUnwrapped(value, "Modifiers are not allowed to be nested");
	    }
	    return AsStructure;
	})();
	exports.AsStructure = AsStructure;
	var AsFlat = (function () {
	    function AsFlat(value) {
	        this.value = value;
	        assertUnwrapped(value, "Modifiers are not allowed to be nested");
	    }
	    return AsFlat;
	})();
	exports.AsFlat = AsFlat;
	function getValueModeFromValue(value, defaultMode) {
	    if (value instanceof AsReference)
	        return [ValueMode.Reference, value.value];
	    if (value instanceof AsStructure)
	        return [ValueMode.Structure, value.value];
	    if (value instanceof AsFlat)
	        return [ValueMode.Flat, value.value];
	    return [defaultMode, value];
	}
	exports.getValueModeFromValue = getValueModeFromValue;
	function getValueModeFromModifierFunc(func) {
	    if (func === asReference)
	        return ValueMode.Reference;
	    else if (func === asStructure)
	        return ValueMode.Structure;
	    else if (func === asFlat)
	        return ValueMode.Flat;
	    else if (func !== undefined)
	        throw new Error("[mobservable] Cannot determine value mode from function. Please pass in one of these: mobservable.asReference, mobservable.asStructure or mobservable.asFlat, got: " + func);
	    return ValueMode.Recursive;
	}
	exports.getValueModeFromModifierFunc = getValueModeFromModifierFunc;
	function makeChildObservable(value, parentMode, context) {
	    var childMode;
	    if (isObservable(value))
	        return value;
	    switch (parentMode) {
	        case ValueMode.Reference:
	            return value;
	        case ValueMode.Flat:
	            assertUnwrapped(value, "Items inside 'asFlat' canont have modifiers");
	            childMode = ValueMode.Reference;
	            break;
	        case ValueMode.Structure:
	            assertUnwrapped(value, "Items inside 'asStructure' canont have modifiers");
	            childMode = ValueMode.Structure;
	            break;
	        case ValueMode.Recursive:
	            _a = getValueModeFromValue(value, ValueMode.Recursive), childMode = _a[0], value = _a[1];
	            break;
	        default:
	            throw "Illegal State";
	    }
	    if (Array.isArray(value) && Object.isExtensible(value))
	        return observablearray_1.createObservableArray(value, childMode, true, context);
	    if (utils_1.isPlainObject(value) && Object.isExtensible(value))
	        return extendObservableHelper(value, value, childMode, context);
	    return value;
	    var _a;
	}
	exports.makeChildObservable = makeChildObservable;
	function assertUnwrapped(value, message) {
	    if (value instanceof AsReference || value instanceof AsStructure || value instanceof AsFlat)
	        throw new Error("[mobservable] asStructure / asReference / asFlat cannot be used here. " + message);
	}
	exports.assertUnwrapped = assertUnwrapped;
	function isObservableObject(thing) {
	    return thing && typeof thing === "object" && thing.$mobservable instanceof observableobject_1.ObservableObject;
	}
	exports.isObservableObject = isObservableObject;
	function isObservableArray(thing) {
	    return thing instanceof observablearray_1.ObservableArray;
	}
	exports.isObservableArray = isObservableArray;
	function isObservableMap(thing) {
	    return thing instanceof observablemap_1.ObservableMap;
	}
	exports.isObservableMap = isObservableMap;
	function observe(thing, property, listener) {
	    if (arguments.length === 2) {
	        listener = property;
	        property = undefined;
	    }
	    if (typeof thing === "function") {
	        console.error("[mobservable.observe] is deprecated in combination with a function, use 'mobservable.autorun' instead");
	        return autorun(thing);
	    }
	    if (typeof listener !== "function")
	        throw new Error("[mobservable.observe] expected second argument to be a function");
	    if (isObservableArray(thing))
	        return thing.observe(listener);
	    if (isObservableMap(thing)) {
	        if (property) {
	            if (!thing._has(property))
	                throw new Error("[mobservable.observe] the provided observable map has no key with name: " + property);
	            return thing._data[property].observe(listener);
	        }
	        else {
	            return thing.observe(listener);
	        }
	    }
	    if (isObservableObject(thing)) {
	        if (property) {
	            if (!isObservable(thing, property))
	                throw new Error("[mobservable.observe] the provided object has no observable property with name: " + property);
	            return thing.$mobservable.values[property].observe(listener);
	        }
	        return thing.$mobservable.observe(listener);
	    }
	    if (utils_1.isPlainObject(thing))
	        return observable(thing).$mobservable.observe(listener);
	    throw new Error("[mobservable.observe] first argument should be an observable array, observable map, observable object or plain object.");
	}
	exports.observe = observe;


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	if (global.__mobservableTrackingStack)
	    throw new Error("[mobservable] An incompatible version of mobservable is already loaded.");
	global.__mobservableViewStack = [];
	var inTransaction = 0;
	var changedValues = [];
	var afterTransactionItems = [];
	var mobservableId = 0;
	function checkIfStateIsBeingModifiedDuringView(context) {
	    if (core_1.getStrict() === true && isComputingView()) {
	        var ts = global.__mobservableViewStack;
	        throw new Error("[mobservable] It is not allowed to change the state during the computation of a reactive view. Should the data you are trying to modify actually be a view? \nUse 'mobservable.extras.withStrict(false, block)' to allow changes to be made inside views (unrecommended).\nView name: " + context.name + ".\nCurrent stack size is " + ts.length + ", active view: \"" + ts[ts.length - 1].toString() + "\".");
	    }
	}
	exports.checkIfStateIsBeingModifiedDuringView = checkIfStateIsBeingModifiedDuringView;
	function transaction(action, thisArg) {
	    inTransaction += 1;
	    try {
	        return action.call(thisArg);
	    }
	    finally {
	        if (--inTransaction === 0) {
	            var values = changedValues.splice(0);
	            for (var i = 0, l = values.length; i < l; i++)
	                values[i].markReady(true);
	            var actions = afterTransactionItems.splice(0);
	            for (var i = 0, l = actions.length; i < l; i++)
	                actions[i]();
	        }
	    }
	}
	exports.transaction = transaction;
	function runAfterTransaction(action) {
	    if (inTransaction === 0)
	        action();
	    else
	        afterTransactionItems.push(action);
	}
	exports.runAfterTransaction = runAfterTransaction;
	function isInTransaction() {
	    return inTransaction > 0;
	}
	exports.isInTransaction = isInTransaction;
	function untracked(action) {
	    try {
	        var dnode = new ViewNode({ object: null, name: "untracked" });
	        global.__mobservableViewStack.push(dnode);
	        return action();
	    }
	    finally {
	        global.__mobservableViewStack.pop();
	    }
	}
	exports.untracked = untracked;
	(function (NodeState) {
	    NodeState[NodeState["STALE"] = 0] = "STALE";
	    NodeState[NodeState["PENDING"] = 1] = "PENDING";
	    NodeState[NodeState["READY"] = 2] = "READY";
	})(exports.NodeState || (exports.NodeState = {}));
	var NodeState = exports.NodeState;
	;
	var DataNode = (function () {
	    function DataNode(context) {
	        this.id = ++mobservableId;
	        this.state = NodeState.READY;
	        this.observers = [];
	        this.isDisposed = false;
	        this.externalRefenceCount = 0;
	        if (!context)
	            context = { name: undefined, object: undefined };
	        if (!context.name)
	            context.name = "[m#" + this.id + "]";
	        this.context = context;
	    }
	    DataNode.prototype.setRefCount = function (delta) {
	        this.externalRefenceCount += delta;
	    };
	    DataNode.prototype.addObserver = function (node) {
	        this.observers[this.observers.length] = node;
	    };
	    DataNode.prototype.removeObserver = function (node) {
	        var obs = this.observers, idx = obs.indexOf(node);
	        if (idx !== -1)
	            obs.splice(idx, 1);
	    };
	    DataNode.prototype.markStale = function () {
	        this.state = NodeState.STALE;
	        if (extras_1.transitionTracker)
	            extras_1.reportTransition(this, "STALE");
	        this.notifyObservers();
	    };
	    DataNode.prototype.markReady = function (stateDidActuallyChange) {
	        if (inTransaction > 0) {
	            changedValues.push(this);
	            return;
	        }
	        this.state = NodeState.READY;
	        if (extras_1.transitionTracker)
	            extras_1.reportTransition(this, "READY", true, this["_value"]);
	        this.notifyObservers(stateDidActuallyChange);
	    };
	    DataNode.prototype.notifyObservers = function (stateDidActuallyChange) {
	        if (stateDidActuallyChange === void 0) { stateDidActuallyChange = false; }
	        var os = this.observers.slice();
	        for (var l = os.length, i = 0; i < l; i++)
	            os[i].notifyStateChange(this, stateDidActuallyChange);
	    };
	    DataNode.prototype.notifyObserved = function () {
	        var ts = global.__mobservableViewStack, l = ts.length;
	        if (l > 0) {
	            var deps = ts[l - 1].observing, depslength = deps.length;
	            if (deps[depslength - 1] !== this && deps[depslength - 2] !== this)
	                deps[depslength] = this;
	        }
	    };
	    DataNode.prototype.dispose = function () {
	        if (this.observers.length)
	            throw new Error("[mobservable] Cannot dispose DNode; it is still being observed");
	        this.isDisposed = true;
	    };
	    DataNode.prototype.toString = function () {
	        return "DNode[" + this.context.name + ", state: " + this.state + ", observers: " + this.observers.length + "]";
	    };
	    return DataNode;
	})();
	exports.DataNode = DataNode;
	var ViewNode = (function (_super) {
	    __extends(ViewNode, _super);
	    function ViewNode() {
	        _super.apply(this, arguments);
	        this.isSleeping = true;
	        this.hasCycle = false;
	        this.observing = [];
	        this.prevObserving = null;
	        this.dependencyChangeCount = 0;
	        this.dependencyStaleCount = 0;
	        this.onSleepEmitter = null;
	    }
	    ViewNode.prototype.setRefCount = function (delta) {
	        var rc = this.externalRefenceCount += delta;
	        if (rc === 0)
	            this.tryToSleep();
	        else if (rc === delta)
	            this.wakeUp();
	    };
	    ViewNode.prototype.removeObserver = function (node) {
	        _super.prototype.removeObserver.call(this, node);
	        this.tryToSleep();
	    };
	    ViewNode.prototype.tryToSleep = function () {
	        if (!this.isSleeping && this.observers.length === 0 && this.externalRefenceCount === 0) {
	            for (var i = 0, l = this.observing.length; i < l; i++)
	                this.observing[i].removeObserver(this);
	            this.observing = [];
	            this.isSleeping = true;
	            if (this.onSleepEmitter !== null)
	                this.onSleepEmitter.emit(this._value);
	        }
	    };
	    ViewNode.prototype.wakeUp = function () {
	        if (this.isSleeping) {
	            this.isSleeping = false;
	            this.state = NodeState.PENDING;
	            this.computeNextState();
	        }
	    };
	    ViewNode.prototype.notifyStateChange = function (observable, stateDidActuallyChange) {
	        if (observable.state === NodeState.STALE) {
	            if (++this.dependencyStaleCount === 1)
	                this.markStale();
	        }
	        else {
	            if (stateDidActuallyChange)
	                this.dependencyChangeCount += 1;
	            if (this.dependencyStaleCount > 0 && --this.dependencyStaleCount === 0) {
	                this.state = NodeState.PENDING;
	                if (this.dependencyChangeCount > 0)
	                    this.computeNextState();
	                else
	                    this.markReady(false);
	                this.dependencyChangeCount = 0;
	            }
	        }
	    };
	    ViewNode.prototype.computeNextState = function () {
	        var _this = this;
	        this.trackDependencies();
	        if (extras_1.transitionTracker)
	            extras_1.reportTransition(this, "PENDING");
	        var hasError = true;
	        try {
	            var stateDidChange;
	            core_1.withStrict(this.externalRefenceCount === 0, function () {
	                stateDidChange = _this.compute();
	            });
	            hasError = false;
	        }
	        finally {
	            if (hasError)
	                console.error("[mobservable.view '" + this.context.name + "'] There was an uncaught error during the computation of " + this.toString());
	            this.isComputing = false;
	            this.bindDependencies();
	            this.markReady(stateDidChange);
	        }
	    };
	    ViewNode.prototype.compute = function () {
	        throw "Abstract!";
	    };
	    ViewNode.prototype.trackDependencies = function () {
	        this.prevObserving = this.observing;
	        this.observing = [];
	        global.__mobservableViewStack[global.__mobservableViewStack.length] = this;
	    };
	    ViewNode.prototype.bindDependencies = function () {
	        global.__mobservableViewStack.length -= 1;
	        var _a = utils_1.quickDiff(this.observing, this.prevObserving), added = _a[0], removed = _a[1];
	        this.prevObserving = null;
	        this.hasCycle = false;
	        for (var i = 0, l = added.length; i < l; i++) {
	            var dependency = added[i];
	            if (dependency instanceof ViewNode && dependency.findCycle(this)) {
	                this.hasCycle = true;
	                this.observing.splice(this.observing.indexOf(added[i]), 1);
	                dependency.hasCycle = true;
	            }
	            else {
	                added[i].addObserver(this);
	            }
	        }
	        for (var i = 0, l = removed.length; i < l; i++)
	            removed[i].removeObserver(this);
	    };
	    ViewNode.prototype.findCycle = function (node) {
	        var obs = this.observing;
	        if (obs.indexOf(node) !== -1)
	            return true;
	        for (var l = obs.length, i = 0; i < l; i++)
	            if (obs[i] instanceof ViewNode && obs[i].findCycle(node))
	                return true;
	        return false;
	    };
	    ViewNode.prototype.onceSleep = function (onSleep) {
	        if (this.onSleepEmitter === null)
	            this.onSleepEmitter = new simpleeventemitter_1.default();
	        this.onSleepEmitter.once(onSleep);
	    };
	    ViewNode.prototype.dispose = function () {
	        if (this.observing)
	            for (var l = this.observing.length, i = 0; i < l; i++)
	                this.observing[i].removeObserver(this);
	        this.observing = null;
	        _super.prototype.dispose.call(this);
	    };
	    return ViewNode;
	})(DataNode);
	exports.ViewNode = ViewNode;
	function stackDepth() {
	    return global.__mobservableViewStack.length;
	}
	exports.stackDepth = stackDepth;
	function isComputingView() {
	    return global.__mobservableViewStack.length > 0;
	}
	exports.isComputingView = isComputingView;
	var core_1 = __webpack_require__(32);
	var extras_1 = __webpack_require__(34);
	var utils_1 = __webpack_require__(38);
	var simpleeventemitter_1 = __webpack_require__(37);
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	var dnode_1 = __webpack_require__(33);
	var observableobject_1 = __webpack_require__(35);
	var observablemap_1 = __webpack_require__(41);
	var simpleeventemitter_1 = __webpack_require__(37);
	var utils_1 = __webpack_require__(38);
	var core_1 = __webpack_require__(32);
	function getDNode(thing, property) {
	    var propError = "[mobservable.getDNode] property '" + property + "' of '" + thing + "' doesn't seem to be a reactive property";
	    if (thing instanceof observablemap_1.ObservableMap && property) {
	        var dnode = thing._data[property];
	        if (!dnode)
	            throw new Error(propError);
	        return dnode;
	    }
	    if (!core_1.isObservable(thing, property)) {
	        if (property)
	            throw new Error(propError);
	        throw new Error("[mobservable.getDNode] " + thing + " doesn't seem to be reactive");
	    }
	    if (property !== undefined) {
	        if (thing.$mobservable instanceof observableobject_1.ObservableObject)
	            return thing.$mobservable.values[property];
	        throw new Error(propError);
	    }
	    if (thing instanceof dnode_1.DataNode)
	        return thing;
	    if (thing.$mobservable) {
	        if (thing.$mobservable instanceof observableobject_1.ObservableObject || thing instanceof observablemap_1.ObservableMap)
	            throw new Error("[mobservable.getDNode] missing properties parameter. Please specify a property of '" + thing + "'.");
	        return thing.$mobservable;
	    }
	    throw new Error("[mobservable.getDNode] " + thing + " doesn't seem to be reactive");
	}
	exports.getDNode = getDNode;
	function reportTransition(node, state, changed, newValue) {
	    if (changed === void 0) { changed = false; }
	    if (newValue === void 0) { newValue = null; }
	    exports.transitionTracker.emit({
	        id: node.id,
	        name: node.context.name,
	        context: node.context.object,
	        state: state,
	        changed: changed,
	        newValue: newValue
	    });
	}
	exports.reportTransition = reportTransition;
	exports.transitionTracker = null;
	function getDependencyTree(thing, property) {
	    return nodeToDependencyTree(getDNode(thing, property));
	}
	exports.getDependencyTree = getDependencyTree;
	function nodeToDependencyTree(node) {
	    var result = {
	        id: node.id,
	        name: node.context.name,
	        context: node.context.object || null
	    };
	    if (node instanceof dnode_1.ViewNode && node.observing.length)
	        result.dependencies = utils_1.unique(node.observing).map(nodeToDependencyTree);
	    return result;
	}
	function getObserverTree(thing, property) {
	    return nodeToObserverTree(getDNode(thing, property));
	}
	exports.getObserverTree = getObserverTree;
	function nodeToObserverTree(node) {
	    var result = {
	        id: node.id,
	        name: node.context.name,
	        context: node.context.object || null
	    };
	    if (node.observers.length)
	        result.observers = utils_1.unique(node.observers).map(nodeToObserverTree);
	    if (node.externalRefenceCount > 0)
	        result.listeners = node.externalRefenceCount;
	    return result;
	}
	function createConsoleReporter(extensive) {
	    var lines = [];
	    var scheduled = false;
	    return function (line) {
	        if (extensive || line.changed)
	            lines.push(line);
	        if (!scheduled) {
	            scheduled = true;
	            setTimeout(function () {
	                console[console["table"] ? "table" : "dir"](lines);
	                lines = [];
	                scheduled = false;
	            }, 1);
	        }
	    };
	}
	function trackTransitions(extensive, onReport) {
	    if (extensive === void 0) { extensive = false; }
	    if (!exports.transitionTracker)
	        exports.transitionTracker = new simpleeventemitter_1.default();
	    var reporter = onReport
	        ? function (line) {
	            if (extensive || line.changed)
	                onReport(line);
	        }
	        : createConsoleReporter(extensive);
	    var disposer = exports.transitionTracker.on(reporter);
	    return utils_1.once(function () {
	        disposer();
	        if (exports.transitionTracker.listeners.length === 0)
	            exports.transitionTracker = null;
	    });
	}
	exports.trackTransitions = trackTransitions;


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	var core_1 = __webpack_require__(32);
	var observableview_1 = __webpack_require__(36);
	var observablevalue_1 = __webpack_require__(40);
	var simpleeventemitter_1 = __webpack_require__(37);
	var ObservableObject = (function () {
	    function ObservableObject(target, context, mode) {
	        this.target = target;
	        this.context = context;
	        this.mode = mode;
	        this.values = {};
	        this._events = new simpleeventemitter_1.default();
	        if (target.$mobservable)
	            throw new Error("Illegal state: already an reactive object");
	        if (!context) {
	            this.context = {
	                object: target,
	                name: ""
	            };
	        }
	        else if (!context.object) {
	            context.object = target;
	        }
	        Object.defineProperty(target, "$mobservable", {
	            enumerable: false,
	            configurable: false,
	            value: this
	        });
	    }
	    ObservableObject.asReactive = function (target, context, mode) {
	        if (target.$mobservable)
	            return target.$mobservable;
	        return new ObservableObject(target, context, mode);
	    };
	    ObservableObject.prototype.set = function (propName, value) {
	        if (this.values[propName])
	            this.target[propName] = value;
	        else
	            this.defineReactiveProperty(propName, value);
	    };
	    ObservableObject.prototype.defineReactiveProperty = function (propName, value) {
	        var observable;
	        var context = {
	            object: this.context.object,
	            name: (this.context.name || "") + "." + propName
	        };
	        if (typeof value === "function" && value.length === 0)
	            observable = new observableview_1.ObservableView(value, this.target, context, false);
	        else if (value instanceof core_1.AsStructure && typeof value.value === "function" && value.value.length === 0)
	            observable = new observableview_1.ObservableView(value.value, this.target, context, true);
	        else
	            observable = new observablevalue_1.ObservableValue(value, this.mode, context);
	        this.values[propName] = observable;
	        Object.defineProperty(this.target, propName, {
	            configurable: true,
	            enumerable: observable instanceof observablevalue_1.ObservableValue,
	            get: function () {
	                return this.$mobservable ? this.$mobservable.values[propName].get() : undefined;
	            },
	            set: function (newValue) {
	                var oldValue = this.$mobservable.values[propName].get();
	                this.$mobservable.values[propName].set(newValue);
	                this.$mobservable._events.emit({
	                    type: "update",
	                    object: this,
	                    name: propName,
	                    oldValue: oldValue
	                });
	            }
	        });
	        this._events.emit({
	            type: "add",
	            object: this.target,
	            name: propName
	        });
	    };
	    ObservableObject.prototype.observe = function (callback) {
	        return this._events.on(callback);
	    };
	    return ObservableObject;
	})();
	exports.ObservableObject = ObservableObject;


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var dnode_1 = __webpack_require__(33);
	var simpleeventemitter_1 = __webpack_require__(37);
	var utils_1 = __webpack_require__(38);
	function throwingViewSetter(name) {
	    return function () {
	        throw new Error("[mobservable.view '" + name + "'] View functions do not accept new values");
	    };
	}
	exports.throwingViewSetter = throwingViewSetter;
	var ObservableView = (function (_super) {
	    __extends(ObservableView, _super);
	    function ObservableView(func, scope, context, compareStructural) {
	        _super.call(this, context);
	        this.func = func;
	        this.scope = scope;
	        this.compareStructural = compareStructural;
	        this.isComputing = false;
	        this.changeEvent = new simpleeventemitter_1.default();
	    }
	    ObservableView.prototype.get = function () {
	        if (this.isComputing)
	            throw new Error("[mobservable.view '" + this.context.name + "'] Cycle detected");
	        if (this.state === dnode_1.NodeState.STALE && dnode_1.isInTransaction()) {
	            return this.func.call(this.scope);
	        }
	        if (this.isSleeping) {
	            if (dnode_1.isComputingView()) {
	                this.wakeUp();
	                this.notifyObserved();
	            }
	            else {
	                this.wakeUp();
	                this.tryToSleep();
	            }
	        }
	        else {
	            this.notifyObserved();
	        }
	        if (this.hasCycle)
	            throw new Error("[mobservable.view '" + this.context.name + "'] Cycle detected");
	        return this._value;
	    };
	    ObservableView.prototype.set = function (x) {
	        throwingViewSetter(this.context.name)();
	    };
	    ObservableView.prototype.compute = function () {
	        if (this.isComputing)
	            throw new Error("[mobservable.view '" + this.context.name + "'] Cycle detected");
	        this.isComputing = true;
	        var newValue = this.func.call(this.scope);
	        this.isComputing = false;
	        var changed = this.compareStructural ? !utils_1.deepEquals(newValue, this._value) : newValue !== this._value;
	        if (changed) {
	            var oldValue = this._value;
	            this._value = newValue;
	            this.changeEvent.emit(newValue, oldValue);
	            return true;
	        }
	        return false;
	    };
	    ObservableView.prototype.observe = function (listener, fireImmediately) {
	        var _this = this;
	        if (fireImmediately === void 0) { fireImmediately = false; }
	        this.setRefCount(+1);
	        if (fireImmediately)
	            listener(this.get(), undefined);
	        var disposer = this.changeEvent.on(listener);
	        return utils_1.once(function () {
	            _this.setRefCount(-1);
	            disposer();
	        });
	    };
	    ObservableView.prototype.toString = function () {
	        return "ComputedObservable[" + this.context.name + " (current value:'" + this._value + "')] " + this.func.toString();
	    };
	    return ObservableView;
	})(dnode_1.ViewNode);
	exports.ObservableView = ObservableView;


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	var utils_1 = __webpack_require__(38);
	var SimpleEventEmitter = (function () {
	    function SimpleEventEmitter() {
	        this.listeners = [];
	    }
	    SimpleEventEmitter.prototype.emit = function () {
	        var listeners = this.listeners.slice();
	        var l = listeners.length;
	        switch (arguments.length) {
	            case 0:
	                for (var i = 0; i < l; i++)
	                    listeners[i]();
	                break;
	            case 1:
	                var data = arguments[0];
	                for (var i = 0; i < l; i++)
	                    listeners[i](data);
	                break;
	            default:
	                for (var i = 0; i < l; i++)
	                    listeners[i].apply(null, arguments);
	        }
	    };
	    SimpleEventEmitter.prototype.on = function (listener) {
	        var _this = this;
	        this.listeners.push(listener);
	        return utils_1.once(function () {
	            var idx = _this.listeners.indexOf(listener);
	            if (idx !== -1)
	                _this.listeners.splice(idx, 1);
	        });
	    };
	    SimpleEventEmitter.prototype.once = function (listener) {
	        var subscription = this.on(function () {
	            subscription();
	            listener.apply(this, arguments);
	        });
	        return subscription;
	    };
	    return SimpleEventEmitter;
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = SimpleEventEmitter;


/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	function once(func) {
	    var invoked = false;
	    return function () {
	        if (invoked)
	            return;
	        invoked = true;
	        return func.apply(this, arguments);
	    };
	}
	exports.once = once;
	function unique(list) {
	    var res = [];
	    list.forEach(function (item) {
	        if (res.indexOf(item) === -1)
	            res.push(item);
	    });
	    return res;
	}
	exports.unique = unique;
	function isPlainObject(value) {
	    return value !== null && typeof value == 'object' && Object.getPrototypeOf(value) === Object.prototype;
	}
	exports.isPlainObject = isPlainObject;
	function makeNonEnumerable(object, props) {
	    for (var i = 0; i < props.length; i++) {
	        Object.defineProperty(object, props[i], {
	            configurable: true,
	            writable: true,
	            enumerable: false,
	            value: object[props[i]]
	        });
	    }
	}
	exports.makeNonEnumerable = makeNonEnumerable;
	function deepEquals(a, b) {
	    if (a === null && b === null)
	        return true;
	    if (a === undefined && b === undefined)
	        return true;
	    var aIsArray = Array.isArray(a) || a instanceof observablearray_1.ObservableArray;
	    if (aIsArray !== (Array.isArray(b) || b instanceof observablearray_1.ObservableArray)) {
	        return false;
	    }
	    else if (aIsArray) {
	        if (a.length !== b.length)
	            return false;
	        for (var i = a.length; i >= 0; i--)
	            if (!deepEquals(a[i], b[i]))
	                return false;
	        return true;
	    }
	    else if (typeof a === "object" && typeof b === "object") {
	        if (a === null || b === null)
	            return false;
	        if (Object.keys(a).length !== Object.keys(b).length)
	            return false;
	        for (var prop in a) {
	            if (!b.hasOwnProperty(prop))
	                return false;
	            if (!deepEquals(a[prop], b[prop]))
	                return false;
	        }
	        return true;
	    }
	    return a === b;
	}
	exports.deepEquals = deepEquals;
	function quickDiff(current, base) {
	    if (!base || !base.length)
	        return [current, []];
	    if (!current || !current.length)
	        return [[], base];
	    var added = [];
	    var removed = [];
	    var currentIndex = 0, currentSearch = 0, currentLength = current.length, currentExhausted = false, baseIndex = 0, baseSearch = 0, baseLength = base.length, isSearching = false, baseExhausted = false;
	    while (!baseExhausted && !currentExhausted) {
	        if (!isSearching) {
	            if (currentIndex < currentLength && baseIndex < baseLength && current[currentIndex] === base[baseIndex]) {
	                currentIndex++;
	                baseIndex++;
	                if (currentIndex === currentLength && baseIndex === baseLength)
	                    return [added, removed];
	                continue;
	            }
	            currentSearch = currentIndex;
	            baseSearch = baseIndex;
	            isSearching = true;
	        }
	        baseSearch += 1;
	        currentSearch += 1;
	        if (baseSearch >= baseLength)
	            baseExhausted = true;
	        if (currentSearch >= currentLength)
	            currentExhausted = true;
	        if (!currentExhausted && current[currentSearch] === base[baseIndex]) {
	            added.push.apply(added, current.slice(currentIndex, currentSearch));
	            currentIndex = currentSearch + 1;
	            baseIndex++;
	            isSearching = false;
	        }
	        else if (!baseExhausted && base[baseSearch] === current[currentIndex]) {
	            removed.push.apply(removed, base.slice(baseIndex, baseSearch));
	            baseIndex = baseSearch + 1;
	            currentIndex++;
	            isSearching = false;
	        }
	    }
	    added.push.apply(added, current.slice(currentIndex));
	    removed.push.apply(removed, base.slice(baseIndex));
	    return [added, removed];
	}
	exports.quickDiff = quickDiff;
	var observablearray_1 = __webpack_require__(39);


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var utils_1 = __webpack_require__(38);
	var dnode_1 = __webpack_require__(33);
	var simpleeventemitter_1 = __webpack_require__(37);
	var core_1 = __webpack_require__(32);
	var StubArray = (function () {
	    function StubArray() {
	    }
	    return StubArray;
	})();
	exports.StubArray = StubArray;
	StubArray.prototype = [];
	var ObservableArrayAdministration = (function (_super) {
	    __extends(ObservableArrayAdministration, _super);
	    function ObservableArrayAdministration(array, mode, supportEnumerable, context) {
	        _super.call(this, context ? context : { name: undefined, object: undefined });
	        this.array = array;
	        this.mode = mode;
	        this.supportEnumerable = supportEnumerable;
	        this.lastKnownLength = 0;
	        if (!this.context.object)
	            this.context.object = array;
	    }
	    ObservableArrayAdministration.prototype.getLength = function () {
	        this.notifyObserved();
	        return this.values.length;
	    };
	    ObservableArrayAdministration.prototype.setLength = function (newLength) {
	        if (typeof newLength !== "number" || newLength < 0)
	            throw new Error("[mobservable.array] Out of range: " + newLength);
	        var currentLength = this.values.length;
	        if (newLength === currentLength)
	            return;
	        else if (newLength > currentLength)
	            this.spliceWithArray(currentLength, 0, new Array(newLength - currentLength));
	        else
	            this.spliceWithArray(newLength, currentLength - newLength);
	    };
	    ObservableArrayAdministration.prototype.updateLength = function (oldLength, delta) {
	        if (oldLength !== this.lastKnownLength)
	            throw new Error("[mobservable] Modification exception: the internal structure of an observable array was changed. Did you use peek() to change it?");
	        this.lastKnownLength += delta;
	        if (delta < 0) {
	            dnode_1.checkIfStateIsBeingModifiedDuringView(this.context);
	            if (this.supportEnumerable)
	                for (var i = oldLength + delta; i < oldLength; i++)
	                    delete this.array[i];
	        }
	        else if (delta > 0) {
	            dnode_1.checkIfStateIsBeingModifiedDuringView(this.context);
	            if (oldLength + delta > OBSERVABLE_ARRAY_BUFFER_SIZE)
	                reserveArrayBuffer(oldLength + delta);
	            if (this.supportEnumerable)
	                for (var i = oldLength, end = oldLength + delta; i < end; i++)
	                    Object.defineProperty(this.array, i, ENUMERABLE_PROPS[i]);
	        }
	    };
	    ObservableArrayAdministration.prototype.spliceWithArray = function (index, deleteCount, newItems) {
	        var _this = this;
	        var length = this.values.length;
	        if ((newItems === undefined || newItems.length === 0) && (deleteCount === 0 || length === 0))
	            return [];
	        if (index === undefined)
	            index = 0;
	        else if (index > length)
	            index = length;
	        else if (index < 0)
	            index = Math.max(0, length + index);
	        if (arguments.length === 1)
	            deleteCount = length - index;
	        else if (deleteCount === undefined || deleteCount === null)
	            deleteCount = 0;
	        else
	            deleteCount = Math.max(0, Math.min(deleteCount, length - index));
	        if (newItems === undefined)
	            newItems = [];
	        else
	            newItems = newItems.map(function (value) { return _this.makeReactiveArrayItem(value); });
	        var lengthDelta = newItems.length - deleteCount;
	        this.updateLength(length, lengthDelta);
	        var res = (_a = this.values).splice.apply(_a, [index, deleteCount].concat(newItems));
	        this.notifySplice(index, res, newItems);
	        return res;
	        var _a;
	    };
	    ObservableArrayAdministration.prototype.makeReactiveArrayItem = function (value) {
	        core_1.assertUnwrapped(value, "Array values cannot have modifiers");
	        if (this.mode === core_1.ValueMode.Flat || this.mode === core_1.ValueMode.Reference)
	            return value;
	        return core_1.makeChildObservable(value, this.mode, {
	            object: this.context.object,
	            name: this.context.name + "[x]"
	        });
	    };
	    ObservableArrayAdministration.prototype.notifyChildUpdate = function (index, oldValue) {
	        this.notifyChanged();
	        if (this.changeEvent)
	            this.changeEvent.emit({ object: this.array, type: 'update', index: index, oldValue: oldValue });
	    };
	    ObservableArrayAdministration.prototype.notifySplice = function (index, deleted, added) {
	        if (deleted.length === 0 && added.length === 0)
	            return;
	        this.notifyChanged();
	        if (this.changeEvent)
	            this.changeEvent.emit({ object: this.array, type: 'splice', index: index, addedCount: added.length, removed: deleted });
	    };
	    ObservableArrayAdministration.prototype.notifyChanged = function () {
	        this.markStale();
	        this.markReady(true);
	    };
	    return ObservableArrayAdministration;
	})(dnode_1.DataNode);
	exports.ObservableArrayAdministration = ObservableArrayAdministration;
	function createObservableArray(initialValues, mode, supportEnumerable, context) {
	    return new ObservableArray(initialValues, mode, supportEnumerable, context);
	}
	exports.createObservableArray = createObservableArray;
	var ObservableArray = (function (_super) {
	    __extends(ObservableArray, _super);
	    function ObservableArray(initialValues, mode, supportEnumerable, context) {
	        _super.call(this);
	        var adm = new ObservableArrayAdministration(this, mode, supportEnumerable, context);
	        Object.defineProperty(this, "$mobservable", {
	            enumerable: false,
	            configurable: false,
	            value: adm
	        });
	        if (initialValues && initialValues.length) {
	            adm.updateLength(0, initialValues.length);
	            adm.values = initialValues.map(function (v) { return adm.makeReactiveArrayItem(v); });
	        }
	        else
	            adm.values = [];
	    }
	    ObservableArray.prototype.observe = function (listener, fireImmediately) {
	        if (fireImmediately === void 0) { fireImmediately = false; }
	        if (this.$mobservable.changeEvent === undefined)
	            this.$mobservable.changeEvent = new simpleeventemitter_1.default();
	        if (fireImmediately)
	            listener({ object: this, type: 'splice', index: 0, addedCount: this.$mobservable.values.length, removed: [] });
	        return this.$mobservable.changeEvent.on(listener);
	    };
	    ObservableArray.prototype.clear = function () {
	        return this.splice(0);
	    };
	    ObservableArray.prototype.replace = function (newItems) {
	        return this.$mobservable.spliceWithArray(0, this.$mobservable.values.length, newItems);
	    };
	    ObservableArray.prototype.toJSON = function () {
	        this.$mobservable.notifyObserved();
	        return this.$mobservable.values.slice();
	    };
	    ObservableArray.prototype.peek = function () {
	        this.$mobservable.notifyObserved();
	        return this.$mobservable.values;
	    };
	    ObservableArray.prototype.find = function (predicate, thisArg, fromIndex) {
	        if (fromIndex === void 0) { fromIndex = 0; }
	        this.$mobservable.notifyObserved();
	        var items = this.$mobservable.values, l = items.length;
	        for (var i = fromIndex; i < l; i++)
	            if (predicate.call(thisArg, items[i], i, this))
	                return items[i];
	        return null;
	    };
	    ObservableArray.prototype.splice = function (index, deleteCount) {
	        var newItems = [];
	        for (var _i = 2; _i < arguments.length; _i++) {
	            newItems[_i - 2] = arguments[_i];
	        }
	        switch (arguments.length) {
	            case 0:
	                return [];
	            case 1:
	                return this.$mobservable.spliceWithArray(index);
	            case 2:
	                return this.$mobservable.spliceWithArray(index, deleteCount);
	        }
	        return this.$mobservable.spliceWithArray(index, deleteCount, newItems);
	    };
	    ObservableArray.prototype.push = function () {
	        var items = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            items[_i - 0] = arguments[_i];
	        }
	        this.$mobservable.spliceWithArray(this.$mobservable.values.length, 0, items);
	        return this.$mobservable.values.length;
	    };
	    ObservableArray.prototype.pop = function () {
	        return this.splice(Math.max(this.$mobservable.values.length - 1, 0), 1)[0];
	    };
	    ObservableArray.prototype.shift = function () {
	        return this.splice(0, 1)[0];
	    };
	    ObservableArray.prototype.unshift = function () {
	        var items = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            items[_i - 0] = arguments[_i];
	        }
	        this.$mobservable.spliceWithArray(0, 0, items);
	        return this.$mobservable.values.length;
	    };
	    ObservableArray.prototype.reverse = function () {
	        this.$mobservable.notifyObserved();
	        var clone = this.slice();
	        return clone.reverse.apply(clone, arguments);
	    };
	    ObservableArray.prototype.sort = function (compareFn) {
	        this.$mobservable.notifyObserved();
	        var clone = this.slice();
	        return clone.sort.apply(clone, arguments);
	    };
	    ObservableArray.prototype.remove = function (value) {
	        var idx = this.$mobservable.values.indexOf(value);
	        if (idx > -1) {
	            this.splice(idx, 1);
	            return true;
	        }
	        return false;
	    };
	    ObservableArray.prototype.toString = function () {
	        return "[mobservable.array] " + Array.prototype.toString.apply(this.$mobservable.values, arguments);
	    };
	    ObservableArray.prototype.toLocaleString = function () {
	        return "[mobservable.array] " + Array.prototype.toLocaleString.apply(this.$mobservable.values, arguments);
	    };
	    return ObservableArray;
	})(StubArray);
	exports.ObservableArray = ObservableArray;
	utils_1.makeNonEnumerable(ObservableArray.prototype, [
	    "constructor",
	    "clear",
	    "find",
	    "observe",
	    "pop",
	    "peek",
	    "push",
	    "remove",
	    "replace",
	    "reverse",
	    "shift",
	    "sort",
	    "splice",
	    "split",
	    "toJSON",
	    "toLocaleString",
	    "toString",
	    "unshift"
	]);
	Object.defineProperty(ObservableArray.prototype, "length", {
	    enumerable: false,
	    configurable: true,
	    get: function () {
	        return this.$mobservable.getLength();
	    },
	    set: function (newLength) {
	        this.$mobservable.setLength(newLength);
	    }
	});
	[
	    "concat",
	    "every",
	    "filter",
	    "forEach",
	    "indexOf",
	    "join",
	    "lastIndexOf",
	    "map",
	    "reduce",
	    "reduceRight",
	    "slice",
	    "some",
	].forEach(function (funcName) {
	    var baseFunc = Array.prototype[funcName];
	    Object.defineProperty(ObservableArray.prototype, funcName, {
	        configurable: false,
	        writable: true,
	        enumerable: false,
	        value: function () {
	            this.$mobservable.notifyObserved();
	            return baseFunc.apply(this.$mobservable.values, arguments);
	        }
	    });
	});
	var OBSERVABLE_ARRAY_BUFFER_SIZE = 0;
	var ENUMERABLE_PROPS = [];
	function createArrayBufferItem(index) {
	    var prop = ENUMERABLE_PROPS[index] = {
	        enumerable: true,
	        configurable: true,
	        set: function (value) {
	            var impl = this.$mobservable;
	            var values = impl.values;
	            core_1.assertUnwrapped(value, "Modifiers cannot be used on array values. For non-reactive array values use makeReactive(asFlat(array)).");
	            if (index < values.length) {
	                dnode_1.checkIfStateIsBeingModifiedDuringView(impl.context);
	                var oldValue = values[index];
	                var changed = impl.mode === core_1.ValueMode.Structure ? !utils_1.deepEquals(oldValue, value) : oldValue !== value;
	                if (changed) {
	                    values[index] = impl.makeReactiveArrayItem(value);
	                    impl.notifyChildUpdate(index, oldValue);
	                }
	            }
	            else if (index === values.length)
	                this.push(impl.makeReactiveArrayItem(value));
	            else
	                throw new Error("[mobservable.array] Index out of bounds, " + index + " is larger than " + values.length);
	        },
	        get: function () {
	            var impl = this.$mobservable;
	            if (impl && index < impl.values.length) {
	                impl.notifyObserved();
	                return impl.values[index];
	            }
	            return undefined;
	        }
	    };
	    Object.defineProperty(ObservableArray.prototype, "" + index, {
	        enumerable: false,
	        configurable: true,
	        get: prop.get,
	        set: prop.set
	    });
	}
	function reserveArrayBuffer(max) {
	    for (var index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max; index++)
	        createArrayBufferItem(index);
	    OBSERVABLE_ARRAY_BUFFER_SIZE = max;
	}
	reserveArrayBuffer(1000);


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var dnode_1 = __webpack_require__(33);
	var simpleeventemitter_1 = __webpack_require__(37);
	var core_1 = __webpack_require__(32);
	var utils_1 = __webpack_require__(38);
	var ObservableValue = (function (_super) {
	    __extends(ObservableValue, _super);
	    function ObservableValue(value, mode, context) {
	        _super.call(this, context);
	        this.value = value;
	        this.mode = mode;
	        this.changeEvent = new simpleeventemitter_1.default();
	        var _a = core_1.getValueModeFromValue(value, core_1.ValueMode.Recursive), childmode = _a[0], unwrappedValue = _a[1];
	        if (this.mode === core_1.ValueMode.Recursive)
	            this.mode = childmode;
	        this._value = this.makeReferenceValueReactive(unwrappedValue);
	    }
	    ObservableValue.prototype.makeReferenceValueReactive = function (value) {
	        return core_1.makeChildObservable(value, this.mode, this.context);
	    };
	    ObservableValue.prototype.set = function (newValue) {
	        core_1.assertUnwrapped(newValue, "Modifiers cannot be used on non-initial values.");
	        dnode_1.checkIfStateIsBeingModifiedDuringView(this.context);
	        var changed = this.mode === core_1.ValueMode.Structure ? !utils_1.deepEquals(newValue, this._value) : newValue !== this._value;
	        if (changed) {
	            var oldValue = this._value;
	            this.markStale();
	            this._value = this.makeReferenceValueReactive(newValue);
	            this.changeEvent.emit(this._value, oldValue);
	            this.markReady(true);
	        }
	        return changed;
	    };
	    ObservableValue.prototype.get = function () {
	        this.notifyObserved();
	        return this._value;
	    };
	    ObservableValue.prototype.observe = function (listener, fireImmediately) {
	        if (fireImmediately === void 0) { fireImmediately = false; }
	        if (fireImmediately)
	            listener(this.get(), undefined);
	        return this.changeEvent.on(listener);
	    };
	    ObservableValue.prototype.toString = function () {
	        return "Observable[" + this.context.name + ":" + this._value + "]";
	    };
	    return ObservableValue;
	})(dnode_1.DataNode);
	exports.ObservableValue = ObservableValue;


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	var observablevalue_1 = __webpack_require__(40);
	var core_1 = __webpack_require__(32);
	var simpleeventemitter_1 = __webpack_require__(37);
	var dnode_1 = __webpack_require__(33);
	var observablearray_1 = __webpack_require__(39);
	var utils_1 = __webpack_require__(38);
	var ObservableMap = (function () {
	    function ObservableMap(initialData, valueModeFunc) {
	        var _this = this;
	        this.$mobservable = {};
	        this._data = {};
	        this._hasMap = {};
	        this._keys = new observablearray_1.ObservableArray(null, core_1.ValueMode.Reference, false, {
	            name: ".keys()",
	            object: this
	        });
	        this._events = new simpleeventemitter_1.default();
	        this._valueMode = core_1.getValueModeFromModifierFunc(valueModeFunc);
	        if (utils_1.isPlainObject(initialData))
	            this.merge(initialData);
	        else if (Array.isArray(initialData))
	            initialData.forEach(function (_a) {
	                var key = _a[0], value = _a[1];
	                return _this.set(key, value);
	            });
	    }
	    ObservableMap.prototype._has = function (key) {
	        return typeof this._data[key] !== 'undefined';
	    };
	    ObservableMap.prototype.has = function (key) {
	        if (!this.isValidKey(key))
	            return false;
	        if (this._hasMap[key])
	            return this._hasMap[key].get();
	        return this._updateHasMapEntry(key, false).get();
	    };
	    ObservableMap.prototype.set = function (key, value) {
	        var _this = this;
	        this.assertValidKey(key);
	        core_1.assertUnwrapped(value, "[mobservable.map.set] Expected unwrapped value to be inserted to key '" + key + "'. If you need to use modifiers pass them as second argument to the constructor");
	        if (this._has(key)) {
	            var oldValue = this._data[key]._value;
	            var changed = this._data[key].set(value);
	            if (changed) {
	                this._events.emit({
	                    type: "update",
	                    object: this,
	                    name: key,
	                    oldValue: oldValue
	                });
	            }
	        }
	        else {
	            dnode_1.transaction(function () {
	                _this._data[key] = new observablevalue_1.ObservableValue(value, _this._valueMode, {
	                    name: "." + key,
	                    object: _this
	                });
	                _this._updateHasMapEntry(key, true);
	                _this._keys.push(key);
	            });
	            this._events.emit({
	                type: "add",
	                object: this,
	                name: key
	            });
	        }
	    };
	    ObservableMap.prototype.delete = function (key) {
	        var _this = this;
	        if (this._has(key)) {
	            var oldValue = this._data[key]._value;
	            dnode_1.transaction(function () {
	                _this._keys.remove(key);
	                _this._updateHasMapEntry(key, false);
	                var observable = _this._data[key];
	                observable.set(undefined);
	                _this._data[key] = undefined;
	            });
	            this._events.emit({
	                type: "delete",
	                object: this,
	                name: key,
	                oldValue: oldValue
	            });
	        }
	    };
	    ObservableMap.prototype._updateHasMapEntry = function (key, value) {
	        var entry = this._hasMap[key];
	        if (entry) {
	            entry.set(value);
	        }
	        else {
	            entry = this._hasMap[key] = new observablevalue_1.ObservableValue(value, core_1.ValueMode.Reference, {
	                name: ".(has)" + key,
	                object: this
	            });
	        }
	        return entry;
	    };
	    ObservableMap.prototype.get = function (key) {
	        if (this.has(key))
	            return this._data[key].get();
	        return undefined;
	    };
	    ObservableMap.prototype.keys = function () {
	        return this._keys.slice();
	    };
	    ObservableMap.prototype.values = function () {
	        return this.keys().map(this.get, this);
	    };
	    ObservableMap.prototype.entries = function () {
	        var _this = this;
	        return this.keys().map(function (key) { return [key, _this.get(key)]; });
	    };
	    ObservableMap.prototype.forEach = function (callback, thisArg) {
	        var _this = this;
	        this.keys().forEach(function (key) { return callback.call(thisArg, _this.get(key), key); });
	    };
	    ObservableMap.prototype.merge = function (other) {
	        var _this = this;
	        dnode_1.transaction(function () {
	            if (other instanceof ObservableMap)
	                other.keys().forEach(function (key) { return _this.set(key, other.get(key)); });
	            else
	                Object.keys(other).forEach(function (key) { return _this.set(key, other[key]); });
	        });
	        return this;
	    };
	    ObservableMap.prototype.clear = function () {
	        var _this = this;
	        dnode_1.transaction(function () {
	            _this.keys().forEach(_this.delete, _this);
	        });
	    };
	    Object.defineProperty(ObservableMap.prototype, "size", {
	        get: function () {
	            return this._keys.length;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ObservableMap.prototype.toJs = function () {
	        var _this = this;
	        var res = {};
	        this.keys().forEach(function (key) { return res[key] = _this.get(key); });
	        return res;
	    };
	    ObservableMap.prototype.isValidKey = function (key) {
	        if (key === null || key === undefined)
	            return false;
	        if (typeof key !== "string" && typeof key !== "number")
	            return false;
	        return true;
	    };
	    ObservableMap.prototype.assertValidKey = function (key) {
	        if (!this.isValidKey(key))
	            throw new Error("[mobservable.map] Invalid key: '" + key + "'");
	    };
	    ObservableMap.prototype.toString = function () {
	        var _this = this;
	        return "[mobservable.map { " + this.keys().map(function (key) { return (key + ": " + ("" + _this.get(key))); }).join(", ") + " }]";
	    };
	    ObservableMap.prototype.observe = function (callback) {
	        return this._events.on(callback);
	    };
	    return ObservableMap;
	})();
	exports.ObservableMap = ObservableMap;


/***/ },
/* 42 */
/***/ function(module, exports) {



/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	var observableview_1 = __webpack_require__(36);
	function createTransformer(transformer, onCleanup) {
	    var _this = this;
	    if (typeof transformer !== "function" || transformer.length !== 1)
	        throw new Error("[mobservable] transformer parameter should be a function that accepts one argument");
	    var objectCache = {};
	    return function (object) {
	        var identifier = getMemoizationId(object);
	        var reactiveTransformer = objectCache[identifier];
	        if (reactiveTransformer)
	            return reactiveTransformer.get();
	        reactiveTransformer = objectCache[identifier] = new observableview_1.ObservableView(function () {
	            return transformer(object);
	        }, _this, {
	            object: object,
	            name: "transformer-" + transformer.name + "-" + identifier
	        }, false);
	        reactiveTransformer.onceSleep(function (lastValue) {
	            delete objectCache[identifier];
	            if (onCleanup)
	                onCleanup(lastValue, object);
	        });
	        return reactiveTransformer.get();
	    };
	}
	exports.createTransformer = createTransformer;
	var transformId = 0;
	function getMemoizationId(object) {
	    if (object === null || typeof object !== "object")
	        throw new Error("[mobservable] transform expected some kind of object, got: " + object);
	    var tid = object.$transformId;
	    if (tid === undefined)
	        return object.$transformId = ++transformId;
	    return tid;
	}


/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var mobservable_1 = __webpack_require__(31);
	var AddinsPickerStore = (function () {
	    function AddinsPickerStore(webPartStore) {
	        this.searchLabel = 'Search';
	        this.searchText = '';
	        this.isLoading = false;
	        this.errorMessage = undefined;
	        this.filterText = undefined;
	        this._partStore = webPartStore;
	    }
	    Object.defineProperty(AddinsPickerStore.prototype, "parts", {
	        /* tslint:disable:no-any */
	        get: function () {
	            var filteredParts = [];
	            /* tslint:enable:no-any */
	            var filterText = (this.filterText || '').toLowerCase();
	            for (var partId in this._partStore.parts) {
	                if (this._partStore.parts[partId]) {
	                    /* tslint:disable:no-any */
	                    var partManifest = this._partStore.parts[partId];
	                    /* tslint:enable:no-any */
	                    if (!filterText || partManifest.preconfiguredEntries[0].title.default.toLowerCase().indexOf(filterText) > -1) {
	                        filteredParts.push(partManifest);
	                    }
	                }
	            }
	            return filteredParts.sort(function (a, b) {
	                return (a && a.preconfiguredEntries[0].title.default &&
	                    a.preconfiguredEntries[0].title.default.localeCompare(b.preconfiguredEntries[0].title.default));
	            });
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AddinsPickerStore.prototype.filter = function (filterText) {
	        this.filterText = filterText;
	    };
	    __decorate([
	        mobservable_1.observable
	    ], AddinsPickerStore.prototype, "filterText", void 0);
	    __decorate([
	        mobservable_1.observable
	    ], AddinsPickerStore.prototype, "isLoading", void 0);
	    __decorate([
	        mobservable_1.observable
	    ], AddinsPickerStore.prototype, "parts", null);
	    return AddinsPickerStore;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = AddinsPickerStore;
	


/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(46);
	


/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(47);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, ".DetailsPane{display:none;position:absolute;width:340px;top:0;bottom:0;right:0;background-color:#FAFAFA;box-shadow:0 0 20px rgba(0,0,0,.5)}.DetailsPane-header{height:40px;line-height:40px;padding:0 10px;background-color:#EAEAEA;position:absolute;top:0;left:0;right:0}.DetailsPane-content{position:absolute;top:40px;bottom:0;left:0;right:0;overflow-y:auto}.DetailsPane-closeButton{float:right;line-height:40px}.DetailsPane-section{margin:10px 0}.DetailsPane-sectionHeader{padding:0 10px;height:30px;line-height:30px;background-color:#EAEAEA}.DetailsPane-sectionHeaderText{display:inline-block;padding:0 5px}.DetailsPane-sectionContent{padding:10px}", ""]);
	
	// exports


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var React = __webpack_require__(2);
	var mobservable_react_1 = __webpack_require__(30);
	var NavPane_1 = __webpack_require__(49);
	var sp_client_preview_1 = __webpack_require__(4);
	/* tslint:disable:max-line-length */
	var PropertyPaneController_module_scss_1 = __webpack_require__(53);
	/* tslint:enable:max-line-length */
	__webpack_require__(56);
	var Page = (function (_super) {
	    __extends(Page, _super);
	    function Page() {
	        _super.call(this);
	    }
	    Page.prototype.componentDidMount = function () {
	        var _this = this;
	        this._canvas = new sp_client_preview_1.Canvas(
	        // @todo (SPPPlat VSO bug #189028) This is a workaround for a TypeScript compiler bug
	        // that we reported.  After the compiler is fixed, we will remove the typecast.
	        /* tslint:disable:no-any */
	        this.props.store.serviceScope, 
	        /* tslint:disable:no-any */
	        document.querySelector('#Canvas'), this.props.appStore.displayMode);
	        // Don't render webparts until the page is ready
	        this.props.store.getPageReadyPromise().then(function () {
	            _this._canvas.render(_this.props.store.getPageState());
	            // @todo: the canvas has a bug and needs any empty array in order to render. Ideally render() should
	            // render an empty canvas.
	            _this.props.store.setClearCallback(_this._clearPage.bind(_this));
	            _this.props.store.setSerializeCallback(function () { return _this._canvas.serialize(); });
	            _this.props.store.logSerializedStateCallback(function () {
	                return _this._canvas.serialize();
	            });
	        });
	    };
	    Page.prototype.componentWillReceiveProps = function (props) {
	        if (this._canvas) {
	            this._canvas.displayMode = this.props.appStore.displayMode;
	        }
	    };
	    Page.prototype.render = function () {
	        var _a = this.props.store.pageDefinition, hasOfficeHeader = _a.hasOfficeHeader, hasNavPane = _a.hasNavPane, hasCommandBar = _a.hasCommandBar, hasDetailsPane = _a.hasDetailsPane;
	        var rootClass = _getClassName('Page', {
	            'Page--hasHeader': hasOfficeHeader,
	            'Page--hasNavPane': hasNavPane,
	            'Page--hasCommandBar': hasCommandBar,
	            'Page--hasDetailsPane': hasDetailsPane
	        });
	        return (React.createElement("div", {className: rootClass}, React.createElement("div", {className: 'Page-belowHeader'}, hasNavPane
	            ? React.createElement(NavPane_1.default, null)
	            : null, React.createElement("div", {id: 'pageContent', className: 'Page-content'}, React.createElement("div", {id: 'Canvas'})))));
	    };
	    Page.prototype._clearPage = function () {
	        this._canvas.render();
	        // Removing the property pane with slide effect, when discard is clicked.
	        var propertyPaneContainer = document.getElementById('propertyPaneContainer');
	        if (propertyPaneContainer) {
	            propertyPaneContainer.classList.remove(PropertyPaneController_module_scss_1.default.showPane);
	            // This is to see the slide effect of the property pane and then empty the container.
	            window.setTimeout(function () {
	                while (propertyPaneContainer.firstChild) {
	                    propertyPaneContainer.removeChild(propertyPaneContainer.firstChild);
	                }
	            }, 1000);
	        }
	    };
	    Page = __decorate([
	        mobservable_react_1.observer
	    ], Page);
	    return Page;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Page;
	function _getClassName(baseClass, map) {
	    var className = baseClass;
	    for (var flag in map) {
	        if (map.hasOwnProperty(flag) && map[flag]) {
	            className += ' ' + flag;
	        }
	    }
	    return className;
	}
	


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(2);
	var SearchBox_1 = __webpack_require__(23);
	__webpack_require__(50);
	var NavPane = (function (_super) {
	    __extends(NavPane, _super);
	    function NavPane() {
	        _super.apply(this, arguments);
	    }
	    NavPane.prototype.render = function () {
	        return (React.createElement("div", {className: 'NavPane ms-font-m'}, React.createElement("div", {className: 'NavPane-search'}, React.createElement(SearchBox_1.default, {label: 'Search'})), React.createElement("div", {className: 'NavPane-link'}, "Home"), React.createElement("hr", null), React.createElement("div", {className: 'NavPane-link'}, "Link 1"), React.createElement("div", {className: 'NavPane-link'}, "Link 2"), React.createElement("div", {className: 'NavPane-link'}, "Link 3")));
	    };
	    return NavPane;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = NavPane;
	


/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(51);
	


/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(52);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, ".NavPane{background:#333;color:#AAA;position:absolute;left:0;top:0;right:0;bottom:0;overflow-y:auto;box-shadow:-10px 0 20px -10px #000 inset}.NavPane-link{padding:8px 20px;cursor:pointer}.NavPane-link:hover{background:#444}.NavPane hr{border:none;border-top:1px solid #888}.NavPane .ms-SearchBox-field{border:none;background:#DCDCDC;height:40px;line-height:40px}.NavPane .ms-SearchBox-label{height:40px;line-height:40px}.NavPane .ms-SearchBox-closeButton{width:40px;height:40px}", ""]);
	
	// exports


/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	__webpack_require__(54);
	/* tslint:disable */
	var styles = {
	    propertyPaneContainer: 'propertyPaneContainer_57da50e4',
	    showPane: 'showPane_03d1433f',
	    shrinkContent: 'shrinkContent_938313ca',
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = styles;
	/* tslint:enable */
	


/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(55);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, "[id^=spPropertyPaneContainer].propertyPaneContainer_57da50e4{position:absolute;top:50px;bottom:0}html[dir=ltr] [id^=spPropertyPaneContainer].propertyPaneContainer_57da50e4{right:-340px}html[dir=rtl] [id^=spPropertyPaneContainer].propertyPaneContainer_57da50e4{left:-340px}html[dir=ltr] [id^=spPropertyPaneContainer].showPane_03d1433f{right:0}html[dir=rtl] [id^=spPropertyPaneContainer].showPane_03d1433f{left:0}html[dir=ltr] [id^=spPageChromeAppDiv].shrinkContent_938313ca{right:340px}html[dir=rtl] [id^=spPageChromeAppDiv].shrinkContent_938313ca{left:340px}html[dir=ltr] [id^=workbenchPageContent].shrinkContent_938313ca{right:340px}html[dir=rtl] [id^=workbenchPageContent].shrinkContent_938313ca{left:340px}html[dir=ltr] [id^=workbenchCommandBar].shrinkContent_938313ca{padding-right:340px}html[dir=rtl] [id^=workbenchCommandBar].shrinkContent_938313ca{padding-left:340px}", ""]);
	
	// exports


/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(57);
	


/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(58);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, ".Page{position:absolute;left:0;top:0;right:0;bottom:0}.Page-belowHeader,.Page-content{position:absolute;top:0;left:0;bottom:0;right:0;overflow:hidden}.Page-content{transition:margin-right .6s ease;-webkit-transition:margin-right .6s ease;padding:10px 30px;overflow-y:auto}.Page--hasHeader .Page-belowHeader{top:50px}.Page--hasNavPane .Page-content{left:220px}.Page--hasCommandBar .Page-content{top:40px}.Page .NavPane{width:220px;right:auto}.Page .CommandBar{position:absolute;left:0;right:0;top:0}.Page--hasNavPane .CommandBar{left:220px}.Page-content.is-paneOpen{margin-right:315px;transition:margin-right .6s ease;-webkit-transition:margin-right .6s ease}", ""]);
	
	// exports


/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var mobservable_1 = __webpack_require__(31);
	__webpack_require__(60);
	var WebPartStore = (function () {
	    /* tslint:enable:no-any */
	    function WebPartStore() {
	        this.isLoading = false;
	        this.errorMessage = undefined;
	        this.parts = mobservable_1.asReference({});
	        // @todo: removing this as this is not required right now. Will cleanup this with other workbench cleanup
	        // at a later date.
	        // this.fetchWebParts();
	    }
	    WebPartStore.prototype.fetchWebParts = function () {
	        var _this = this;
	        if (!this.isLoading) {
	            this.isLoading = true;
	            /* tslint:disable:no-any */
	            if (window.webpartManifests) {
	                this.parts = window.webpartManifests;
	                /* tslint:enable:no-any */
	                this.isLoading = false;
	            }
	            else {
	                // Get the webparts!
	                // @todo: remove hardcoded url, add error handling, where is cancel...
	                window.fetch('http://localhost:5432/getwebparts')
	                    .then(function (response) { return response.json(); })
	                    .then(function (json) {
	                    /* tslint:enable:no-any */
	                    mobservable_1.transaction(function () {
	                        _this.parts = json;
	                        _this.isLoading = false;
	                    });
	                })
	                    .catch(function (ex) {
	                    console.error(ex);
	                    _this.errorMessage = ex.message;
	                    _this.isLoading = false;
	                });
	            }
	        }
	    };
	    __decorate([
	        mobservable_1.observable
	    ], WebPartStore.prototype, "errorMessage", void 0);
	    __decorate([
	        mobservable_1.observable
	    ], WebPartStore.prototype, "isLoading", void 0);
	    __decorate([
	        mobservable_1.observable
	    ], WebPartStore.prototype, "parts", void 0);
	    return WebPartStore;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = WebPartStore;
	


/***/ },
/* 60 */
/***/ function(module, exports) {

	(function() {
	  'use strict';
	
	  if (self.fetch) {
	    return
	  }
	
	  function normalizeName(name) {
	    if (typeof name !== 'string') {
	      name = name.toString();
	    }
	    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
	      throw new TypeError('Invalid character in header field name')
	    }
	    return name.toLowerCase()
	  }
	
	  function normalizeValue(value) {
	    if (typeof value !== 'string') {
	      value = value.toString();
	    }
	    return value
	  }
	
	  function Headers(headers) {
	    this.map = {}
	
	    if (headers instanceof Headers) {
	      headers.forEach(function(value, name) {
	        this.append(name, value)
	      }, this)
	
	    } else if (headers) {
	      Object.getOwnPropertyNames(headers).forEach(function(name) {
	        this.append(name, headers[name])
	      }, this)
	    }
	  }
	
	  Headers.prototype.append = function(name, value) {
	    name = normalizeName(name)
	    value = normalizeValue(value)
	    var list = this.map[name]
	    if (!list) {
	      list = []
	      this.map[name] = list
	    }
	    list.push(value)
	  }
	
	  Headers.prototype['delete'] = function(name) {
	    delete this.map[normalizeName(name)]
	  }
	
	  Headers.prototype.get = function(name) {
	    var values = this.map[normalizeName(name)]
	    return values ? values[0] : null
	  }
	
	  Headers.prototype.getAll = function(name) {
	    return this.map[normalizeName(name)] || []
	  }
	
	  Headers.prototype.has = function(name) {
	    return this.map.hasOwnProperty(normalizeName(name))
	  }
	
	  Headers.prototype.set = function(name, value) {
	    this.map[normalizeName(name)] = [normalizeValue(value)]
	  }
	
	  Headers.prototype.forEach = function(callback, thisArg) {
	    Object.getOwnPropertyNames(this.map).forEach(function(name) {
	      this.map[name].forEach(function(value) {
	        callback.call(thisArg, value, name, this)
	      }, this)
	    }, this)
	  }
	
	  function consumed(body) {
	    if (body.bodyUsed) {
	      return Promise.reject(new TypeError('Already read'))
	    }
	    body.bodyUsed = true
	  }
	
	  function fileReaderReady(reader) {
	    return new Promise(function(resolve, reject) {
	      reader.onload = function() {
	        resolve(reader.result)
	      }
	      reader.onerror = function() {
	        reject(reader.error)
	      }
	    })
	  }
	
	  function readBlobAsArrayBuffer(blob) {
	    var reader = new FileReader()
	    reader.readAsArrayBuffer(blob)
	    return fileReaderReady(reader)
	  }
	
	  function readBlobAsText(blob) {
	    var reader = new FileReader()
	    reader.readAsText(blob)
	    return fileReaderReady(reader)
	  }
	
	  var support = {
	    blob: 'FileReader' in self && 'Blob' in self && (function() {
	      try {
	        new Blob();
	        return true
	      } catch(e) {
	        return false
	      }
	    })(),
	    formData: 'FormData' in self
	  }
	
	  function Body() {
	    this.bodyUsed = false
	
	
	    this._initBody = function(body) {
	      this._bodyInit = body
	      if (typeof body === 'string') {
	        this._bodyText = body
	      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
	        this._bodyBlob = body
	      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
	        this._bodyFormData = body
	      } else if (!body) {
	        this._bodyText = ''
	      } else {
	        throw new Error('unsupported BodyInit type')
	      }
	    }
	
	    if (support.blob) {
	      this.blob = function() {
	        var rejected = consumed(this)
	        if (rejected) {
	          return rejected
	        }
	
	        if (this._bodyBlob) {
	          return Promise.resolve(this._bodyBlob)
	        } else if (this._bodyFormData) {
	          throw new Error('could not read FormData body as blob')
	        } else {
	          return Promise.resolve(new Blob([this._bodyText]))
	        }
	      }
	
	      this.arrayBuffer = function() {
	        return this.blob().then(readBlobAsArrayBuffer)
	      }
	
	      this.text = function() {
	        var rejected = consumed(this)
	        if (rejected) {
	          return rejected
	        }
	
	        if (this._bodyBlob) {
	          return readBlobAsText(this._bodyBlob)
	        } else if (this._bodyFormData) {
	          throw new Error('could not read FormData body as text')
	        } else {
	          return Promise.resolve(this._bodyText)
	        }
	      }
	    } else {
	      this.text = function() {
	        var rejected = consumed(this)
	        return rejected ? rejected : Promise.resolve(this._bodyText)
	      }
	    }
	
	    if (support.formData) {
	      this.formData = function() {
	        return this.text().then(decode)
	      }
	    }
	
	    this.json = function() {
	      return this.text().then(JSON.parse)
	    }
	
	    return this
	  }
	
	  // HTTP methods whose capitalization should be normalized
	  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']
	
	  function normalizeMethod(method) {
	    var upcased = method.toUpperCase()
	    return (methods.indexOf(upcased) > -1) ? upcased : method
	  }
	
	  function Request(url, options) {
	    options = options || {}
	    this.url = url
	
	    this.credentials = options.credentials || 'omit'
	    this.headers = new Headers(options.headers)
	    this.method = normalizeMethod(options.method || 'GET')
	    this.mode = options.mode || null
	    this.referrer = null
	
	    if ((this.method === 'GET' || this.method === 'HEAD') && options.body) {
	      throw new TypeError('Body not allowed for GET or HEAD requests')
	    }
	    this._initBody(options.body)
	  }
	
	  function decode(body) {
	    var form = new FormData()
	    body.trim().split('&').forEach(function(bytes) {
	      if (bytes) {
	        var split = bytes.split('=')
	        var name = split.shift().replace(/\+/g, ' ')
	        var value = split.join('=').replace(/\+/g, ' ')
	        form.append(decodeURIComponent(name), decodeURIComponent(value))
	      }
	    })
	    return form
	  }
	
	  function headers(xhr) {
	    var head = new Headers()
	    var pairs = xhr.getAllResponseHeaders().trim().split('\n')
	    pairs.forEach(function(header) {
	      var split = header.trim().split(':')
	      var key = split.shift().trim()
	      var value = split.join(':').trim()
	      head.append(key, value)
	    })
	    return head
	  }
	
	  Body.call(Request.prototype)
	
	  function Response(bodyInit, options) {
	    if (!options) {
	      options = {}
	    }
	
	    this._initBody(bodyInit)
	    this.type = 'default'
	    this.url = null
	    this.status = options.status
	    this.ok = this.status >= 200 && this.status < 300
	    this.statusText = options.statusText
	    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)
	    this.url = options.url || ''
	  }
	
	  Body.call(Response.prototype)
	
	  self.Headers = Headers;
	  self.Request = Request;
	  self.Response = Response;
	
	  self.fetch = function(input, init) {
	    // TODO: Request constructor should accept input, init
	    var request
	    if (Request.prototype.isPrototypeOf(input) && !init) {
	      request = input
	    } else {
	      request = new Request(input, init)
	    }
	
	    return new Promise(function(resolve, reject) {
	      var xhr = new XMLHttpRequest()
	
	      function responseURL() {
	        if ('responseURL' in xhr) {
	          return xhr.responseURL
	        }
	
	        // Avoid security warnings on getResponseHeader when not allowed by CORS
	        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {
	          return xhr.getResponseHeader('X-Request-URL')
	        }
	
	        return;
	      }
	
	      xhr.onload = function() {
	        var status = (xhr.status === 1223) ? 204 : xhr.status
	        if (status < 100 || status > 599) {
	          reject(new TypeError('Network request failed'))
	          return
	        }
	        var options = {
	          status: status,
	          statusText: xhr.statusText,
	          headers: headers(xhr),
	          url: responseURL()
	        }
	        var body = 'response' in xhr ? xhr.response : xhr.responseText;
	        resolve(new Response(body, options))
	      }
	
	      xhr.onerror = function() {
	        reject(new TypeError('Network request failed'))
	      }
	
	      xhr.open(request.method, request.url, true)
	
	      if (request.credentials === 'include') {
	        xhr.withCredentials = true
	      }
	
	      if ('responseType' in xhr && support.blob) {
	        xhr.responseType = 'blob'
	      }
	
	      request.headers.forEach(function(value, name) {
	        xhr.setRequestHeader(name, value)
	      })
	
	      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
	    })
	  }
	  self.fetch.polyfill = true
	})();


/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @copyright Microsoft Corporation. All rights reserved.
	 *
	 * @file MobilePreview
	 * Shows a view of the user's page in a mobile device-sized iframe.
	 * The frame size is configurable through click stops set to the size of popular device
	 * forms, X and Y dimension input boxes, and options to rotate the device and switch
	 * between mobile, tablet and desktop sizes. There is also an option to view an alternate
	 * URL of the user's input in the frame.
	 */
	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(2);
	var office_ui_fabric_react_1 = __webpack_require__(62);
	var MobilePreview_module_scss_1 = __webpack_require__(63);
	var MobilePreviewDevices_1 = __webpack_require__(66);
	var MobilePreviewClickStopBar_1 = __webpack_require__(67);
	var MobilePreviewHeaderBar_1 = __webpack_require__(75);
	var MobilePreviewDeviceView_1 = __webpack_require__(87);
	var MobilePreviewDimensionInput_1 = __webpack_require__(91);
	var MobilePreviewRotate_1 = __webpack_require__(96);
	(function (DeviceType) {
	    DeviceType[DeviceType["Phone"] = 0] = "Phone";
	    DeviceType[DeviceType["Tablet"] = 1] = "Tablet";
	})(exports.DeviceType || (exports.DeviceType = {}));
	var DeviceType = exports.DeviceType;
	(function (DeviceOrientation) {
	    DeviceOrientation[DeviceOrientation["Portrait"] = 0] = "Portrait";
	    DeviceOrientation[DeviceOrientation["Landscape"] = 1] = "Landscape";
	})(exports.DeviceOrientation || (exports.DeviceOrientation = {}));
	var DeviceOrientation = exports.DeviceOrientation;
	var MobilePreview = (function (_super) {
	    __extends(MobilePreview, _super);
	    function MobilePreview(props) {
	        _super.call(this, props);
	        // Store string from url textfield outside of state so we don't change the iframe URL until the user clicks submit
	        this.inProgressURL = '';
	        if (!this.props.devices) {
	            this.devices = MobilePreviewDevices_1.mobilePreviewDevices;
	        }
	        else {
	            this.devices = this.props.devices;
	        }
	        var deviceType = this.props.deviceType || DeviceType.Phone;
	        /**
	         * Pick a default device for now, which will be changed later
	         * A current device is needed before sorting can happen
	        */
	        this.defaultPhone = this.devices.phones[this.devices.phones.length - 1];
	        this.defaultTablet = this.devices.tablets[this.devices.tablets.length - 1];
	        this.state = {
	            currentOrientation: deviceType === DeviceType.Phone ?
	                DeviceOrientation.Portrait : DeviceOrientation.Landscape,
	            currentDevice: deviceType === DeviceType.Phone ? this.defaultPhone : this.defaultTablet,
	            deviceType: deviceType,
	            url: window.location.href
	        };
	        this._onClickstopChangeForm = this._onClickstopChangeForm.bind(this);
	        this._onClickRotate = this._onClickRotate.bind(this);
	        this._onClickChangeDeviceType = this._onClickChangeDeviceType.bind(this);
	        this._onChangedX = this._onChangedX.bind(this);
	        this._onChangedY = this._onChangedY.bind(this);
	        this._onChangedURLField = this._onChangedURLField.bind(this);
	        this._onClickURL = this._onClickURL.bind(this);
	        this._sortDevices = this._sortDevices.bind(this);
	        this._comparePhones = this._comparePhones.bind(this);
	        this._compareTablets = this._compareTablets.bind(this);
	        this._sortDevices();
	        this.state.currentDevice = props.deviceType === DeviceType.Phone ? this.defaultPhone : this.defaultTablet;
	    }
	    MobilePreview.prototype.render = function () {
	        this._sortDevices();
	        var mobilePreviewClickStopBar = React.createElement(MobilePreviewClickStopBar_1.default, {currentDevice: this.state.currentDevice, currentOrientation: this.state.currentOrientation, devices: this.state.deviceType === DeviceType.Phone ? this.devices.phones : this.devices.tablets, deviceType: this.state.deviceType, onSelectClickStop: this._onClickstopChangeForm});
	        var mobilePreviewHeaderBar = React.createElement(MobilePreviewHeaderBar_1.default, {onChangeURL: this._onChangedURLField, onExit: this.props.onExit, onClickURLSubmit: this._onClickURL, onChangeDeviceType: this._onClickChangeDeviceType});
	        var mobilePreviewDeviceView = React.createElement(MobilePreviewDeviceView_1.default, {currentDevice: this.state.currentDevice, currentOrientation: this.state.currentOrientation, deviceType: this.state.deviceType, url: this.state.url});
	        var mobilePreviewDimensionInput = React.createElement(MobilePreviewDimensionInput_1.default, {currentDevice: this.state.currentDevice, onChangedX: this._onChangedX, onChangedY: this._onChangedY});
	        var mobilePreviewRotate = React.createElement(MobilePreviewRotate_1.default, {onRotate: this._onClickRotate, currentOrientation: this.state.currentOrientation});
	        var containerClass = office_ui_fabric_react_1.css(MobilePreview_module_scss_1.default.mobilePreviewContainer, 'ms-Grid');
	        return (React.createElement("div", {className: containerClass}, mobilePreviewHeaderBar, mobilePreviewClickStopBar, React.createElement("div", {className: MobilePreview_module_scss_1.default.mobilePreviewDeviceContainer}, mobilePreviewDimensionInput, mobilePreviewRotate, mobilePreviewDeviceView)));
	    };
	    MobilePreview.prototype._onClickstopChangeForm = function (device) {
	        this.setState({
	            currentDevice: device,
	            currentOrientation: this.state.currentOrientation,
	            deviceType: this.state.deviceType,
	            url: this.state.url
	        });
	    };
	    MobilePreview.prototype._onClickRotate = function (orientation) {
	        this.setState({
	            currentDevice: this.state.currentDevice,
	            currentOrientation: orientation,
	            deviceType: this.state.deviceType,
	            url: this.state.url
	        });
	    };
	    MobilePreview.prototype._onClickChangeDeviceType = function (type) {
	        this.setState({
	            currentDevice: type === DeviceType.Phone ? this.defaultPhone : this.defaultTablet,
	            currentOrientation: type === DeviceType.Phone ? DeviceOrientation.Portrait : DeviceOrientation.Landscape,
	            deviceType: type,
	            url: this.state.url
	        });
	    };
	    MobilePreview.prototype._onChangedX = function (event) {
	        var heightTarget = event.target;
	        var customDevice = {
	            name: 'Custom Device',
	            width: +heightTarget.value,
	            height: this.state.currentDevice.height
	        };
	        this.setState({
	            currentDevice: customDevice,
	            currentOrientation: this.state.currentOrientation,
	            deviceType: this.state.deviceType,
	            url: this.state.url
	        });
	    };
	    MobilePreview.prototype._onChangedY = function (event) {
	        var heightTarget = event.target;
	        var customDevice = {
	            name: 'Custom Device',
	            height: +heightTarget.value,
	            width: this.state.currentDevice.width
	        };
	        this.setState({
	            currentDevice: customDevice,
	            currentOrientation: this.state.currentOrientation,
	            deviceType: this.state.deviceType,
	            url: this.state.url
	        });
	    };
	    MobilePreview.prototype._onChangedURLField = function (value) {
	        this.inProgressURL = value;
	    };
	    MobilePreview.prototype._onClickURL = function () {
	        if (this.inProgressURL === '' || this.inProgressURL === undefined) {
	            return;
	        }
	        this.setState({
	            currentDevice: this.state.currentDevice,
	            currentOrientation: this.state.currentOrientation,
	            deviceType: this.state.deviceType,
	            url: this.inProgressURL
	        });
	    };
	    /**
	     * Used to sort devices by either height or width depending on the orientation of the device. This is necessary
	     * because the clickstops will only show up/function properly if they are rendered in order from greatest to
	     * smallest length.
	     */
	    MobilePreview.prototype._sortDevices = function () {
	        if (this.state.deviceType === DeviceType.Phone) {
	            this.devices.phones.sort(this._comparePhones);
	            this.defaultPhone = this.devices.phones[this.devices.phones.length - 1];
	        }
	        else {
	            this.devices.tablets.sort(this._compareTablets);
	            this.defaultTablet = this.devices.tablets[this.devices.tablets.length - 1];
	        }
	    };
	    MobilePreview.prototype._comparePhones = function (deviceA, deviceB) {
	        var aMeasure = deviceA.width;
	        var bMeasure = deviceB.width;
	        if (this.state.currentOrientation === DeviceOrientation.Landscape) {
	            aMeasure = deviceA.height;
	            bMeasure = deviceB.height;
	        }
	        return bMeasure - aMeasure;
	    };
	    MobilePreview.prototype._compareTablets = function (deviceA, deviceB) {
	        var aMeasure = deviceA.height;
	        var bMeasure = deviceB.height;
	        if (this.state.currentOrientation === DeviceOrientation.Landscape) {
	            aMeasure = deviceA.width;
	            bMeasure = deviceB.width;
	        }
	        return bMeasure - aMeasure;
	    };
	    return MobilePreview;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = MobilePreview;
	


/***/ },
/* 62 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_62__;

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	__webpack_require__(64);
	/* tslint:disable */
	var styles = {
	    mobilePreviewContainer: 'mobilePreviewContainer_bfe3c723',
	    mobilePreviewDeviceContainer: 'mobilePreviewDeviceContainer_196adf3b',
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = styles;
	/* tslint:enable */
	


/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(65);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, ".mobilePreviewContainer_bfe3c723{position:fixed;top:0;bottom:0;left:0;right:0;background:rgba(0,0,0,.87);z-index:2147483647;box-sizing:border-box;padding:0;font-family:'Segoe UI Semilight WestEuropean','Segoe UI Semilight','Segoe UI',Tahoma,Arial,sans-serif}.mobilePreviewDeviceContainer_196adf3b{position:relative;height:calc(100% - 71px);-webkit-box-align:center;-ms-flex-align:center;align-items:center;overflow:auto;display:-webkit-box;display:-ms-flexbox;display:flex}", ""]);
	
	// exports


/***/ },
/* 66 */
/***/ function(module, exports) {

	"use strict";
	/**
	 * Input to the MobilePreview component for which device options to have
	 */
	/* tslint:disable */
	exports.mobilePreviewDevices = {
	    /* tslint:enable */
	    phones: [
	        { name: 'iPhone 6 Plus', width: 414, height: 736 },
	        { name: 'Samsung Galaxy S6/S7', width: 360, height: 640 },
	        { name: 'iPhone 5', width: 320, height: 568 },
	        { name: 'Microsoft Lumia 1520', width: 432, height: 768 }
	    ],
	    tablets: [
	        { name: 'Microsoft Surface Pro 3', width: 1440, height: 960 },
	        { name: 'Microsoft Surface Pro', width: 1280, height: 720 },
	        { name: 'iPad', width: 1024, height: 768 },
	        { name: 'iPad Pro', width: 1366, height: 1024 },
	        { name: 'Samsung Galaxy Tab', width: 1280, height: 800 }
	    ],
	    desktops: []
	};
	


/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(2);
	var office_ui_fabric_react_1 = __webpack_require__(62);
	var MobilePreviewClickStopBar_module_scss_1 = __webpack_require__(68);
	var MobilePreviewClickStop_1 = __webpack_require__(71);
	var MobilePreviewClickStopBar = (function (_super) {
	    __extends(MobilePreviewClickStopBar, _super);
	    function MobilePreviewClickStopBar() {
	        _super.apply(this, arguments);
	    }
	    MobilePreviewClickStopBar.prototype.render = function () {
	        var props = this.props;
	        var deviceDiv = [];
	        var _loop_1 = function(device) {
	            var selected = false;
	            if (device === props.currentDevice) {
	                selected = true;
	            }
	            deviceDiv.push(React.createElement(MobilePreviewClickStop_1.default, {key: device.name, device: device, onClick: function () { return props.onSelectClickStop(device); }, selected: selected, orientation: props.currentOrientation, deviceType: this_1.props.deviceType}));
	        };
	        var this_1 = this;
	        for (var _i = 0, _a = props.devices; _i < _a.length; _i++) {
	            var device = _a[_i];
	            _loop_1(device);
	        }
	        var containerStyle = office_ui_fabric_react_1.css(MobilePreviewClickStopBar_module_scss_1.default.clickStopNavBar, 'ms-borderColor-neutralTertiaryAlt', 'ms-bgColor-neutralLighter', 'ms-fontColor-neutralPrimary');
	        return (React.createElement("div", {className: containerStyle}, React.createElement("ul", {className: MobilePreviewClickStopBar_module_scss_1.default.navBarItems}, deviceDiv, React.createElement("div", {id: 'clickStopBarLabel', className: MobilePreviewClickStopBar_module_scss_1.default.mobilePreviewDeviceTitle}, props.currentDevice.name))));
	    };
	    return MobilePreviewClickStopBar;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = MobilePreviewClickStopBar;
	


/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	__webpack_require__(69);
	/* tslint:disable */
	var styles = {
	    clickStopNavBar: 'clickStopNavBar_7e41303f',
	    navBarItems: 'navBarItems_6af9729e',
	    mobilePreviewDeviceTitle: 'mobilePreviewDeviceTitle_a722d3e2',
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = styles;
	/* tslint:enable */
	


/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(70);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, ".clickStopNavBar_7e41303f{height:30px;border-width:0;border-top-width:1px;border-style:solid;box-sizing:content-box;font-size:14px;font-weight:400;margin:0;box-shadow:none;padding:0 10px;width:100%;outline:transparent solid 1px}.navBarItems_6af9729e{display:block;list-style:none;margin:0 7px 0 0;padding:0}.mobilePreviewDeviceTitle_a722d3e2{width:200px;margin:auto;text-align:center;padding:4px;position:relative}", ""]);
	
	// exports


/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(2);
	var office_ui_fabric_react_1 = __webpack_require__(62);
	var MobilePreviewClickStop_module_scss_1 = __webpack_require__(72);
	var MobilePreview_1 = __webpack_require__(61);
	var MobilePreviewClickStop = (function (_super) {
	    __extends(MobilePreviewClickStop, _super);
	    function MobilePreviewClickStop(props) {
	        _super.call(this, props);
	    }
	    MobilePreviewClickStop.prototype.render = function () {
	        var _this = this;
	        var effectiveWidth = this.props.device.width;
	        if (this.props.deviceType === MobilePreview_1.DeviceType.Phone) {
	            if (this.props.orientation === MobilePreview_1.DeviceOrientation.Landscape) {
	                effectiveWidth = this.props.device.height;
	            }
	        }
	        else if (this.props.deviceType === MobilePreview_1.DeviceType.Tablet) {
	            if (this.props.orientation === MobilePreview_1.DeviceOrientation.Portrait) {
	                effectiveWidth = this.props.device.height;
	            }
	        }
	        var leftCalc = "calc(50% - " + effectiveWidth / 2 + "px)";
	        var divStyle = {
	            width: effectiveWidth,
	            left: leftCalc
	        };
	        var className = office_ui_fabric_react_1.css(MobilePreviewClickStop_module_scss_1.default.navBarItem, 'ms-borderColor-white', MobilePreviewClickStop_module_scss_1.default.clickStop, (_a = {},
	            _a[MobilePreviewClickStop_module_scss_1.default.clickStopSelected] = this.props.selected,
	            _a
	        ));
	        return (React.createElement("div", {className: className, onClick: function () { return _this.props.onClick(_this.props.device); }, style: divStyle}));
	        var _a;
	    };
	    return MobilePreviewClickStop;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = MobilePreviewClickStop;
	


/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	__webpack_require__(73);
	/* tslint:disable */
	var styles = {
	    clickStop: 'clickStop_0bc67d4c',
	    clickStopSelected: 'clickStopSelected_e2a15924',
	    navBarItem: 'navBarItem_876d5b6b',
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = styles;
	/* tslint:enable */
	


/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(74);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, ".clickStop_0bc67d4c{border-width:0;border-left-width:2px;border-right-width:2px;border-style:solid;height:30px;line-height:30px;position:absolute}.clickStop_0bc67d4c:hover{background-color:#C8C8C8;cursor:pointer}.clickStopSelected_e2a15924{background-color:#C8C8C8}.navBarItem_876d5b6b{float:left;margin-right:18px;font-size:14px;padding:0;box-sizing:border-box;display:block}", ""]);
	
	// exports


/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(2);
	var office_ui_fabric_react_1 = __webpack_require__(62);
	var MobilePreviewHeaderBar_module_scss_1 = __webpack_require__(76);
	var MobilePreviewURLEntry_1 = __webpack_require__(79);
	var MobilePreviewDeviceTypeSelector_1 = __webpack_require__(83);
	var MobilePreviewHeaderBar = (function (_super) {
	    __extends(MobilePreviewHeaderBar, _super);
	    function MobilePreviewHeaderBar() {
	        _super.apply(this, arguments);
	    }
	    MobilePreviewHeaderBar.prototype.render = function () {
	        var mobilePreviewURLEntry = React.createElement(MobilePreviewURLEntry_1.default, {onChangeURL: this.props.onChangeURL, onClickURLSubmit: this.props.onClickURLSubmit});
	        var mobilePreviewDeviceTypeSelector = React.createElement(MobilePreviewDeviceTypeSelector_1.default, {onChangeDeviceType: this.props.onChangeDeviceType});
	        var mobilePreviewNavBar = office_ui_fabric_react_1.css(MobilePreviewHeaderBar_module_scss_1.default.mobilePreviewNavBar, 'ms-fontColor-neutralPrimary', 'ms-bgColor-neutralLighter');
	        var navBarItems = office_ui_fabric_react_1.css('ms-Grid-row', MobilePreviewHeaderBar_module_scss_1.default.navBarItems);
	        var navBarItemSmClass = office_ui_fabric_react_1.css('ms-Grid-col', 'ms-u-sm6', 'ms-u-md6', 'ms-u-lg3', MobilePreviewHeaderBar_module_scss_1.default.navBarItem);
	        var navBarItemMdClass = office_ui_fabric_react_1.css('ms-Grid-col', 'ms-u-hiddenMdDown', 'ms-u-lg6', MobilePreviewHeaderBar_module_scss_1.default.navBarItem);
	        var navBarItemRightClass = office_ui_fabric_react_1.css(MobilePreviewHeaderBar_module_scss_1.default.navBarItem, MobilePreviewHeaderBar_module_scss_1.default.navBarItemRight);
	        var xClass = office_ui_fabric_react_1.css('ms-Icon', 'ms-Icon--x', 'ms-fontColor-neutralTertiary', MobilePreviewHeaderBar_module_scss_1.default.mobilePreviewXIcon, 'ms-borderColor-neutralTertiaryAlt');
	        return (React.createElement("div", {className: mobilePreviewNavBar}, React.createElement("ul", {className: navBarItems}, React.createElement("li", {className: navBarItemSmClass}, React.createElement("span", {className: MobilePreviewHeaderBar_module_scss_1.default.mobilePreviewTitle}, "Mobile Preview")), React.createElement("li", {className: navBarItemMdClass}, mobilePreviewURLEntry), React.createElement("div", {className: 'ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg3'}, React.createElement("li", {className: navBarItemRightClass}, React.createElement("a", {onClick: this.props.onExit}, React.createElement("span", {className: xClass}))), mobilePreviewDeviceTypeSelector))));
	    };
	    return MobilePreviewHeaderBar;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = MobilePreviewHeaderBar;
	


/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	__webpack_require__(77);
	/* tslint:disable */
	var styles = {
	    mobilePreviewNavBar: 'mobilePreviewNavBar_ac674675',
	    navBarItems: 'navBarItems_cbed5348',
	    navBarItem: 'navBarItem_8c4e0593',
	    navBarItemRight: 'navBarItemRight_cb626a65',
	    mobilePreviewTitle: 'mobilePreviewTitle_5aa0a5fd',
	    mobilePreviewXIcon: 'mobilePreviewXIcon_adf979a5',
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = styles;
	/* tslint:enable */
	


/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(78);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, ".mobilePreviewNavBar_ac674675{height:50px;font-size:14px;font-weight:400;box-sizing:border-box;margin:0;box-shadow:none;padding:0 10px;width:100%;outline:transparent solid 1px}.navBarItems_cbed5348{display:block;list-style:none;margin:0 7px 0 0;padding:0}.navBarItem_8c4e0593{margin-right:0;float:left;font-size:14px;padding:0;box-sizing:border-box;display:block;height:40px;line-height:40px;position:relative}.navBarItemRight_cb626a65{float:right;margin:0}.mobilePreviewTitle_5aa0a5fd{line-height:50px;margin-left:15px;font-size:xx-large}.mobilePreviewXIcon_adf979a5{font-size:30px;border-left-width:1px;margin:auto;margin-left:30px;line-height:50px}.mobilePreviewXIcon_adf979a5:hover{cursor:pointer;color:#767676}", ""]);
	
	// exports


/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(2);
	var office_ui_fabric_react_1 = __webpack_require__(62);
	var MobilePreviewURLEntry_module_scss_1 = __webpack_require__(80);
	var MobilePreviewURLEntry = (function (_super) {
	    __extends(MobilePreviewURLEntry, _super);
	    function MobilePreviewURLEntry(props) {
	        _super.call(this, props);
	        this._validateAndCompleteURL = this._validateAndCompleteURL.bind(this);
	    }
	    MobilePreviewURLEntry.prototype.render = function () {
	        return (React.createElement("div", {className: MobilePreviewURLEntry_module_scss_1.default.mobilePreviewURLbar}, React.createElement(office_ui_fabric_react_1.TextField, {className: MobilePreviewURLEntry_module_scss_1.default.mobilePreviewTextfield, placeholder: 'Enter a URL to view in Mobile Preview', onChanged: this._validateAndCompleteURL}), React.createElement(office_ui_fabric_react_1.Button, {className: MobilePreviewURLEntry_module_scss_1.default.mobilePreviewURLbutton, onClick: this.props.onClickURLSubmit}, "View Preview")));
	    };
	    /**
	     * If the URL is not valid, an error page displays as it would in the browser. As such, no additional validation is
	     * conducted here aside from not allowing a blank entry.
	     */
	    MobilePreviewURLEntry.prototype._validateAndCompleteURL = function (value) {
	        if (!value || value === '') {
	            return;
	        }
	        var regex = /https?:\/\//;
	        if (!regex.test(value)) {
	            value = 'http://' + value;
	        }
	        this.props.onChangeURL(value);
	    };
	    return MobilePreviewURLEntry;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = MobilePreviewURLEntry;
	


/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	__webpack_require__(81);
	/* tslint:disable */
	var styles = {
	    mobilePreviewURLbar: 'mobilePreviewURLbar_39674176',
	    mobilePreviewTextfield: 'mobilePreviewTextfield_dd8f4296',
	    mobilePreviewURLbutton: 'mobilePreviewURLbutton_051e5d4e',
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = styles;
	/* tslint:enable */
	


/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(82);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, ".mobilePreviewURLbar_39674176{height:100%;padding:5px;width:100%}.mobilePreviewTextfield_dd8f4296{position:absolute;left:0;width:calc(100% - 135px)}.mobilePreviewURLbutton_051e5d4e{position:absolute;right:0;margin:6px;background-color:#C8C8C8;border:1px solid #C8C8C8;border-radius:2px;top:4px}.mobilePreviewURLbutton_051e5d4e:hover{background-color:#A6A6A6}.mobilePreviewURLbutton_051e5d4e:active{background-color:#C8C8C8;border:1px solid #A6A6A6}.mobilePreviewURLbutton_051e5d4e:focus{background-color:#C8C8C8;border:1px solid #A6A6A6}", ""]);
	
	// exports


/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(2);
	var office_ui_fabric_react_1 = __webpack_require__(62);
	var MobilePreviewDeviceTypeSelector_module_scss_1 = __webpack_require__(84);
	var MobilePreview_1 = __webpack_require__(61);
	var MobilePreviewDeviceTypeSelector = (function (_super) {
	    __extends(MobilePreviewDeviceTypeSelector, _super);
	    function MobilePreviewDeviceTypeSelector() {
	        _super.apply(this, arguments);
	    }
	    MobilePreviewDeviceTypeSelector.prototype.render = function () {
	        var _this = this;
	        var spanClassNameMobile = office_ui_fabric_react_1.css('ms-Icon', 'ms-Icon--mobile', 'ms-fontColor-neutralTertiary', MobilePreviewDeviceTypeSelector_module_scss_1.default.mobilePreviewDeviceIcon);
	        var spanClassNameTablet = office_ui_fabric_react_1.css('ms-Icon', 'ms-Icon--tablet', 'ms-fontColor-neutralTertiary', MobilePreviewDeviceTypeSelector_module_scss_1.default.mobilePreviewDeviceIcon);
	        return (React.createElement("div", null, React.createElement("li", {className: MobilePreviewDeviceTypeSelector_module_scss_1.default.navBarItemRight}, React.createElement("a", {onClick: function () { return _this.props.onChangeDeviceType(MobilePreview_1.DeviceType.Phone); }}, React.createElement("span", {className: spanClassNameMobile}))), React.createElement("li", {className: MobilePreviewDeviceTypeSelector_module_scss_1.default.navBarItemRight}, React.createElement("a", {onClick: function () { return _this.props.onChangeDeviceType(MobilePreview_1.DeviceType.Tablet); }}, React.createElement("span", {className: spanClassNameTablet})))));
	    };
	    return MobilePreviewDeviceTypeSelector;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = MobilePreviewDeviceTypeSelector;
	


/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	__webpack_require__(85);
	/* tslint:disable */
	var styles = {
	    mobilePreviewDeviceIcon: 'mobilePreviewDeviceIcon_6e6451f4',
	    navBarItemRight: 'navBarItemRight_7b41d3ec',
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = styles;
	/* tslint:enable */
	


/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(86);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, ".mobilePreviewDeviceIcon_6e6451f4{margin:auto;padding:auto;font-size:40px;line-height:50px}.mobilePreviewDeviceIcon_6e6451f4:hover{cursor:pointer;color:#767676}.navBarItemRight_7b41d3ec{font-size:14px;padding:0;box-sizing:border-box;display:block;height:40px;line-height:40px;position:relative;float:right;margin:0}", ""]);
	
	// exports


/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(2);
	var office_ui_fabric_react_1 = __webpack_require__(62);
	var MobilePreviewDeviceView_module_scss_1 = __webpack_require__(88);
	var MobilePreview_1 = __webpack_require__(61);
	var MobilePreviewDeviceView = (function (_super) {
	    __extends(MobilePreviewDeviceView, _super);
	    function MobilePreviewDeviceView(props) {
	        _super.call(this, props);
	    }
	    MobilePreviewDeviceView.prototype.render = function () {
	        var formStyle = {
	            width: this.props.currentDevice.width,
	            height: this.props.currentDevice.height
	        };
	        var mobilePreviewClassName = office_ui_fabric_react_1.css(MobilePreviewDeviceView_module_scss_1.default.mobilePreviewDevice, 'ms-borderColor-neutralSecondaryAlt', this.props.deviceType === MobilePreview_1.DeviceType.Tablet ? MobilePreviewDeviceView_module_scss_1.default.mobilePreviewTablet :
	            this.props.currentOrientation === MobilePreview_1.DeviceOrientation.Portrait ? MobilePreviewDeviceView_module_scss_1.default.mobilePreviewPortrait :
	                MobilePreviewDeviceView_module_scss_1.default.mobilePreviewLandscape);
	        var iFrameStyle = office_ui_fabric_react_1.css(MobilePreviewDeviceView_module_scss_1.default.mobilePreviewIframe, 'ms-bgColor-white');
	        if (this.props.deviceType === MobilePreview_1.DeviceType.Phone) {
	            if (this.props.currentOrientation === MobilePreview_1.DeviceOrientation.Landscape) {
	                formStyle.width = this.props.currentDevice.height;
	                formStyle.height = this.props.currentDevice.width;
	            }
	        }
	        if (this.props.deviceType === MobilePreview_1.DeviceType.Tablet) {
	            if (this.props.currentOrientation === MobilePreview_1.DeviceOrientation.Portrait) {
	                formStyle.width = this.props.currentDevice.height;
	                formStyle.height = this.props.currentDevice.width;
	            }
	        }
	        return (React.createElement("div", {className: mobilePreviewClassName, style: formStyle}, React.createElement("iframe", {className: iFrameStyle, src: this.props.url})));
	    };
	    return MobilePreviewDeviceView;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = MobilePreviewDeviceView;
	


/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	__webpack_require__(89);
	/* tslint:disable */
	var styles = {
	    mobilePreviewDevice: 'mobilePreviewDevice_8007f75e',
	    mobilePreviewPortrait: 'mobilePreviewPortrait_dfcad51b',
	    mobilePreviewLandscape: 'mobilePreviewLandscape_24fd4e70',
	    mobilePreviewTablet: 'mobilePreviewTablet_a50c4760',
	    mobilePreviewIframe: 'mobilePreviewIframe_7019ae2b',
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = styles;
	/* tslint:enable */
	


/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(90);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, ".mobilePreviewDevice_8007f75e{border-radius:15px;border-style:solid;position:relative;margin:auto;margin-top:70px}.mobilePreviewPortrait_dfcad51b{border-width:60px 16px}.mobilePreviewLandscape_24fd4e70{border-width:16px 60px}.mobilePreviewTablet_a50c4760{border-width:40px 40px}.mobilePreviewIframe_7019ae2b{width:100%;height:100%;position:absolute;border:none}", ""]);
	
	// exports


/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(2);
	var office_ui_fabric_react_1 = __webpack_require__(62);
	var MobilePreviewDimensionInput_module_scss_1 = __webpack_require__(92);
	var MobilePreviewDimensionInput_resx_1 = __webpack_require__(95);
	var MobilePreviewDimensionInput = (function (_super) {
	    __extends(MobilePreviewDimensionInput, _super);
	    function MobilePreviewDimensionInput(props) {
	        _super.call(this, props);
	    }
	    MobilePreviewDimensionInput.prototype.render = function () {
	        var xContainerClassName = office_ui_fabric_react_1.css(MobilePreviewDimensionInput_module_scss_1.default.mobilePreviewTextfieldXY, MobilePreviewDimensionInput_module_scss_1.default.xField);
	        var yContainerClassName = office_ui_fabric_react_1.css(MobilePreviewDimensionInput_module_scss_1.default.mobilePreviewTextfieldXY, MobilePreviewDimensionInput_module_scss_1.default.yField);
	        var textfieldsClass = office_ui_fabric_react_1.css(MobilePreviewDimensionInput_module_scss_1.default.xyTextfields, 'ms-borderColor-neutralTertiaryAlt', 'ms-fontColor-neutralSecondary');
	        var labelsClass = office_ui_fabric_react_1.css(MobilePreviewDimensionInput_module_scss_1.default.xyLabels, 'ms-fontColor-neutralTertiaryAlt');
	        return (React.createElement("div", null, React.createElement("div", {className: xContainerClassName}, React.createElement("label", {className: labelsClass}, MobilePreviewDimensionInput_resx_1.default.XDimension), React.createElement("input", {className: textfieldsClass, onChange: this.props.onChangedX, value: this.props.currentDevice.width})), React.createElement("div", {className: yContainerClassName}, React.createElement("label", {className: labelsClass}, MobilePreviewDimensionInput_resx_1.default.YDimension), React.createElement("input", {className: textfieldsClass, onChange: this.props.onChangedY, value: this.props.currentDevice.height}))));
	    };
	    return MobilePreviewDimensionInput;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = MobilePreviewDimensionInput;
	


/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	__webpack_require__(93);
	/* tslint:disable */
	var styles = {
	    xField: 'xField_3f27ac58',
	    yField: 'yField_d5411c02',
	    mobilePreviewTextfieldXY: 'mobilePreviewTextfieldXY_fc3c143e',
	    xyTextfields: 'xyTextfields_c719a73d',
	    xyLabels: 'xyLabels_1f602a26',
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = styles;
	/* tslint:enable */
	


/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(94);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, ".xField_3f27ac58{left:15px}.yField_d5411c02{left:95px}.mobilePreviewTextfieldXY_fc3c143e{margin:10px;position:absolute;top:15px;width:72px}.mobilePreviewTextfieldXY_fc3c143e .xyTextfields_c719a73d{position:absolute;min-width:20px;width:50px;right:0;height:25px;box-sizing:border-box;margin:0;box-shadow:none;border:1px solid;font-size:12px;padding:6px 10px 8px;outline:0}.mobilePreviewTextfieldXY_fc3c143e .xyLabels_1f602a26{position:absolute;font-size:20px;left:0;padding:0;font-weight:400;margin:0;box-shadow:none;box-sizing:border-box;display:block}", ""]);
	
	// exports


/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/* This file was generated by a tool. Modifying it will produce unexpected behavior. */
	/* tslint:disable */
	"use strict";
	var strings =  false
	    ? require('../../../resx-strings/en-us.json')
	    : __webpack_require__(19);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = strings['_DUar2rjv80IV+Gm5DFIjaA'] || {};
	


/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(2);
	var office_ui_fabric_react_1 = __webpack_require__(62);
	var MobilePreviewRotate_module_scss_1 = __webpack_require__(97);
	var MobilePreview_1 = __webpack_require__(61);
	var MobilePreviewRotate = (function (_super) {
	    __extends(MobilePreviewRotate, _super);
	    function MobilePreviewRotate(props) {
	        _super.call(this, props);
	        this._onClickRotate = this._onClickRotate.bind(this);
	    }
	    MobilePreviewRotate.prototype.render = function () {
	        var rotateIconClass = office_ui_fabric_react_1.css('ms-Icon', 'ms-Icon--reload', 'ms-fontColor-neutralLight', MobilePreviewRotate_module_scss_1.default.mobilePreviewRotateIcon);
	        return (React.createElement("div", null, React.createElement("a", {onClick: this._onClickRotate}, React.createElement("span", {className: rotateIconClass}))));
	    };
	    MobilePreviewRotate.prototype._onClickRotate = function () {
	        var orientation = this.props.currentOrientation === MobilePreview_1.DeviceOrientation.Portrait ?
	            MobilePreview_1.DeviceOrientation.Landscape : MobilePreview_1.DeviceOrientation.Portrait;
	        this.props.onRotate(orientation);
	    };
	    return MobilePreviewRotate;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = MobilePreviewRotate;
	


/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	__webpack_require__(98);
	/* tslint:disable */
	var styles = {
	    mobilePreviewRotateIcon: 'mobilePreviewRotateIcon_29f42d0f',
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = styles;
	/* tslint:enable */
	


/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(99);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, ".mobilePreviewRotateIcon_29f42d0f{position:absolute;right:30px;top:15px;font-size:50px;margin:5px;cursor:pointer;font-weight:100}", ""]);
	
	// exports


/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(101);
	


/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(102);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, "body{overflow:hidden}#SuiteNavPlaceHolder{background-color:#333;position:absolute;width:100%;z-index:5}.SPPageChrome-app{position:absolute;right:0;bottom:0;left:0;overflow:visible}.spPropertyPaneContainer{position:fixed;right:-340px;bottom:0}.spPageContentTransition{transition:right 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:right 367ms cubic-bezier(.1,.9,.2,1)}.WorkBench{position:absolute;top:0;right:0;bottom:0;left:0;overflow-x:hidden}.WorkBench-header{background:#000;height:50px}.WorkBench-headerMenu{background-color:#0075C7;color:#fff;font-size:21px;height:50px;left:0;line-height:50px;position:absolute;text-align:center;top:0;width:50px}.WorkBench-headerTitle{color:#fff;left:66px;line-height:50px;position:absolute;top:0}.WorkBench-headerTitle em{border-right:1px solid #666;font-style:normal;margin-right:12px;padding-right:20px}.WorkBench-headerPerson{background-color:#A6A6A6;border-left:5px solid #b6cfd8;color:#fff;font-size:48px;height:50px;line-height:50px;position:absolute;right:0;text-align:center;width:50px}.WorkBench-pageContent{border:1px solid #e5e5e5;border-bottom:0;bottom:0;margin:0 auto;max-width:924px;position:absolute;top:106px}html[dir=ltr] .WorkBench-pageContent{transition:right 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:right 367ms cubic-bezier(.1,.9,.2,1)}html[dir=rtl] .WorkBench-pageContent{transition:left 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:left 367ms cubic-bezier(.1,.9,.2,1)}html[dir=ltr] .WorkBench-pageContent{left:16px}html[dir=rtl] .WorkBench-pageContent{right:16px}html[dir=ltr] .WorkBench-pageContent{right:16px}html[dir=rtl] .WorkBench-pageContent{left:16px}.WorkBench-pageContent.has-pane{margin-right:340px}html[dir=ltr] .WorkBench-commandBar{transition:padding-right 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:padding-right 367ms cubic-bezier(.1,.9,.2,1)}html[dir=rtl] .WorkBench-commandBar{transition:padding-left 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:padding-left 367ms cubic-bezier(.1,.9,.2,1)}html[dir=ltr] .WorkBench-commandBar{padding-right:0}html[dir=rtl] .WorkBench-commandBar{padding-left:0}", ""]);
	
	// exports


/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var mobservable_1 = __webpack_require__(31);
	var sp_client_base_1 = __webpack_require__(8);
	var DEFAULT_TITLE = 'SharePoint Web Part Workbench';
	var WorkBenchStore = (function () {
	    function WorkBenchStore() {
	        this.appTitle = DEFAULT_TITLE;
	        this.isEditing = true;
	        this.isDetailsPaneVisible = false;
	    }
	    Object.defineProperty(WorkBenchStore.prototype, "displayMode", {
	        get: function () {
	            return this.isEditing ? sp_client_base_1.DisplayMode.Edit : sp_client_base_1.DisplayMode.Read;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    WorkBenchStore.prototype.toggleEdit = function () {
	        this.isEditing = !this.isEditing;
	    };
	    WorkBenchStore.prototype.toggleDetailsPane = function () {
	        this.isDetailsPaneVisible = !this.isDetailsPaneVisible;
	    };
	    __decorate([
	        mobservable_1.observable
	    ], WorkBenchStore.prototype, "isEditing", void 0);
	    return WorkBenchStore;
	}());
	exports.WorkBenchStore = WorkBenchStore;
	


/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var mobservable_1 = __webpack_require__(31);
	var lodash = __webpack_require__(105);
	var PageStore = (function () {
	    function PageStore(serviceScope) {
	        var _this = this;
	        this._PAGE_DATA_KEY = 'sp_webpart_workbench_state';
	        this._pageReadyPromise = new Promise(function (resolve) {
	            _this._resolvePageReady = resolve;
	        });
	        this._serviceScope = serviceScope;
	        this.pageDefinition = {
	            officeHeaderTitle: 'Office 365',
	            hasOfficeHeader: false,
	            hasNavPane: false,
	            hasCommandBar: false,
	            hasDetailsPane: true
	        };
	        this._autoSave = true;
	        // @todo: temporary solution to unblock Mike Wheaton. Will change this to depend on Canvas dirty state.
	        if (this._autoSave) {
	            window.setInterval(this.savePageState.bind(this), 3 * 1000);
	        }
	    }
	    Object.defineProperty(PageStore.prototype, "serviceScope", {
	        get: function () {
	            return this._serviceScope;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    PageStore.prototype.setSerializeCallback = function (callback) {
	        this._serializePage = callback;
	    };
	    PageStore.prototype.logSerializedStateCallback = function (callback) {
	        /* tslint:disable:no-string-literal */
	        if (window['SP']) {
	            window['SP'].logSerializedPageState = callback;
	        }
	    };
	    PageStore.prototype.setClearCallback = function (callback) {
	        this._clearPage = callback;
	    };
	    PageStore.prototype.update = function (options) {
	        lodash.merge(this.pageDefinition, options);
	    };
	    PageStore.prototype.savePageState = function () {
	        if (this._autoSave && this._serializePage) {
	            sessionStorage.setItem(this._PAGE_DATA_KEY, this._serializePage());
	        }
	    };
	    PageStore.prototype.clearPageState = function () {
	        if (this._autoSave) {
	            sessionStorage.removeItem(this._PAGE_DATA_KEY);
	        }
	        this._clearPage();
	    };
	    PageStore.prototype.getPageState = function () {
	        if (this._autoSave) {
	            return sessionStorage.getItem(this._PAGE_DATA_KEY);
	        }
	        else {
	            return undefined;
	        }
	    };
	    PageStore.prototype.getPageReadyPromise = function () {
	        return this._pageReadyPromise;
	    };
	    PageStore.prototype.setPageReady = function () {
	        this._resolvePageReady();
	    };
	    __decorate([
	        mobservable_1.observable
	    ], PageStore.prototype, "pageDefinition", void 0);
	    return PageStore;
	}());
	exports.PageStore = PageStore;
	


/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var camelCase = __webpack_require__(106);
	exports.camelCase = camelCase;
	var chunk = __webpack_require__(127);
	exports.chunk = chunk;
	var clone = __webpack_require__(140);
	exports.clone = clone;
	var cloneDeep = __webpack_require__(220);
	exports.cloneDeep = cloneDeep;
	var constant = __webpack_require__(219);
	exports.constant = constant;
	var difference = __webpack_require__(221);
	exports.difference = difference;
	var each = __webpack_require__(237);
	exports.each = each;
	var extend = __webpack_require__(275);
	exports.extend = extend;
	var escape = __webpack_require__(282);
	exports.escape = escape;
	var findIndex = __webpack_require__(284);
	exports.findIndex = findIndex;
	var flatten = __webpack_require__(286);
	exports.flatten = flatten;
	var forIn = __webpack_require__(287);
	exports.forIn = forIn;
	var get = __webpack_require__(262);
	exports.get = get;
	var has = __webpack_require__(288);
	exports.has = has;
	var isElement = __webpack_require__(289);
	exports.isElement = isElement;
	var isEqual = __webpack_require__(291);
	exports.isEqual = isEqual;
	var keys = __webpack_require__(179);
	exports.keys = keys;
	var merge = __webpack_require__(292);
	exports.merge = merge;
	var noop = __webpack_require__(297);
	exports.noop = noop;
	var once = __webpack_require__(298);
	exports.once = once;
	var random = __webpack_require__(300);
	exports.random = random;
	var sortBy = __webpack_require__(302);
	exports.sortBy = sortBy;
	var times = __webpack_require__(309);
	exports.times = times;
	var trimEnd = __webpack_require__(310);
	exports.trimEnd = trimEnd;
	var truncate = __webpack_require__(312);
	exports.truncate = truncate;
	var unescape = __webpack_require__(315);
	exports.unescape = unescape;
	var uniq = __webpack_require__(317);
	exports.uniq = uniq;
	var update = __webpack_require__(320);
	exports.update = update;
	var without = __webpack_require__(324);
	exports.without = without;
	


/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	var capitalize = __webpack_require__(107),
	    createCompounder = __webpack_require__(122);
	
	/**
	 * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to convert.
	 * @returns {string} Returns the camel cased string.
	 * @example
	 *
	 * _.camelCase('Foo Bar');
	 * // => 'fooBar'
	 *
	 * _.camelCase('--foo-bar--');
	 * // => 'fooBar'
	 *
	 * _.camelCase('__FOO_BAR__');
	 * // => 'fooBar'
	 */
	var camelCase = createCompounder(function(result, word, index) {
	  word = word.toLowerCase();
	  return result + (index ? capitalize(word) : word);
	});
	
	module.exports = camelCase;


/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	var toString = __webpack_require__(108),
	    upperFirst = __webpack_require__(116);
	
	/**
	 * Converts the first character of `string` to upper case and the remaining
	 * to lower case.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to capitalize.
	 * @returns {string} Returns the capitalized string.
	 * @example
	 *
	 * _.capitalize('FRED');
	 * // => 'Fred'
	 */
	function capitalize(string) {
	  return upperFirst(toString(string).toLowerCase());
	}
	
	module.exports = capitalize;


/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(109);
	
	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}
	
	module.exports = toString;


/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(110),
	    isSymbol = __webpack_require__(114);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = symbolProto ? symbolProto.toString : undefined;
	
	/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return symbolToString ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = baseToString;


/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(111);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module, global) {var checkGlobal = __webpack_require__(113);
	
	/** Used to determine if values are of the language type `Object`. */
	var objectTypes = {
	  'function': true,
	  'object': true
	};
	
	/** Detect free variable `exports`. */
	var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)
	  ? exports
	  : undefined;
	
	/** Detect free variable `module`. */
	var freeModule = (objectTypes[typeof module] && module && !module.nodeType)
	  ? module
	  : undefined;
	
	/** Detect free variable `global` from Node.js. */
	var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);
	
	/** Detect free variable `self`. */
	var freeSelf = checkGlobal(objectTypes[typeof self] && self);
	
	/** Detect free variable `window`. */
	var freeWindow = checkGlobal(objectTypes[typeof window] && window);
	
	/** Detect `this` as the global object. */
	var thisGlobal = checkGlobal(objectTypes[typeof this] && this);
	
	/**
	 * Used as a reference to the global object.
	 *
	 * The `this` value is used if it's the global object to avoid Greasemonkey's
	 * restricted `window` object, otherwise the `window` object is used.
	 */
	var root = freeGlobal ||
	  ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||
	    freeSelf || thisGlobal || Function('return this')();
	
	module.exports = root;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(112)(module), (function() { return this; }())))

/***/ },
/* 112 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 113 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is a global object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {null|Object} Returns `value` if it's a global object, else `null`.
	 */
	function checkGlobal(value) {
	  return (value && value.Object === Object) ? value : null;
	}
	
	module.exports = checkGlobal;


/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	var isObjectLike = __webpack_require__(115);
	
	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && objectToString.call(value) == symbolTag);
	}
	
	module.exports = isSymbol;


/***/ },
/* 115 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	var createCaseFirst = __webpack_require__(117);
	
	/**
	 * Converts the first character of `string` to upper case.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category String
	 * @param {string} [string=''] The string to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.upperFirst('fred');
	 * // => 'Fred'
	 *
	 * _.upperFirst('FRED');
	 * // => 'FRED'
	 */
	var upperFirst = createCaseFirst('toUpperCase');
	
	module.exports = upperFirst;


/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	var castSlice = __webpack_require__(118),
	    reHasComplexSymbol = __webpack_require__(120),
	    stringToArray = __webpack_require__(121),
	    toString = __webpack_require__(108);
	
	/**
	 * Creates a function like `_.lowerFirst`.
	 *
	 * @private
	 * @param {string} methodName The name of the `String` case method to use.
	 * @returns {Function} Returns the new case function.
	 */
	function createCaseFirst(methodName) {
	  return function(string) {
	    string = toString(string);
	
	    var strSymbols = reHasComplexSymbol.test(string)
	      ? stringToArray(string)
	      : undefined;
	
	    var chr = strSymbols
	      ? strSymbols[0]
	      : string.charAt(0);
	
	    var trailing = strSymbols
	      ? castSlice(strSymbols, 1).join('')
	      : string.slice(1);
	
	    return chr[methodName]() + trailing;
	  };
	}
	
	module.exports = createCaseFirst;


/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	var baseSlice = __webpack_require__(119);
	
	/**
	 * Casts `array` to a slice if it's needed.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {number} start The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the cast slice.
	 */
	function castSlice(array, start, end) {
	  var length = array.length;
	  end = end === undefined ? length : end;
	  return (!start && end >= length) ? array : baseSlice(array, start, end);
	}
	
	module.exports = castSlice;


/***/ },
/* 119 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.slice` without an iteratee call guard.
	 *
	 * @private
	 * @param {Array} array The array to slice.
	 * @param {number} [start=0] The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the slice of `array`.
	 */
	function baseSlice(array, start, end) {
	  var index = -1,
	      length = array.length;
	
	  if (start < 0) {
	    start = -start > length ? 0 : (length + start);
	  }
	  end = end > length ? length : end;
	  if (end < 0) {
	    end += length;
	  }
	  length = start > end ? 0 : ((end - start) >>> 0);
	  start >>>= 0;
	
	  var result = Array(length);
	  while (++index < length) {
	    result[index] = array[index + start];
	  }
	  return result;
	}
	
	module.exports = baseSlice;


/***/ },
/* 120 */
/***/ function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	    rsComboSymbolsRange = '\\u20d0-\\u20f0',
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsZWJ = '\\u200d';
	
	/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');
	
	module.exports = reHasComplexSymbol;


/***/ },
/* 121 */
/***/ function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	    rsComboSymbolsRange = '\\u20d0-\\u20f0',
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsAstral = '[' + rsAstralRange + ']',
	    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',
	    rsFitz = '\\ud83c[\\udffb-\\udfff]',
	    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	    rsNonAstral = '[^' + rsAstralRange + ']',
	    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	    rsZWJ = '\\u200d';
	
	/** Used to compose unicode regexes. */
	var reOptMod = rsModifier + '?',
	    rsOptVar = '[' + rsVarRange + ']?',
	    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	    rsSeq = rsOptVar + reOptMod + rsOptJoin,
	    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
	
	/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
	
	/**
	 * Converts `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function stringToArray(string) {
	  return string.match(reComplexSymbol);
	}
	
	module.exports = stringToArray;


/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	var arrayReduce = __webpack_require__(123),
	    deburr = __webpack_require__(124),
	    words = __webpack_require__(126);
	
	/** Used to compose unicode capture groups. */
	var rsApos = "['\u2019]";
	
	/** Used to match apostrophes. */
	var reApos = RegExp(rsApos, 'g');
	
	/**
	 * Creates a function like `_.camelCase`.
	 *
	 * @private
	 * @param {Function} callback The function to combine each word.
	 * @returns {Function} Returns the new compounder function.
	 */
	function createCompounder(callback) {
	  return function(string) {
	    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
	  };
	}
	
	module.exports = createCompounder;


/***/ },
/* 123 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.reduce` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @param {boolean} [initAccum] Specify using the first element of `array` as
	 *  the initial value.
	 * @returns {*} Returns the accumulated value.
	 */
	function arrayReduce(array, iteratee, accumulator, initAccum) {
	  var index = -1,
	      length = array.length;
	
	  if (initAccum && length) {
	    accumulator = array[++index];
	  }
	  while (++index < length) {
	    accumulator = iteratee(accumulator, array[index], index, array);
	  }
	  return accumulator;
	}
	
	module.exports = arrayReduce;


/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	var deburrLetter = __webpack_require__(125),
	    toString = __webpack_require__(108);
	
	/** Used to match latin-1 supplementary letters (excluding mathematical operators). */
	var reLatin1 = /[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g;
	
	/** Used to compose unicode character classes. */
	var rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	    rsComboSymbolsRange = '\\u20d0-\\u20f0';
	
	/** Used to compose unicode capture groups. */
	var rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']';
	
	/**
	 * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
	 * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	 */
	var reComboMark = RegExp(rsCombo, 'g');
	
	/**
	 * Deburrs `string` by converting
	 * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	 * to basic latin letters and removing
	 * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to deburr.
	 * @returns {string} Returns the deburred string.
	 * @example
	 *
	 * _.deburr('déjà vu');
	 * // => 'deja vu'
	 */
	function deburr(string) {
	  string = toString(string);
	  return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');
	}
	
	module.exports = deburr;


/***/ },
/* 125 */
/***/ function(module, exports) {

	/** Used to map latin-1 supplementary letters to basic latin letters. */
	var deburredLetters = {
	  '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
	  '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
	  '\xc7': 'C',  '\xe7': 'c',
	  '\xd0': 'D',  '\xf0': 'd',
	  '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
	  '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
	  '\xcC': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
	  '\xeC': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
	  '\xd1': 'N',  '\xf1': 'n',
	  '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
	  '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
	  '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
	  '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
	  '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
	  '\xc6': 'Ae', '\xe6': 'ae',
	  '\xde': 'Th', '\xfe': 'th',
	  '\xdf': 'ss'
	};
	
	/**
	 * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.
	 *
	 * @private
	 * @param {string} letter The matched letter to deburr.
	 * @returns {string} Returns the deburred letter.
	 */
	function deburrLetter(letter) {
	  return deburredLetters[letter];
	}
	
	module.exports = deburrLetter;


/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	var toString = __webpack_require__(108);
	
	/** Used to match non-compound words composed of alphanumeric characters. */
	var reBasicWord = /[a-zA-Z0-9]+/g;
	
	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	    rsComboSymbolsRange = '\\u20d0-\\u20f0',
	    rsDingbatRange = '\\u2700-\\u27bf',
	    rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
	    rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
	    rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
	    rsPunctuationRange = '\\u2000-\\u206f',
	    rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
	    rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
	    rsVarRange = '\\ufe0e\\ufe0f',
	    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
	
	/** Used to compose unicode capture groups. */
	var rsApos = "['\u2019]",
	    rsBreak = '[' + rsBreakRange + ']',
	    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',
	    rsDigits = '\\d+',
	    rsDingbat = '[' + rsDingbatRange + ']',
	    rsLower = '[' + rsLowerRange + ']',
	    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
	    rsFitz = '\\ud83c[\\udffb-\\udfff]',
	    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	    rsNonAstral = '[^' + rsAstralRange + ']',
	    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	    rsUpper = '[' + rsUpperRange + ']',
	    rsZWJ = '\\u200d';
	
	/** Used to compose unicode regexes. */
	var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',
	    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',
	    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
	    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
	    reOptMod = rsModifier + '?',
	    rsOptVar = '[' + rsVarRange + ']?',
	    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	    rsSeq = rsOptVar + reOptMod + rsOptJoin,
	    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;
	
	/** Used to match complex or compound words. */
	var reComplexWord = RegExp([
	  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
	  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',
	  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,
	  rsUpper + '+' + rsOptUpperContr,
	  rsDigits,
	  rsEmoji
	].join('|'), 'g');
	
	/** Used to detect strings that need a more robust regexp to match words. */
	var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
	
	/**
	 * Splits `string` into an array of its words.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to inspect.
	 * @param {RegExp|string} [pattern] The pattern to match words.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {Array} Returns the words of `string`.
	 * @example
	 *
	 * _.words('fred, barney, & pebbles');
	 * // => ['fred', 'barney', 'pebbles']
	 *
	 * _.words('fred, barney, & pebbles', /[^, ]+/g);
	 * // => ['fred', 'barney', '&', 'pebbles']
	 */
	function words(string, pattern, guard) {
	  string = toString(string);
	  pattern = guard ? undefined : pattern;
	
	  if (pattern === undefined) {
	    pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;
	  }
	  return string.match(pattern) || [];
	}
	
	module.exports = words;


/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	var baseSlice = __webpack_require__(119),
	    isIterateeCall = __webpack_require__(128),
	    toInteger = __webpack_require__(137);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeCeil = Math.ceil,
	    nativeMax = Math.max;
	
	/**
	 * Creates an array of elements split into groups the length of `size`.
	 * If `array` can't be split evenly, the final chunk will be the remaining
	 * elements.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Array
	 * @param {Array} array The array to process.
	 * @param {number} [size=1] The length of each chunk
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {Array} Returns the new array of chunks.
	 * @example
	 *
	 * _.chunk(['a', 'b', 'c', 'd'], 2);
	 * // => [['a', 'b'], ['c', 'd']]
	 *
	 * _.chunk(['a', 'b', 'c', 'd'], 3);
	 * // => [['a', 'b', 'c'], ['d']]
	 */
	function chunk(array, size, guard) {
	  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
	    size = 1;
	  } else {
	    size = nativeMax(toInteger(size), 0);
	  }
	  var length = array ? array.length : 0;
	  if (!length || size < 1) {
	    return [];
	  }
	  var index = 0,
	      resIndex = 0,
	      result = Array(nativeCeil(length / size));
	
	  while (index < length) {
	    result[resIndex++] = baseSlice(array, index, (index += size));
	  }
	  return result;
	}
	
	module.exports = chunk;


/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(129),
	    isArrayLike = __webpack_require__(130),
	    isIndex = __webpack_require__(136),
	    isObject = __webpack_require__(134);
	
	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	        ? (isArrayLike(object) && isIndex(index, object.length))
	        : (type == 'string' && index in object)
	      ) {
	    return eq(object[index], value);
	  }
	  return false;
	}
	
	module.exports = isIterateeCall;


/***/ },
/* 129 */
/***/ function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 * var other = { 'user': 'fred' };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}
	
	module.exports = eq;


/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	var getLength = __webpack_require__(131),
	    isFunction = __webpack_require__(133),
	    isLength = __webpack_require__(135);
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(getLength(value)) && !isFunction(value);
	}
	
	module.exports = isArrayLike;


/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(132);
	
	/**
	 * Gets the "length" property value of `object`.
	 *
	 * **Note:** This function is used to avoid a
	 * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects
	 * Safari on at least iOS 8.1-8.3 ARM64.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {*} Returns the "length" value.
	 */
	var getLength = baseProperty('length');
	
	module.exports = getLength;


/***/ },
/* 132 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}
	
	module.exports = baseProperty;


/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(134);
	
	/** `Object#toString` result references. */
	var funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8 which returns 'object' for typed array and weak map constructors,
	  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}
	
	module.exports = isFunction;


/***/ },
/* 134 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	module.exports = isObject;


/***/ },
/* 135 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This function is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length,
	 *  else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	module.exports = isLength;


/***/ },
/* 136 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}
	
	module.exports = isIndex;


/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	var toFinite = __webpack_require__(138);
	
	/**
	 * Converts `value` to an integer.
	 *
	 * **Note:** This function is loosely based on
	 * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toInteger(3.2);
	 * // => 3
	 *
	 * _.toInteger(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toInteger(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toInteger('3.2');
	 * // => 3
	 */
	function toInteger(value) {
	  var result = toFinite(value),
	      remainder = result % 1;
	
	  return result === result ? (remainder ? result - remainder : result) : 0;
	}
	
	module.exports = toInteger;


/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	var toNumber = __webpack_require__(139);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_INTEGER = 1.7976931348623157e+308;
	
	/**
	 * Converts `value` to a finite number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.12.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted number.
	 * @example
	 *
	 * _.toFinite(3.2);
	 * // => 3.2
	 *
	 * _.toFinite(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toFinite(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toFinite('3.2');
	 * // => 3.2
	 */
	function toFinite(value) {
	  if (!value) {
	    return value === 0 ? value : 0;
	  }
	  value = toNumber(value);
	  if (value === INFINITY || value === -INFINITY) {
	    var sign = (value < 0 ? -1 : 1);
	    return sign * MAX_INTEGER;
	  }
	  return value === value ? value : 0;
	}
	
	module.exports = toFinite;


/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(133),
	    isObject = __webpack_require__(134),
	    isSymbol = __webpack_require__(114);
	
	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;
	
	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;
	
	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	
	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;
	
	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;
	
	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;
	
	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = isFunction(value.valueOf) ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}
	
	module.exports = toNumber;


/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	var baseClone = __webpack_require__(141);
	
	/**
	 * Creates a shallow clone of `value`.
	 *
	 * **Note:** This method is loosely based on the
	 * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
	 * and supports cloning arrays, array buffers, booleans, date objects, maps,
	 * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
	 * arrays. The own enumerable properties of `arguments` objects are cloned
	 * as plain objects. An empty object is returned for uncloneable values such
	 * as error objects, functions, DOM nodes, and WeakMaps.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to clone.
	 * @returns {*} Returns the cloned value.
	 * @see _.cloneDeep
	 * @example
	 *
	 * var objects = [{ 'a': 1 }, { 'b': 2 }];
	 *
	 * var shallow = _.clone(objects);
	 * console.log(shallow[0] === objects[0]);
	 * // => true
	 */
	function clone(value) {
	  return baseClone(value, false, true);
	}
	
	module.exports = clone;


/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(142),
	    arrayEach = __webpack_require__(175),
	    assignValue = __webpack_require__(176),
	    baseAssign = __webpack_require__(177),
	    cloneBuffer = __webpack_require__(190),
	    copyArray = __webpack_require__(191),
	    copySymbols = __webpack_require__(192),
	    getAllKeys = __webpack_require__(194),
	    getTag = __webpack_require__(197),
	    initCloneArray = __webpack_require__(202),
	    initCloneByTag = __webpack_require__(203),
	    initCloneObject = __webpack_require__(216),
	    isArray = __webpack_require__(187),
	    isBuffer = __webpack_require__(218),
	    isHostObject = __webpack_require__(162),
	    isObject = __webpack_require__(134),
	    keys = __webpack_require__(179);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values supported by `_.clone`. */
	var cloneableTags = {};
	cloneableTags[argsTag] = cloneableTags[arrayTag] =
	cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	cloneableTags[boolTag] = cloneableTags[dateTag] =
	cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	cloneableTags[int32Tag] = cloneableTags[mapTag] =
	cloneableTags[numberTag] = cloneableTags[objectTag] =
	cloneableTags[regexpTag] = cloneableTags[setTag] =
	cloneableTags[stringTag] = cloneableTags[symbolTag] =
	cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	cloneableTags[errorTag] = cloneableTags[funcTag] =
	cloneableTags[weakMapTag] = false;
	
	/**
	 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	 * traversed objects.
	 *
	 * @private
	 * @param {*} value The value to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @param {boolean} [isFull] Specify a clone including symbols.
	 * @param {Function} [customizer] The function to customize cloning.
	 * @param {string} [key] The key of `value`.
	 * @param {Object} [object] The parent object of `value`.
	 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	 * @returns {*} Returns the cloned value.
	 */
	function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
	  var result;
	  if (customizer) {
	    result = object ? customizer(value, key, object, stack) : customizer(value);
	  }
	  if (result !== undefined) {
	    return result;
	  }
	  if (!isObject(value)) {
	    return value;
	  }
	  var isArr = isArray(value);
	  if (isArr) {
	    result = initCloneArray(value);
	    if (!isDeep) {
	      return copyArray(value, result);
	    }
	  } else {
	    var tag = getTag(value),
	        isFunc = tag == funcTag || tag == genTag;
	
	    if (isBuffer(value)) {
	      return cloneBuffer(value, isDeep);
	    }
	    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	      if (isHostObject(value)) {
	        return object ? value : {};
	      }
	      result = initCloneObject(isFunc ? {} : value);
	      if (!isDeep) {
	        return copySymbols(value, baseAssign(result, value));
	      }
	    } else {
	      if (!cloneableTags[tag]) {
	        return object ? value : {};
	      }
	      result = initCloneByTag(value, tag, baseClone, isDeep);
	    }
	  }
	  // Check for circular references and return its corresponding clone.
	  stack || (stack = new Stack);
	  var stacked = stack.get(value);
	  if (stacked) {
	    return stacked;
	  }
	  stack.set(value, result);
	
	  if (!isArr) {
	    var props = isFull ? getAllKeys(value) : keys(value);
	  }
	  // Recursively populate clone (susceptible to call stack limits).
	  arrayEach(props || value, function(subValue, key) {
	    if (props) {
	      key = subValue;
	      subValue = value[key];
	    }
	    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
	  });
	  return result;
	}
	
	module.exports = baseClone;


/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(143),
	    stackClear = __webpack_require__(150),
	    stackDelete = __webpack_require__(151),
	    stackGet = __webpack_require__(152),
	    stackHas = __webpack_require__(153),
	    stackSet = __webpack_require__(154);
	
	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  this.__data__ = new ListCache(entries);
	}
	
	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;
	
	module.exports = Stack;


/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(144),
	    listCacheDelete = __webpack_require__(145),
	    listCacheGet = __webpack_require__(147),
	    listCacheHas = __webpack_require__(148),
	    listCacheSet = __webpack_require__(149);
	
	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;
	
	module.exports = ListCache;


/***/ },
/* 144 */
/***/ function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	}
	
	module.exports = listCacheClear;


/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(146);
	
	/** Used for built-in method references. */
	var arrayProto = Array.prototype;
	
	/** Built-in value references. */
	var splice = arrayProto.splice;
	
	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  return true;
	}
	
	module.exports = listCacheDelete;


/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(129);
	
	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}
	
	module.exports = assocIndexOf;


/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(146);
	
	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  return index < 0 ? undefined : data[index][1];
	}
	
	module.exports = listCacheGet;


/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(146);
	
	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}
	
	module.exports = listCacheHas;


/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(146);
	
	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}
	
	module.exports = listCacheSet;


/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(143);
	
	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	}
	
	module.exports = stackClear;


/***/ },
/* 151 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  return this.__data__['delete'](key);
	}
	
	module.exports = stackDelete;


/***/ },
/* 152 */
/***/ function(module, exports) {

	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}
	
	module.exports = stackGet;


/***/ },
/* 153 */
/***/ function(module, exports) {

	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}
	
	module.exports = stackHas;


/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(143),
	    MapCache = __webpack_require__(155);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var cache = this.__data__;
	  if (cache instanceof ListCache && cache.__data__.length == LARGE_ARRAY_SIZE) {
	    cache = this.__data__ = new MapCache(cache.__data__);
	  }
	  cache.set(key, value);
	  return this;
	}
	
	module.exports = stackSet;


/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(156),
	    mapCacheDelete = __webpack_require__(169),
	    mapCacheGet = __webpack_require__(172),
	    mapCacheHas = __webpack_require__(173),
	    mapCacheSet = __webpack_require__(174);
	
	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;
	
	module.exports = MapCache;


/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(157),
	    ListCache = __webpack_require__(143),
	    Map = __webpack_require__(168);
	
	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}
	
	module.exports = mapCacheClear;


/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(158),
	    hashDelete = __webpack_require__(164),
	    hashGet = __webpack_require__(165),
	    hashHas = __webpack_require__(166),
	    hashSet = __webpack_require__(167);
	
	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;
	
	module.exports = Hash;


/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(159);
	
	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	}
	
	module.exports = hashClear;


/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(160);
	
	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');
	
	module.exports = nativeCreate;


/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	var isNative = __webpack_require__(161);
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = object[key];
	  return isNative(value) ? value : undefined;
	}
	
	module.exports = getNative;


/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(133),
	    isHostObject = __webpack_require__(162),
	    isObject = __webpack_require__(134),
	    toSource = __webpack_require__(163);
	
	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
	
	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	/**
	 * Checks if `value` is a native function.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 * @example
	 *
	 * _.isNative(Array.prototype.push);
	 * // => true
	 *
	 * _.isNative(_);
	 * // => false
	 */
	function isNative(value) {
	  if (!isObject(value)) {
	    return false;
	  }
	  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}
	
	module.exports = isNative;


/***/ },
/* 162 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}
	
	module.exports = isHostObject;


/***/ },
/* 163 */
/***/ function(module, exports) {

	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;
	
	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to process.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}
	
	module.exports = toSource;


/***/ },
/* 164 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  return this.has(key) && delete this.__data__[key];
	}
	
	module.exports = hashDelete;


/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(159);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}
	
	module.exports = hashGet;


/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(159);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
	}
	
	module.exports = hashHas;


/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(159);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}
	
	module.exports = hashSet;


/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(160),
	    root = __webpack_require__(111);
	
	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');
	
	module.exports = Map;


/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(170);
	
	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  return getMapData(this, key)['delete'](key);
	}
	
	module.exports = mapCacheDelete;


/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(171);
	
	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}
	
	module.exports = getMapData;


/***/ },
/* 171 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}
	
	module.exports = isKeyable;


/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(170);
	
	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}
	
	module.exports = mapCacheGet;


/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(170);
	
	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}
	
	module.exports = mapCacheHas;


/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(170);
	
	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  getMapData(this, key).set(key, value);
	  return this;
	}
	
	module.exports = mapCacheSet;


/***/ },
/* 175 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.forEach` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}
	
	module.exports = arrayEach;


/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(129);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Assigns `value` to `key` of `object` if the existing value is not equivalent
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	      (value === undefined && !(key in object))) {
	    object[key] = value;
	  }
	}
	
	module.exports = assignValue;


/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(178),
	    keys = __webpack_require__(179);
	
	/**
	 * The base implementation of `_.assign` without support for multiple sources
	 * or `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @returns {Object} Returns `object`.
	 */
	function baseAssign(object, source) {
	  return object && copyObject(source, keys(source), object);
	}
	
	module.exports = baseAssign;


/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(176);
	
	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property identifiers to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object, customizer) {
	  object || (object = {});
	
	  var index = -1,
	      length = props.length;
	
	  while (++index < length) {
	    var key = props[index];
	
	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : source[key];
	
	    assignValue(object, key, newValue);
	  }
	  return object;
	}
	
	module.exports = copyObject;


/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(180),
	    baseKeys = __webpack_require__(182),
	    indexKeys = __webpack_require__(183),
	    isArrayLike = __webpack_require__(130),
	    isIndex = __webpack_require__(136),
	    isPrototype = __webpack_require__(189);
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  var isProto = isPrototype(object);
	  if (!(isProto || isArrayLike(object))) {
	    return baseKeys(object);
	  }
	  var indexes = indexKeys(object),
	      skipIndexes = !!indexes,
	      result = indexes || [],
	      length = result.length;
	
	  for (var key in object) {
	    if (baseHas(object, key) &&
	        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	        !(isProto && key == 'constructor')) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = keys;


/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	var getPrototype = __webpack_require__(181);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.has` without support for deep paths.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHas(object, key) {
	  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
	  // that are composed entirely of index properties, return `false` for
	  // `hasOwnProperty` checks of them.
	  return hasOwnProperty.call(object, key) ||
	    (typeof object == 'object' && key in object && getPrototype(object) === null);
	}
	
	module.exports = baseHas;


/***/ },
/* 181 */
/***/ function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetPrototype = Object.getPrototypeOf;
	
	/**
	 * Gets the `[[Prototype]]` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {null|Object} Returns the `[[Prototype]]`.
	 */
	function getPrototype(value) {
	  return nativeGetPrototype(Object(value));
	}
	
	module.exports = getPrototype;


/***/ },
/* 182 */
/***/ function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = Object.keys;
	
	/**
	 * The base implementation of `_.keys` which doesn't skip the constructor
	 * property of prototypes or treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  return nativeKeys(Object(object));
	}
	
	module.exports = baseKeys;


/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(184),
	    isArguments = __webpack_require__(185),
	    isArray = __webpack_require__(187),
	    isLength = __webpack_require__(135),
	    isString = __webpack_require__(188);
	
	/**
	 * Creates an array of index keys for `object` values of arrays,
	 * `arguments` objects, and strings, otherwise `null` is returned.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array|null} Returns index keys, else `null`.
	 */
	function indexKeys(object) {
	  var length = object ? object.length : undefined;
	  if (isLength(length) &&
	      (isArray(object) || isString(object) || isArguments(object))) {
	    return baseTimes(length, String);
	  }
	  return null;
	}
	
	module.exports = indexKeys;


/***/ },
/* 184 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	module.exports = baseTimes;


/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLikeObject = __webpack_require__(186);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}
	
	module.exports = isArguments;


/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(130),
	    isObjectLike = __webpack_require__(115);
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	module.exports = isArrayLikeObject;


/***/ },
/* 187 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @type {Function}
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	module.exports = isArray;


/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(187),
	    isObjectLike = __webpack_require__(115);
	
	/** `Object#toString` result references. */
	var stringTag = '[object String]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `String` primitive or object.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isString('abc');
	 * // => true
	 *
	 * _.isString(1);
	 * // => false
	 */
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
	}
	
	module.exports = isString;


/***/ },
/* 189 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	module.exports = isPrototype;


/***/ },
/* 190 */
/***/ function(module, exports) {

	/**
	 * Creates a clone of  `buffer`.
	 *
	 * @private
	 * @param {Buffer} buffer The buffer to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Buffer} Returns the cloned buffer.
	 */
	function cloneBuffer(buffer, isDeep) {
	  if (isDeep) {
	    return buffer.slice();
	  }
	  var result = new buffer.constructor(buffer.length);
	  buffer.copy(result);
	  return result;
	}
	
	module.exports = cloneBuffer;


/***/ },
/* 191 */
/***/ function(module, exports) {

	/**
	 * Copies the values of `source` to `array`.
	 *
	 * @private
	 * @param {Array} source The array to copy values from.
	 * @param {Array} [array=[]] The array to copy values to.
	 * @returns {Array} Returns `array`.
	 */
	function copyArray(source, array) {
	  var index = -1,
	      length = source.length;
	
	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}
	
	module.exports = copyArray;


/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(178),
	    getSymbols = __webpack_require__(193);
	
	/**
	 * Copies own symbol properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy symbols from.
	 * @param {Object} [object={}] The object to copy symbols to.
	 * @returns {Object} Returns `object`.
	 */
	function copySymbols(source, object) {
	  return copyObject(source, getSymbols(source), object);
	}
	
	module.exports = copySymbols;


/***/ },
/* 193 */
/***/ function(module, exports) {

	/** Built-in value references. */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	
	/**
	 * Creates an array of the own enumerable symbol properties of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	function getSymbols(object) {
	  // Coerce `object` to an object to avoid non-object errors in V8.
	  // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.
	  return getOwnPropertySymbols(Object(object));
	}
	
	// Fallback for IE < 11.
	if (!getOwnPropertySymbols) {
	  getSymbols = function() {
	    return [];
	  };
	}
	
	module.exports = getSymbols;


/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(195),
	    getSymbols = __webpack_require__(193),
	    keys = __webpack_require__(179);
	
	/**
	 * Creates an array of own enumerable property names and symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeys(object) {
	  return baseGetAllKeys(object, keys, getSymbols);
	}
	
	module.exports = getAllKeys;


/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(196),
	    isArray = __webpack_require__(187);
	
	/**
	 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @param {Function} symbolsFunc The function to get the symbols of `object`.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	  var result = keysFunc(object);
	  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	}
	
	module.exports = baseGetAllKeys;


/***/ },
/* 196 */
/***/ function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;
	
	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}
	
	module.exports = arrayPush;


/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	var DataView = __webpack_require__(198),
	    Map = __webpack_require__(168),
	    Promise = __webpack_require__(199),
	    Set = __webpack_require__(200),
	    WeakMap = __webpack_require__(201),
	    toSource = __webpack_require__(163);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    setTag = '[object Set]',
	    weakMapTag = '[object WeakMap]';
	
	var dataViewTag = '[object DataView]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);
	
	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function getTag(value) {
	  return objectToString.call(value);
	}
	
	// Fallback for data views, maps, sets, and weak maps in IE 11,
	// for data views in Edge, and promises in Node.js.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = objectToString.call(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : undefined;
	
	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}
	
	module.exports = getTag;


/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(160),
	    root = __webpack_require__(111);
	
	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView');
	
	module.exports = DataView;


/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(160),
	    root = __webpack_require__(111);
	
	/* Built-in method references that are verified to be native. */
	var Promise = getNative(root, 'Promise');
	
	module.exports = Promise;


/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(160),
	    root = __webpack_require__(111);
	
	/* Built-in method references that are verified to be native. */
	var Set = getNative(root, 'Set');
	
	module.exports = Set;


/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(160),
	    root = __webpack_require__(111);
	
	/* Built-in method references that are verified to be native. */
	var WeakMap = getNative(root, 'WeakMap');
	
	module.exports = WeakMap;


/***/ },
/* 202 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Initializes an array clone.
	 *
	 * @private
	 * @param {Array} array The array to clone.
	 * @returns {Array} Returns the initialized clone.
	 */
	function initCloneArray(array) {
	  var length = array.length,
	      result = array.constructor(length);
	
	  // Add properties assigned by `RegExp#exec`.
	  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	    result.index = array.index;
	    result.input = array.input;
	  }
	  return result;
	}
	
	module.exports = initCloneArray;


/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(204),
	    cloneDataView = __webpack_require__(206),
	    cloneMap = __webpack_require__(207),
	    cloneRegExp = __webpack_require__(210),
	    cloneSet = __webpack_require__(211),
	    cloneSymbol = __webpack_require__(214),
	    cloneTypedArray = __webpack_require__(215);
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/**
	 * Initializes an object clone based on its `toStringTag`.
	 *
	 * **Note:** This function only supports cloning values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @param {string} tag The `toStringTag` of the object to clone.
	 * @param {Function} cloneFunc The function to clone values.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneByTag(object, tag, cloneFunc, isDeep) {
	  var Ctor = object.constructor;
	  switch (tag) {
	    case arrayBufferTag:
	      return cloneArrayBuffer(object);
	
	    case boolTag:
	    case dateTag:
	      return new Ctor(+object);
	
	    case dataViewTag:
	      return cloneDataView(object, isDeep);
	
	    case float32Tag: case float64Tag:
	    case int8Tag: case int16Tag: case int32Tag:
	    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	      return cloneTypedArray(object, isDeep);
	
	    case mapTag:
	      return cloneMap(object, isDeep, cloneFunc);
	
	    case numberTag:
	    case stringTag:
	      return new Ctor(object);
	
	    case regexpTag:
	      return cloneRegExp(object);
	
	    case setTag:
	      return cloneSet(object, isDeep, cloneFunc);
	
	    case symbolTag:
	      return cloneSymbol(object);
	  }
	}
	
	module.exports = initCloneByTag;


/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	var Uint8Array = __webpack_require__(205);
	
	/**
	 * Creates a clone of `arrayBuffer`.
	 *
	 * @private
	 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	 * @returns {ArrayBuffer} Returns the cloned array buffer.
	 */
	function cloneArrayBuffer(arrayBuffer) {
	  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	  return result;
	}
	
	module.exports = cloneArrayBuffer;


/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(111);
	
	/** Built-in value references. */
	var Uint8Array = root.Uint8Array;
	
	module.exports = Uint8Array;


/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(204);
	
	/**
	 * Creates a clone of `dataView`.
	 *
	 * @private
	 * @param {Object} dataView The data view to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned data view.
	 */
	function cloneDataView(dataView, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	}
	
	module.exports = cloneDataView;


/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	var addMapEntry = __webpack_require__(208),
	    arrayReduce = __webpack_require__(123),
	    mapToArray = __webpack_require__(209);
	
	/**
	 * Creates a clone of `map`.
	 *
	 * @private
	 * @param {Object} map The map to clone.
	 * @param {Function} cloneFunc The function to clone values.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned map.
	 */
	function cloneMap(map, isDeep, cloneFunc) {
	  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
	  return arrayReduce(array, addMapEntry, new map.constructor);
	}
	
	module.exports = cloneMap;


/***/ },
/* 208 */
/***/ function(module, exports) {

	/**
	 * Adds the key-value `pair` to `map`.
	 *
	 * @private
	 * @param {Object} map The map to modify.
	 * @param {Array} pair The key-value pair to add.
	 * @returns {Object} Returns `map`.
	 */
	function addMapEntry(map, pair) {
	  // Don't return `Map#set` because it doesn't return the map instance in IE 11.
	  map.set(pair[0], pair[1]);
	  return map;
	}
	
	module.exports = addMapEntry;


/***/ },
/* 209 */
/***/ function(module, exports) {

	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);
	
	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}
	
	module.exports = mapToArray;


/***/ },
/* 210 */
/***/ function(module, exports) {

	/** Used to match `RegExp` flags from their coerced string values. */
	var reFlags = /\w*$/;
	
	/**
	 * Creates a clone of `regexp`.
	 *
	 * @private
	 * @param {Object} regexp The regexp to clone.
	 * @returns {Object} Returns the cloned regexp.
	 */
	function cloneRegExp(regexp) {
	  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	  result.lastIndex = regexp.lastIndex;
	  return result;
	}
	
	module.exports = cloneRegExp;


/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	var addSetEntry = __webpack_require__(212),
	    arrayReduce = __webpack_require__(123),
	    setToArray = __webpack_require__(213);
	
	/**
	 * Creates a clone of `set`.
	 *
	 * @private
	 * @param {Object} set The set to clone.
	 * @param {Function} cloneFunc The function to clone values.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned set.
	 */
	function cloneSet(set, isDeep, cloneFunc) {
	  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
	  return arrayReduce(array, addSetEntry, new set.constructor);
	}
	
	module.exports = cloneSet;


/***/ },
/* 212 */
/***/ function(module, exports) {

	/**
	 * Adds `value` to `set`.
	 *
	 * @private
	 * @param {Object} set The set to modify.
	 * @param {*} value The value to add.
	 * @returns {Object} Returns `set`.
	 */
	function addSetEntry(set, value) {
	  set.add(value);
	  return set;
	}
	
	module.exports = addSetEntry;


/***/ },
/* 213 */
/***/ function(module, exports) {

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);
	
	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}
	
	module.exports = setToArray;


/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(110);
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	/**
	 * Creates a clone of the `symbol` object.
	 *
	 * @private
	 * @param {Object} symbol The symbol object to clone.
	 * @returns {Object} Returns the cloned symbol object.
	 */
	function cloneSymbol(symbol) {
	  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	}
	
	module.exports = cloneSymbol;


/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(204);
	
	/**
	 * Creates a clone of `typedArray`.
	 *
	 * @private
	 * @param {Object} typedArray The typed array to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned typed array.
	 */
	function cloneTypedArray(typedArray, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	}
	
	module.exports = cloneTypedArray;


/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(217),
	    getPrototype = __webpack_require__(181),
	    isPrototype = __webpack_require__(189);
	
	/**
	 * Initializes an object clone.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneObject(object) {
	  return (typeof object.constructor == 'function' && !isPrototype(object))
	    ? baseCreate(getPrototype(object))
	    : {};
	}
	
	module.exports = initCloneObject;


/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(134);
	
	/** Built-in value references. */
	var objectCreate = Object.create;
	
	/**
	 * The base implementation of `_.create` without support for assigning
	 * properties to the created object.
	 *
	 * @private
	 * @param {Object} prototype The object to inherit from.
	 * @returns {Object} Returns the new object.
	 */
	function baseCreate(proto) {
	  return isObject(proto) ? objectCreate(proto) : {};
	}
	
	module.exports = baseCreate;


/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var constant = __webpack_require__(219),
	    root = __webpack_require__(111);
	
	/** Used to determine if values are of the language type `Object`. */
	var objectTypes = {
	  'function': true,
	  'object': true
	};
	
	/** Detect free variable `exports`. */
	var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)
	  ? exports
	  : undefined;
	
	/** Detect free variable `module`. */
	var freeModule = (objectTypes[typeof module] && module && !module.nodeType)
	  ? module
	  : undefined;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = (freeModule && freeModule.exports === freeExports)
	  ? freeExports
	  : undefined;
	
	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined;
	
	/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */
	var isBuffer = !Buffer ? constant(false) : function(value) {
	  return value instanceof Buffer;
	};
	
	module.exports = isBuffer;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(112)(module)))

/***/ },
/* 219 */
/***/ function(module, exports) {

	/**
	 * Creates a function that returns `value`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {*} value The value to return from the new function.
	 * @returns {Function} Returns the new constant function.
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 * var getter = _.constant(object);
	 *
	 * getter() === object;
	 * // => true
	 */
	function constant(value) {
	  return function() {
	    return value;
	  };
	}
	
	module.exports = constant;


/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	var baseClone = __webpack_require__(141);
	
	/**
	 * This method is like `_.clone` except that it recursively clones `value`.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.0.0
	 * @category Lang
	 * @param {*} value The value to recursively clone.
	 * @returns {*} Returns the deep cloned value.
	 * @see _.clone
	 * @example
	 *
	 * var objects = [{ 'a': 1 }, { 'b': 2 }];
	 *
	 * var deep = _.cloneDeep(objects);
	 * console.log(deep[0] === objects[0]);
	 * // => false
	 */
	function cloneDeep(value) {
	  return baseClone(value, true, true);
	}
	
	module.exports = cloneDeep;


/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	var baseDifference = __webpack_require__(222),
	    baseFlatten = __webpack_require__(233),
	    isArrayLikeObject = __webpack_require__(186),
	    rest = __webpack_require__(235);
	
	/**
	 * Creates an array of unique `array` values not included in the other given
	 * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * for equality comparisons. The order of result values is determined by the
	 * order they occur in the first array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {...Array} [values] The values to exclude.
	 * @returns {Array} Returns the new array of filtered values.
	 * @see _.without, _.xor
	 * @example
	 *
	 * _.difference([3, 2, 1], [4, 2]);
	 * // => [3, 1]
	 */
	var difference = rest(function(array, values) {
	  return isArrayLikeObject(array)
	    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
	    : [];
	});
	
	module.exports = difference;


/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(223),
	    arrayIncludes = __webpack_require__(226),
	    arrayIncludesWith = __webpack_require__(229),
	    arrayMap = __webpack_require__(230),
	    baseUnary = __webpack_require__(231),
	    cacheHas = __webpack_require__(232);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * The base implementation of methods like `_.difference` without support
	 * for excluding multiple arrays or iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Array} values The values to exclude.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of filtered values.
	 */
	function baseDifference(array, values, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      isCommon = true,
	      length = array.length,
	      result = [],
	      valuesLength = values.length;
	
	  if (!length) {
	    return result;
	  }
	  if (iteratee) {
	    values = arrayMap(values, baseUnary(iteratee));
	  }
	  if (comparator) {
	    includes = arrayIncludesWith;
	    isCommon = false;
	  }
	  else if (values.length >= LARGE_ARRAY_SIZE) {
	    includes = cacheHas;
	    isCommon = false;
	    values = new SetCache(values);
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value) : value;
	
	    value = (comparator || value !== 0) ? value : 0;
	    if (isCommon && computed === computed) {
	      var valuesIndex = valuesLength;
	      while (valuesIndex--) {
	        if (values[valuesIndex] === computed) {
	          continue outer;
	        }
	      }
	      result.push(value);
	    }
	    else if (!includes(values, computed, comparator)) {
	      result.push(value);
	    }
	  }
	  return result;
	}
	
	module.exports = baseDifference;


/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(155),
	    setCacheAdd = __webpack_require__(224),
	    setCacheHas = __webpack_require__(225);
	
	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values ? values.length : 0;
	
	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}
	
	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;
	
	module.exports = SetCache;


/***/ },
/* 224 */
/***/ function(module, exports) {

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}
	
	module.exports = setCacheAdd;


/***/ },
/* 225 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}
	
	module.exports = setCacheHas;


/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(227);
	
	/**
	 * A specialized version of `_.includes` for arrays without support for
	 * specifying an index to search from.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {*} target The value to search for.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludes(array, value) {
	  return !!array.length && baseIndexOf(array, value, 0) > -1;
	}
	
	module.exports = arrayIncludes;


/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	var indexOfNaN = __webpack_require__(228);
	
	/**
	 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseIndexOf(array, value, fromIndex) {
	  if (value !== value) {
	    return indexOfNaN(array, fromIndex);
	  }
	  var index = fromIndex - 1,
	      length = array.length;
	
	  while (++index < length) {
	    if (array[index] === value) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = baseIndexOf;


/***/ },
/* 228 */
/***/ function(module, exports) {

	/**
	 * Gets the index at which the first occurrence of `NaN` is found in `array`.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {number} fromIndex The index to search from.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {number} Returns the index of the matched `NaN`, else `-1`.
	 */
	function indexOfNaN(array, fromIndex, fromRight) {
	  var length = array.length,
	      index = fromIndex + (fromRight ? 0 : -1);
	
	  while ((fromRight ? index-- : ++index < length)) {
	    var other = array[index];
	    if (other !== other) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = indexOfNaN;


/***/ },
/* 229 */
/***/ function(module, exports) {

	/**
	 * This function is like `arrayIncludes` except that it accepts a comparator.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {*} target The value to search for.
	 * @param {Function} comparator The comparator invoked per element.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludesWith(array, value, comparator) {
	  var index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    if (comparator(value, array[index])) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arrayIncludesWith;


/***/ },
/* 230 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array.length,
	      result = Array(length);
	
	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}
	
	module.exports = arrayMap;


/***/ },
/* 231 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing wrapper metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}
	
	module.exports = baseUnary;


/***/ },
/* 232 */
/***/ function(module, exports) {

	/**
	 * Checks if a cache value for `key` exists.
	 *
	 * @private
	 * @param {Object} cache The cache to query.
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function cacheHas(cache, key) {
	  return cache.has(key);
	}
	
	module.exports = cacheHas;


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(196),
	    isFlattenable = __webpack_require__(234);
	
	/**
	 * The base implementation of `_.flatten` with support for restricting flattening.
	 *
	 * @private
	 * @param {Array} array The array to flatten.
	 * @param {number} depth The maximum recursion depth.
	 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	 * @param {Array} [result=[]] The initial result value.
	 * @returns {Array} Returns the new flattened array.
	 */
	function baseFlatten(array, depth, predicate, isStrict, result) {
	  var index = -1,
	      length = array.length;
	
	  predicate || (predicate = isFlattenable);
	  result || (result = []);
	
	  while (++index < length) {
	    var value = array[index];
	    if (depth > 0 && predicate(value)) {
	      if (depth > 1) {
	        // Recursively flatten arrays (susceptible to call stack limits).
	        baseFlatten(value, depth - 1, predicate, isStrict, result);
	      } else {
	        arrayPush(result, value);
	      }
	    } else if (!isStrict) {
	      result[result.length] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = baseFlatten;


/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	var isArguments = __webpack_require__(185),
	    isArray = __webpack_require__(187);
	
	/**
	 * Checks if `value` is a flattenable `arguments` object or array.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	 */
	function isFlattenable(value) {
	  return isArray(value) || isArguments(value);
	}
	
	module.exports = isFlattenable;


/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(236),
	    toInteger = __webpack_require__(137);
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Creates a function that invokes `func` with the `this` binding of the
	 * created function and arguments from `start` and beyond provided as
	 * an array.
	 *
	 * **Note:** This method is based on the
	 * [rest parameter](https://mdn.io/rest_parameters).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Function
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 * @example
	 *
	 * var say = _.rest(function(what, names) {
	 *   return what + ' ' + _.initial(names).join(', ') +
	 *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	 * });
	 *
	 * say('hello', 'fred', 'barney', 'pebbles');
	 * // => 'hello fred, barney, & pebbles'
	 */
	function rest(func, start) {
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);
	
	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    switch (start) {
	      case 0: return func.call(this, array);
	      case 1: return func.call(this, args[0], array);
	      case 2: return func.call(this, args[0], args[1], array);
	    }
	    var otherArgs = Array(start + 1);
	    index = -1;
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = array;
	    return apply(func, this, otherArgs);
	  };
	}
	
	module.exports = rest;


/***/ },
/* 236 */
/***/ function(module, exports) {

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  var length = args.length;
	  switch (length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}
	
	module.exports = apply;


/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(238);


/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(175),
	    baseEach = __webpack_require__(239),
	    baseIteratee = __webpack_require__(244),
	    isArray = __webpack_require__(187);
	
	/**
	 * Iterates over elements of `collection` and invokes `iteratee` for each element.
	 * The iteratee is invoked with three arguments: (value, index|key, collection).
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * **Note:** As with other "Collections" methods, objects with a "length"
	 * property are iterated like arrays. To avoid this behavior use `_.forIn`
	 * or `_.forOwn` for object iteration.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @alias each
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 * @see _.forEachRight
	 * @example
	 *
	 * _([1, 2]).forEach(function(value) {
	 *   console.log(value);
	 * });
	 * // => Logs `1` then `2`.
	 *
	 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	 *   console.log(key);
	 * });
	 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	 */
	function forEach(collection, iteratee) {
	  var func = isArray(collection) ? arrayEach : baseEach;
	  return func(collection, baseIteratee(iteratee, 3));
	}
	
	module.exports = forEach;


/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(240),
	    createBaseEach = __webpack_require__(243);
	
	/**
	 * The base implementation of `_.forEach` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 */
	var baseEach = createBaseEach(baseForOwn);
	
	module.exports = baseEach;


/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(241),
	    keys = __webpack_require__(179);
	
	/**
	 * The base implementation of `_.forOwn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForOwn(object, iteratee) {
	  return object && baseFor(object, iteratee, keys);
	}
	
	module.exports = baseForOwn;


/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	var createBaseFor = __webpack_require__(242);
	
	/**
	 * The base implementation of `baseForOwn` which iterates over `object`
	 * properties returned by `keysFunc` and invokes `iteratee` for each property.
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();
	
	module.exports = baseFor;


/***/ },
/* 242 */
/***/ function(module, exports) {

	/**
	 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var index = -1,
	        iterable = Object(object),
	        props = keysFunc(object),
	        length = props.length;
	
	    while (length--) {
	      var key = props[fromRight ? length : ++index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}
	
	module.exports = createBaseFor;


/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(130);
	
	/**
	 * Creates a `baseEach` or `baseEachRight` function.
	 *
	 * @private
	 * @param {Function} eachFunc The function to iterate over a collection.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseEach(eachFunc, fromRight) {
	  return function(collection, iteratee) {
	    if (collection == null) {
	      return collection;
	    }
	    if (!isArrayLike(collection)) {
	      return eachFunc(collection, iteratee);
	    }
	    var length = collection.length,
	        index = fromRight ? length : -1,
	        iterable = Object(collection);
	
	    while ((fromRight ? index-- : ++index < length)) {
	      if (iteratee(iterable[index], index, iterable) === false) {
	        break;
	      }
	    }
	    return collection;
	  };
	}
	
	module.exports = createBaseEach;


/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	var baseMatches = __webpack_require__(245),
	    baseMatchesProperty = __webpack_require__(261),
	    identity = __webpack_require__(272),
	    isArray = __webpack_require__(187),
	    property = __webpack_require__(273);
	
	/**
	 * The base implementation of `_.iteratee`.
	 *
	 * @private
	 * @param {*} [value=_.identity] The value to convert to an iteratee.
	 * @returns {Function} Returns the iteratee.
	 */
	function baseIteratee(value) {
	  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	  if (typeof value == 'function') {
	    return value;
	  }
	  if (value == null) {
	    return identity;
	  }
	  if (typeof value == 'object') {
	    return isArray(value)
	      ? baseMatchesProperty(value[0], value[1])
	      : baseMatches(value);
	  }
	  return property(value);
	}
	
	module.exports = baseIteratee;


/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsMatch = __webpack_require__(246),
	    getMatchData = __webpack_require__(254),
	    matchesStrictComparable = __webpack_require__(260);
	
	/**
	 * The base implementation of `_.matches` which doesn't clone `source`.
	 *
	 * @private
	 * @param {Object} source The object of property values to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatches(source) {
	  var matchData = getMatchData(source);
	  if (matchData.length == 1 && matchData[0][2]) {
	    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	  }
	  return function(object) {
	    return object === source || baseIsMatch(object, source, matchData);
	  };
	}
	
	module.exports = baseMatches;


/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(142),
	    baseIsEqual = __webpack_require__(247);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * The base implementation of `_.isMatch` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to inspect.
	 * @param {Object} source The object of property values to match.
	 * @param {Array} matchData The property names, values, and compare flags to match.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	 */
	function baseIsMatch(object, source, matchData, customizer) {
	  var index = matchData.length,
	      length = index,
	      noCustomizer = !customizer;
	
	  if (object == null) {
	    return !length;
	  }
	  object = Object(object);
	  while (index--) {
	    var data = matchData[index];
	    if ((noCustomizer && data[2])
	          ? data[1] !== object[data[0]]
	          : !(data[0] in object)
	        ) {
	      return false;
	    }
	  }
	  while (++index < length) {
	    data = matchData[index];
	    var key = data[0],
	        objValue = object[key],
	        srcValue = data[1];
	
	    if (noCustomizer && data[2]) {
	      if (objValue === undefined && !(key in object)) {
	        return false;
	      }
	    } else {
	      var stack = new Stack;
	      if (customizer) {
	        var result = customizer(objValue, srcValue, key, object, source, stack);
	      }
	      if (!(result === undefined
	            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)
	            : result
	          )) {
	        return false;
	      }
	    }
	  }
	  return true;
	}
	
	module.exports = baseIsMatch;


/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(248),
	    isObject = __webpack_require__(134),
	    isObjectLike = __webpack_require__(115);
	
	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {boolean} [bitmask] The bitmask of comparison flags.
	 *  The bitmask may be composed of the following flags:
	 *     1 - Unordered comparison
	 *     2 - Partial comparison
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, customizer, bitmask, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
	}
	
	module.exports = baseIsEqual;


/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(142),
	    equalArrays = __webpack_require__(249),
	    equalByTag = __webpack_require__(251),
	    equalObjects = __webpack_require__(252),
	    getTag = __webpack_require__(197),
	    isArray = __webpack_require__(187),
	    isHostObject = __webpack_require__(162),
	    isTypedArray = __webpack_require__(253);
	
	/** Used to compose bitmasks for comparison styles. */
	var PARTIAL_COMPARE_FLAG = 2;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = arrayTag,
	      othTag = arrayTag;
	
	  if (!objIsArr) {
	    objTag = getTag(object);
	    objTag = objTag == argsTag ? objectTag : objTag;
	  }
	  if (!othIsArr) {
	    othTag = getTag(other);
	    othTag = othTag == argsTag ? objectTag : othTag;
	  }
	  var objIsObj = objTag == objectTag && !isHostObject(object),
	      othIsObj = othTag == objectTag && !isHostObject(other),
	      isSameTag = objTag == othTag;
	
	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
	      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
	  }
	  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
	
	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;
	
	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
	}
	
	module.exports = baseIsEqualDeep;


/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(223),
	    arraySome = __webpack_require__(250);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      arrLength = array.length,
	      othLength = other.length;
	
	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked) {
	    return stacked == other;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;
	
	  stack.set(array, other);
	
	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!seen.has(othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
	              return seen.add(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, customizer, bitmask, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  return result;
	}
	
	module.exports = equalArrays;


/***/ },
/* 250 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arraySome;


/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(110),
	    Uint8Array = __webpack_require__(205),
	    equalArrays = __webpack_require__(249),
	    mapToArray = __webpack_require__(209),
	    setToArray = __webpack_require__(213);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]';
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
	  switch (tag) {
	    case dataViewTag:
	      if ((object.byteLength != other.byteLength) ||
	          (object.byteOffset != other.byteOffset)) {
	        return false;
	      }
	      object = object.buffer;
	      other = other.buffer;
	
	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;
	
	    case boolTag:
	    case dateTag:
	      // Coerce dates and booleans to numbers, dates to milliseconds and
	      // booleans to `1` or `0` treating invalid dates coerced to `NaN` as
	      // not equal.
	      return +object == +other;
	
	    case errorTag:
	      return object.name == other.name && object.message == other.message;
	
	    case numberTag:
	      // Treat `NaN` vs. `NaN` as equal.
	      return (object != +object) ? other != +other : object == +other;
	
	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings, primitives and objects,
	      // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring
	      // for more details.
	      return object == (other + '');
	
	    case mapTag:
	      var convert = mapToArray;
	
	    case setTag:
	      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
	      convert || (convert = setToArray);
	
	      if (object.size != other.size && !isPartial) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      bitmask |= UNORDERED_COMPARE_FLAG;
	      stack.set(object, other);
	
	      // Recursively compare objects (susceptible to call stack limits).
	      return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);
	
	    case symbolTag:
	      if (symbolValueOf) {
	        return symbolValueOf.call(object) == symbolValueOf.call(other);
	      }
	  }
	  return false;
	}
	
	module.exports = equalByTag;


/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(180),
	    keys = __webpack_require__(179);
	
	/** Used to compose bitmasks for comparison styles. */
	var PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      objProps = keys(object),
	      objLength = objProps.length,
	      othProps = keys(other),
	      othLength = othProps.length;
	
	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : baseHas(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);
	
	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;
	
	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  return result;
	}
	
	module.exports = equalObjects;


/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	var isLength = __webpack_require__(135),
	    isObjectLike = __webpack_require__(115);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	function isTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
	}
	
	module.exports = isTypedArray;


/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	var isStrictComparable = __webpack_require__(255),
	    toPairs = __webpack_require__(256);
	
	/**
	 * Gets the property names, values, and compare flags of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the match data of `object`.
	 */
	function getMatchData(object) {
	  var result = toPairs(object),
	      length = result.length;
	
	  while (length--) {
	    result[length][2] = isStrictComparable(result[length][1]);
	  }
	  return result;
	}
	
	module.exports = getMatchData;


/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(134);
	
	/**
	 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` if suitable for strict
	 *  equality comparisons, else `false`.
	 */
	function isStrictComparable(value) {
	  return value === value && !isObject(value);
	}
	
	module.exports = isStrictComparable;


/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	var createToPairs = __webpack_require__(257),
	    keys = __webpack_require__(179);
	
	/**
	 * Creates an array of own enumerable string keyed-value pairs for `object`
	 * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
	 * entries are returned.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @alias entries
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the key-value pairs.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.toPairs(new Foo);
	 * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
	 */
	var toPairs = createToPairs(keys);
	
	module.exports = toPairs;


/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	var baseToPairs = __webpack_require__(258),
	    getTag = __webpack_require__(197),
	    mapToArray = __webpack_require__(209),
	    setToPairs = __webpack_require__(259);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    setTag = '[object Set]';
	
	/**
	 * Creates a `_.toPairs` or `_.toPairsIn` function.
	 *
	 * @private
	 * @param {Function} keysFunc The function to get the keys of a given object.
	 * @returns {Function} Returns the new pairs function.
	 */
	function createToPairs(keysFunc) {
	  return function(object) {
	    var tag = getTag(object);
	    if (tag == mapTag) {
	      return mapToArray(object);
	    }
	    if (tag == setTag) {
	      return setToPairs(object);
	    }
	    return baseToPairs(object, keysFunc(object));
	  };
	}
	
	module.exports = createToPairs;


/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(230);
	
	/**
	 * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
	 * of key-value pairs for `object` corresponding to the property names of `props`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array} props The property names to get values for.
	 * @returns {Object} Returns the key-value pairs.
	 */
	function baseToPairs(object, props) {
	  return arrayMap(props, function(key) {
	    return [key, object[key]];
	  });
	}
	
	module.exports = baseToPairs;


/***/ },
/* 259 */
/***/ function(module, exports) {

	/**
	 * Converts `set` to its value-value pairs.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the value-value pairs.
	 */
	function setToPairs(set) {
	  var index = -1,
	      result = Array(set.size);
	
	  set.forEach(function(value) {
	    result[++index] = [value, value];
	  });
	  return result;
	}
	
	module.exports = setToPairs;


/***/ },
/* 260 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `matchesProperty` for source values suitable
	 * for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function matchesStrictComparable(key, srcValue) {
	  return function(object) {
	    if (object == null) {
	      return false;
	    }
	    return object[key] === srcValue &&
	      (srcValue !== undefined || (key in Object(object)));
	  };
	}
	
	module.exports = matchesStrictComparable;


/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(247),
	    get = __webpack_require__(262),
	    hasIn = __webpack_require__(269),
	    isKey = __webpack_require__(267),
	    isStrictComparable = __webpack_require__(255),
	    matchesStrictComparable = __webpack_require__(260),
	    toKey = __webpack_require__(268);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	 *
	 * @private
	 * @param {string} path The path of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatchesProperty(path, srcValue) {
	  if (isKey(path) && isStrictComparable(srcValue)) {
	    return matchesStrictComparable(toKey(path), srcValue);
	  }
	  return function(object) {
	    var objValue = get(object, path);
	    return (objValue === undefined && objValue === srcValue)
	      ? hasIn(object, path)
	      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
	  };
	}
	
	module.exports = baseMatchesProperty;


/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(263);
	
	/**
	 * Gets the value at `path` of `object`. If the resolved value is
	 * `undefined`, the `defaultValue` is used in its place.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.get(object, 'a[0].b.c');
	 * // => 3
	 *
	 * _.get(object, ['a', '0', 'b', 'c']);
	 * // => 3
	 *
	 * _.get(object, 'a.b.c', 'default');
	 * // => 'default'
	 */
	function get(object, path, defaultValue) {
	  var result = object == null ? undefined : baseGet(object, path);
	  return result === undefined ? defaultValue : result;
	}
	
	module.exports = get;


/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(264),
	    isKey = __webpack_require__(267),
	    toKey = __webpack_require__(268);
	
	/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path) {
	  path = isKey(path, object) ? [path] : castPath(path);
	
	  var index = 0,
	      length = path.length;
	
	  while (object != null && index < length) {
	    object = object[toKey(path[index++])];
	  }
	  return (index && index == length) ? object : undefined;
	}
	
	module.exports = baseGet;


/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(187),
	    stringToPath = __webpack_require__(265);
	
	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Array} Returns the cast property path array.
	 */
	function castPath(value) {
	  return isArray(value) ? value : stringToPath(value);
	}
	
	module.exports = castPath;


/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	var memoize = __webpack_require__(266),
	    toString = __webpack_require__(108);
	
	/** Used to match property names within property paths. */
	var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]/g;
	
	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;
	
	/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */
	var stringToPath = memoize(function(string) {
	  var result = [];
	  toString(string).replace(rePropName, function(match, number, quote, string) {
	    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	});
	
	module.exports = stringToPath;


/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(155);
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided, it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the
	 * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoized function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */
	function memoize(func, resolver) {
	  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var memoized = function() {
	    var args = arguments,
	        key = resolver ? resolver.apply(this, args) : args[0],
	        cache = memoized.cache;
	
	    if (cache.has(key)) {
	      return cache.get(key);
	    }
	    var result = func.apply(this, args);
	    memoized.cache = cache.set(key, result);
	    return result;
	  };
	  memoized.cache = new (memoize.Cache || MapCache);
	  return memoized;
	}
	
	// Assign cache to `_.memoize`.
	memoize.Cache = MapCache;
	
	module.exports = memoize;


/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(187),
	    isSymbol = __webpack_require__(114);
	
	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;
	
	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  if (isArray(value)) {
	    return false;
	  }
	  var type = typeof value;
	  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	      value == null || isSymbol(value)) {
	    return true;
	  }
	  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	    (object != null && value in Object(object));
	}
	
	module.exports = isKey;


/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(114);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = toKey;


/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	var baseHasIn = __webpack_require__(270),
	    hasPath = __webpack_require__(271);
	
	/**
	 * Checks if `path` is a direct or inherited property of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.hasIn(object, 'a');
	 * // => true
	 *
	 * _.hasIn(object, 'a.b');
	 * // => true
	 *
	 * _.hasIn(object, ['a', 'b']);
	 * // => true
	 *
	 * _.hasIn(object, 'b');
	 * // => false
	 */
	function hasIn(object, path) {
	  return object != null && hasPath(object, path, baseHasIn);
	}
	
	module.exports = hasIn;


/***/ },
/* 270 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.hasIn` without support for deep paths.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHasIn(object, key) {
	  return key in Object(object);
	}
	
	module.exports = baseHasIn;


/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(264),
	    isArguments = __webpack_require__(185),
	    isArray = __webpack_require__(187),
	    isIndex = __webpack_require__(136),
	    isKey = __webpack_require__(267),
	    isLength = __webpack_require__(135),
	    isString = __webpack_require__(188),
	    toKey = __webpack_require__(268);
	
	/**
	 * Checks if `path` exists on `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @param {Function} hasFunc The function to check properties.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 */
	function hasPath(object, path, hasFunc) {
	  path = isKey(path, object) ? [path] : castPath(path);
	
	  var result,
	      index = -1,
	      length = path.length;
	
	  while (++index < length) {
	    var key = toKey(path[index]);
	    if (!(result = object != null && hasFunc(object, key))) {
	      break;
	    }
	    object = object[key];
	  }
	  if (result) {
	    return result;
	  }
	  var length = object ? object.length : 0;
	  return !!length && isLength(length) && isIndex(key, length) &&
	    (isArray(object) || isString(object) || isArguments(object));
	}
	
	module.exports = hasPath;


/***/ },
/* 272 */
/***/ function(module, exports) {

	/**
	 * This method returns the first argument given to it.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 *
	 * _.identity(object) === object;
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(132),
	    basePropertyDeep = __webpack_require__(274),
	    isKey = __webpack_require__(267),
	    toKey = __webpack_require__(268);
	
	/**
	 * Creates a function that returns the value at `path` of a given object.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 * @example
	 *
	 * var objects = [
	 *   { 'a': { 'b': 2 } },
	 *   { 'a': { 'b': 1 } }
	 * ];
	 *
	 * _.map(objects, _.property('a.b'));
	 * // => [2, 1]
	 *
	 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	 * // => [1, 2]
	 */
	function property(path) {
	  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	}
	
	module.exports = property;


/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(263);
	
	/**
	 * A specialized version of `baseProperty` which supports deep paths.
	 *
	 * @private
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function basePropertyDeep(path) {
	  return function(object) {
	    return baseGet(object, path);
	  };
	}
	
	module.exports = basePropertyDeep;


/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(276);


/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(176),
	    copyObject = __webpack_require__(178),
	    createAssigner = __webpack_require__(277),
	    isArrayLike = __webpack_require__(130),
	    isPrototype = __webpack_require__(189),
	    keysIn = __webpack_require__(278);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */
	var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');
	
	/**
	 * This method is like `_.assign` except that it iterates over own and
	 * inherited source properties.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @alias extend
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @see _.assign
	 * @example
	 *
	 * function Foo() {
	 *   this.b = 2;
	 * }
	 *
	 * function Bar() {
	 *   this.d = 4;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 * Bar.prototype.e = 5;
	 *
	 * _.assignIn({ 'a': 1 }, new Foo, new Bar);
	 * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }
	 */
	var assignIn = createAssigner(function(object, source) {
	  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
	    copyObject(source, keysIn(source), object);
	    return;
	  }
	  for (var key in source) {
	    assignValue(object, key, source[key]);
	  }
	});
	
	module.exports = assignIn;


/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	var isIterateeCall = __webpack_require__(128),
	    rest = __webpack_require__(235);
	
	/**
	 * Creates a function like `_.assign`.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return rest(function(object, sources) {
	    var index = -1,
	        length = sources.length,
	        customizer = length > 1 ? sources[length - 1] : undefined,
	        guard = length > 2 ? sources[2] : undefined;
	
	    customizer = (assigner.length > 3 && typeof customizer == 'function')
	      ? (length--, customizer)
	      : undefined;
	
	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    object = Object(object);
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, index, customizer);
	      }
	    }
	    return object;
	  });
	}
	
	module.exports = createAssigner;


/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	var baseKeysIn = __webpack_require__(279),
	    indexKeys = __webpack_require__(183),
	    isIndex = __webpack_require__(136),
	    isPrototype = __webpack_require__(189);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  var index = -1,
	      isProto = isPrototype(object),
	      props = baseKeysIn(object),
	      propsLength = props.length,
	      indexes = indexKeys(object),
	      skipIndexes = !!indexes,
	      result = indexes || [],
	      length = result.length;
	
	  while (++index < propsLength) {
	    var key = props[index];
	    if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = keysIn;


/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	var Reflect = __webpack_require__(280),
	    iteratorToArray = __webpack_require__(281);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Built-in value references. */
	var enumerate = Reflect ? Reflect.enumerate : undefined,
	    propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/**
	 * The base implementation of `_.keysIn` which doesn't skip the constructor
	 * property of prototypes or treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeysIn(object) {
	  object = object == null ? object : Object(object);
	
	  var result = [];
	  for (var key in object) {
	    result.push(key);
	  }
	  return result;
	}
	
	// Fallback for IE < 9 with es6-shim.
	if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {
	  baseKeysIn = function(object) {
	    return iteratorToArray(enumerate(object));
	  };
	}
	
	module.exports = baseKeysIn;


/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(111);
	
	/** Built-in value references. */
	var Reflect = root.Reflect;
	
	module.exports = Reflect;


/***/ },
/* 281 */
/***/ function(module, exports) {

	/**
	 * Converts `iterator` to an array.
	 *
	 * @private
	 * @param {Object} iterator The iterator to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function iteratorToArray(iterator) {
	  var data,
	      result = [];
	
	  while (!(data = iterator.next()).done) {
	    result.push(data.value);
	  }
	  return result;
	}
	
	module.exports = iteratorToArray;


/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	var escapeHtmlChar = __webpack_require__(283),
	    toString = __webpack_require__(108);
	
	/** Used to match HTML entities and HTML characters. */
	var reUnescapedHtml = /[&<>"'`]/g,
	    reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
	
	/**
	 * Converts the characters "&", "<", ">", '"', "'", and "\`" in `string` to
	 * their corresponding HTML entities.
	 *
	 * **Note:** No other characters are escaped. To escape additional
	 * characters use a third-party library like [_he_](https://mths.be/he).
	 *
	 * Though the ">" character is escaped for symmetry, characters like
	 * ">" and "/" don't need escaping in HTML and have no special meaning
	 * unless they're part of a tag or unquoted attribute value. See
	 * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
	 * (under "semi-related fun fact") for more details.
	 *
	 * Backticks are escaped because in IE < 9, they can break out of
	 * attribute values or HTML comments. See [#59](https://html5sec.org/#59),
	 * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and
	 * [#133](https://html5sec.org/#133) of the
	 * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.
	 *
	 * When working with HTML you should always
	 * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
	 * XSS vectors.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category String
	 * @param {string} [string=''] The string to escape.
	 * @returns {string} Returns the escaped string.
	 * @example
	 *
	 * _.escape('fred, barney, & pebbles');
	 * // => 'fred, barney, &amp; pebbles'
	 */
	function escape(string) {
	  string = toString(string);
	  return (string && reHasUnescapedHtml.test(string))
	    ? string.replace(reUnescapedHtml, escapeHtmlChar)
	    : string;
	}
	
	module.exports = escape;


/***/ },
/* 283 */
/***/ function(module, exports) {

	/** Used to map characters to HTML entities. */
	var htmlEscapes = {
	  '&': '&amp;',
	  '<': '&lt;',
	  '>': '&gt;',
	  '"': '&quot;',
	  "'": '&#39;',
	  '`': '&#96;'
	};
	
	/**
	 * Used by `_.escape` to convert characters to HTML entities.
	 *
	 * @private
	 * @param {string} chr The matched character to escape.
	 * @returns {string} Returns the escaped character.
	 */
	function escapeHtmlChar(chr) {
	  return htmlEscapes[chr];
	}
	
	module.exports = escapeHtmlChar;


/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(285),
	    baseIteratee = __webpack_require__(244);
	
	/**
	 * This method is like `_.find` except that it returns the index of the first
	 * element `predicate` returns truthy for instead of the element itself.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.1.0
	 * @category Array
	 * @param {Array} array The array to search.
	 * @param {Array|Function|Object|string} [predicate=_.identity]
	 *  The function invoked per iteration.
	 * @returns {number} Returns the index of the found element, else `-1`.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney',  'active': false },
	 *   { 'user': 'fred',    'active': false },
	 *   { 'user': 'pebbles', 'active': true }
	 * ];
	 *
	 * _.findIndex(users, function(o) { return o.user == 'barney'; });
	 * // => 0
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.findIndex(users, { 'user': 'fred', 'active': false });
	 * // => 1
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.findIndex(users, ['active', false]);
	 * // => 0
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.findIndex(users, 'active');
	 * // => 2
	 */
	function findIndex(array, predicate) {
	  return (array && array.length)
	    ? baseFindIndex(array, baseIteratee(predicate, 3))
	    : -1;
	}
	
	module.exports = findIndex;


/***/ },
/* 285 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.findIndex` and `_.findLastIndex` without
	 * support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {Function} predicate The function invoked per iteration.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseFindIndex(array, predicate, fromRight) {
	  var length = array.length,
	      index = fromRight ? length : -1;
	
	  while ((fromRight ? index-- : ++index < length)) {
	    if (predicate(array[index], index, array)) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = baseFindIndex;


/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(233);
	
	/**
	 * Flattens `array` a single level deep.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to flatten.
	 * @returns {Array} Returns the new flattened array.
	 * @example
	 *
	 * _.flatten([1, [2, [3, [4]], 5]]);
	 * // => [1, 2, [3, [4]], 5]
	 */
	function flatten(array) {
	  var length = array ? array.length : 0;
	  return length ? baseFlatten(array, 1) : [];
	}
	
	module.exports = flatten;


/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(241),
	    baseIteratee = __webpack_require__(244),
	    keysIn = __webpack_require__(278);
	
	/**
	 * Iterates over own and inherited enumerable string keyed properties of an
	 * object and invokes `iteratee` for each property. The iteratee is invoked
	 * with three arguments: (value, key, object). Iteratee functions may exit
	 * iteration early by explicitly returning `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.3.0
	 * @category Object
	 * @param {Object} object The object to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 * @see _.forInRight
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.forIn(new Foo, function(value, key) {
	 *   console.log(key);
	 * });
	 * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
	 */
	function forIn(object, iteratee) {
	  return object == null
	    ? object
	    : baseFor(object, baseIteratee(iteratee, 3), keysIn);
	}
	
	module.exports = forIn;


/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(180),
	    hasPath = __webpack_require__(271);
	
	/**
	 * Checks if `path` is a direct property of `object`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = { 'a': { 'b': 2 } };
	 * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.has(object, 'a');
	 * // => true
	 *
	 * _.has(object, 'a.b');
	 * // => true
	 *
	 * _.has(object, ['a', 'b']);
	 * // => true
	 *
	 * _.has(other, 'a');
	 * // => false
	 */
	function has(object, path) {
	  return object != null && hasPath(object, path, baseHas);
	}
	
	module.exports = has;


/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	var isObjectLike = __webpack_require__(115),
	    isPlainObject = __webpack_require__(290);
	
	/**
	 * Checks if `value` is likely a DOM element.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a DOM element,
	 *  else `false`.
	 * @example
	 *
	 * _.isElement(document.body);
	 * // => true
	 *
	 * _.isElement('<body>');
	 * // => false
	 */
	function isElement(value) {
	  return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);
	}
	
	module.exports = isElement;


/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	var getPrototype = __webpack_require__(181),
	    isHostObject = __webpack_require__(162),
	    isObjectLike = __webpack_require__(115);
	
	/** `Object#toString` result references. */
	var objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object,
	 *  else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) ||
	      objectToString.call(value) != objectTag || isHostObject(value)) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return (typeof Ctor == 'function' &&
	    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
	}
	
	module.exports = isPlainObject;


/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(247);
	
	/**
	 * Performs a deep comparison between two values to determine if they are
	 * equivalent.
	 *
	 * **Note:** This method supports comparing arrays, array buffers, booleans,
	 * date objects, error objects, maps, numbers, `Object` objects, regexes,
	 * sets, strings, symbols, and typed arrays. `Object` objects are compared
	 * by their own, not inherited, enumerable properties. Functions and DOM
	 * nodes are **not** supported.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent,
	 *  else `false`.
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 * var other = { 'user': 'fred' };
	 *
	 * _.isEqual(object, other);
	 * // => true
	 *
	 * object === other;
	 * // => false
	 */
	function isEqual(value, other) {
	  return baseIsEqual(value, other);
	}
	
	module.exports = isEqual;


/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	var baseMerge = __webpack_require__(293),
	    createAssigner = __webpack_require__(277);
	
	/**
	 * This method is like `_.assign` except that it recursively merges own and
	 * inherited enumerable string keyed properties of source objects into the
	 * destination object. Source properties that resolve to `undefined` are
	 * skipped if a destination value exists. Array and plain object properties
	 * are merged recursively. Other objects and value types are overridden by
	 * assignment. Source objects are applied from left to right. Subsequent
	 * sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.5.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var users = {
	 *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]
	 * };
	 *
	 * var ages = {
	 *   'data': [{ 'age': 36 }, { 'age': 40 }]
	 * };
	 *
	 * _.merge(users, ages);
	 * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }
	 */
	var merge = createAssigner(function(object, source, srcIndex) {
	  baseMerge(object, source, srcIndex);
	});
	
	module.exports = merge;


/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(142),
	    arrayEach = __webpack_require__(175),
	    assignMergeValue = __webpack_require__(294),
	    baseMergeDeep = __webpack_require__(295),
	    isArray = __webpack_require__(187),
	    isObject = __webpack_require__(134),
	    isTypedArray = __webpack_require__(253),
	    keysIn = __webpack_require__(278);
	
	/**
	 * The base implementation of `_.merge` without support for multiple sources.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} [customizer] The function to customize merged values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMerge(object, source, srcIndex, customizer, stack) {
	  if (object === source) {
	    return;
	  }
	  if (!(isArray(source) || isTypedArray(source))) {
	    var props = keysIn(source);
	  }
	  arrayEach(props || source, function(srcValue, key) {
	    if (props) {
	      key = srcValue;
	      srcValue = source[key];
	    }
	    if (isObject(srcValue)) {
	      stack || (stack = new Stack);
	      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	    }
	    else {
	      var newValue = customizer
	        ? customizer(object[key], srcValue, (key + ''), object, source, stack)
	        : undefined;
	
	      if (newValue === undefined) {
	        newValue = srcValue;
	      }
	      assignMergeValue(object, key, newValue);
	    }
	  });
	}
	
	module.exports = baseMerge;


/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(129);
	
	/**
	 * This function is like `assignValue` except that it doesn't assign
	 * `undefined` values.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignMergeValue(object, key, value) {
	  if ((value !== undefined && !eq(object[key], value)) ||
	      (typeof key == 'number' && value === undefined && !(key in object))) {
	    object[key] = value;
	  }
	}
	
	module.exports = assignMergeValue;


/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	var assignMergeValue = __webpack_require__(294),
	    baseClone = __webpack_require__(141),
	    copyArray = __webpack_require__(191),
	    isArguments = __webpack_require__(185),
	    isArray = __webpack_require__(187),
	    isArrayLikeObject = __webpack_require__(186),
	    isFunction = __webpack_require__(133),
	    isObject = __webpack_require__(134),
	    isPlainObject = __webpack_require__(290),
	    isTypedArray = __webpack_require__(253),
	    toPlainObject = __webpack_require__(296);
	
	/**
	 * A specialized version of `baseMerge` for arrays and objects which performs
	 * deep merges and tracks traversed objects enabling objects with circular
	 * references to be merged.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {string} key The key of the value to merge.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} mergeFunc The function to merge values.
	 * @param {Function} [customizer] The function to customize assigned values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	  var objValue = object[key],
	      srcValue = source[key],
	      stacked = stack.get(srcValue);
	
	  if (stacked) {
	    assignMergeValue(object, key, stacked);
	    return;
	  }
	  var newValue = customizer
	    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	    : undefined;
	
	  var isCommon = newValue === undefined;
	
	  if (isCommon) {
	    newValue = srcValue;
	    if (isArray(srcValue) || isTypedArray(srcValue)) {
	      if (isArray(objValue)) {
	        newValue = objValue;
	      }
	      else if (isArrayLikeObject(objValue)) {
	        newValue = copyArray(objValue);
	      }
	      else {
	        isCommon = false;
	        newValue = baseClone(srcValue, true);
	      }
	    }
	    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	      if (isArguments(objValue)) {
	        newValue = toPlainObject(objValue);
	      }
	      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
	        isCommon = false;
	        newValue = baseClone(srcValue, true);
	      }
	      else {
	        newValue = objValue;
	      }
	    }
	    else {
	      isCommon = false;
	    }
	  }
	  stack.set(srcValue, newValue);
	
	  if (isCommon) {
	    // Recursively merge objects and arrays (susceptible to call stack limits).
	    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	  }
	  stack['delete'](srcValue);
	  assignMergeValue(object, key, newValue);
	}
	
	module.exports = baseMergeDeep;


/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(178),
	    keysIn = __webpack_require__(278);
	
	/**
	 * Converts `value` to a plain object flattening inherited enumerable string
	 * keyed properties of `value` to own properties of the plain object.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {Object} Returns the converted plain object.
	 * @example
	 *
	 * function Foo() {
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.assign({ 'a': 1 }, new Foo);
	 * // => { 'a': 1, 'b': 2 }
	 *
	 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	 * // => { 'a': 1, 'b': 2, 'c': 3 }
	 */
	function toPlainObject(value) {
	  return copyObject(value, keysIn(value));
	}
	
	module.exports = toPlainObject;


/***/ },
/* 297 */
/***/ function(module, exports) {

	/**
	 * A no-operation function that returns `undefined` regardless of the
	 * arguments it receives.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.3.0
	 * @category Util
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 *
	 * _.noop(object) === undefined;
	 * // => true
	 */
	function noop() {
	  // No operation performed.
	}
	
	module.exports = noop;


/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	var before = __webpack_require__(299);
	
	/**
	 * Creates a function that is restricted to invoking `func` once. Repeat calls
	 * to the function return the value of the first invocation. The `func` is
	 * invoked with the `this` binding and arguments of the created function.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to restrict.
	 * @returns {Function} Returns the new restricted function.
	 * @example
	 *
	 * var initialize = _.once(createApplication);
	 * initialize();
	 * initialize();
	 * // `initialize` invokes `createApplication` once
	 */
	function once(func) {
	  return before(2, func);
	}
	
	module.exports = once;


/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(137);
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * Creates a function that invokes `func`, with the `this` binding and arguments
	 * of the created function, while it's called less than `n` times. Subsequent
	 * calls to the created function return the result of the last `func` invocation.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Function
	 * @param {number} n The number of calls at which `func` is no longer invoked.
	 * @param {Function} func The function to restrict.
	 * @returns {Function} Returns the new restricted function.
	 * @example
	 *
	 * jQuery(element).on('click', _.before(5, addContactToList));
	 * // => allows adding up to 4 contacts to the list
	 */
	function before(n, func) {
	  var result;
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  n = toInteger(n);
	  return function() {
	    if (--n > 0) {
	      result = func.apply(this, arguments);
	    }
	    if (n <= 1) {
	      func = undefined;
	    }
	    return result;
	  };
	}
	
	module.exports = before;


/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	var baseRandom = __webpack_require__(301),
	    isIterateeCall = __webpack_require__(128),
	    toNumber = __webpack_require__(139);
	
	/** Built-in method references without a dependency on `root`. */
	var freeParseFloat = parseFloat;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min,
	    nativeRandom = Math.random;
	
	/**
	 * Produces a random number between the inclusive `lower` and `upper` bounds.
	 * If only one argument is provided a number between `0` and the given number
	 * is returned. If `floating` is `true`, or either `lower` or `upper` are
	 * floats, a floating-point number is returned instead of an integer.
	 *
	 * **Note:** JavaScript follows the IEEE-754 standard for resolving
	 * floating-point values which can produce unexpected results.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.7.0
	 * @category Number
	 * @param {number} [lower=0] The lower bound.
	 * @param {number} [upper=1] The upper bound.
	 * @param {boolean} [floating] Specify returning a floating-point number.
	 * @returns {number} Returns the random number.
	 * @example
	 *
	 * _.random(0, 5);
	 * // => an integer between 0 and 5
	 *
	 * _.random(5);
	 * // => also an integer between 0 and 5
	 *
	 * _.random(5, true);
	 * // => a floating-point number between 0 and 5
	 *
	 * _.random(1.2, 5.2);
	 * // => a floating-point number between 1.2 and 5.2
	 */
	function random(lower, upper, floating) {
	  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
	    upper = floating = undefined;
	  }
	  if (floating === undefined) {
	    if (typeof upper == 'boolean') {
	      floating = upper;
	      upper = undefined;
	    }
	    else if (typeof lower == 'boolean') {
	      floating = lower;
	      lower = undefined;
	    }
	  }
	  if (lower === undefined && upper === undefined) {
	    lower = 0;
	    upper = 1;
	  }
	  else {
	    lower = toNumber(lower) || 0;
	    if (upper === undefined) {
	      upper = lower;
	      lower = 0;
	    } else {
	      upper = toNumber(upper) || 0;
	    }
	  }
	  if (lower > upper) {
	    var temp = lower;
	    lower = upper;
	    upper = temp;
	  }
	  if (floating || lower % 1 || upper % 1) {
	    var rand = nativeRandom();
	    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
	  }
	  return baseRandom(lower, upper);
	}
	
	module.exports = random;


/***/ },
/* 301 */
/***/ function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeFloor = Math.floor,
	    nativeRandom = Math.random;
	
	/**
	 * The base implementation of `_.random` without support for returning
	 * floating-point numbers.
	 *
	 * @private
	 * @param {number} lower The lower bound.
	 * @param {number} upper The upper bound.
	 * @returns {number} Returns the random number.
	 */
	function baseRandom(lower, upper) {
	  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
	}
	
	module.exports = baseRandom;


/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(233),
	    baseOrderBy = __webpack_require__(303),
	    isArray = __webpack_require__(187),
	    isFlattenableIteratee = __webpack_require__(308),
	    isIterateeCall = __webpack_require__(128),
	    rest = __webpack_require__(235);
	
	/**
	 * Creates an array of elements, sorted in ascending order by the results of
	 * running each element in a collection thru each iteratee. This method
	 * performs a stable sort, that is, it preserves the original sort order of
	 * equal elements. The iteratees are invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	 *  [iteratees=[_.identity]] The iteratees to sort by.
	 * @returns {Array} Returns the new sorted array.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'fred',   'age': 48 },
	 *   { 'user': 'barney', 'age': 36 },
	 *   { 'user': 'fred',   'age': 40 },
	 *   { 'user': 'barney', 'age': 34 }
	 * ];
	 *
	 * _.sortBy(users, function(o) { return o.user; });
	 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	 *
	 * _.sortBy(users, ['user', 'age']);
	 * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
	 *
	 * _.sortBy(users, 'user', function(o) {
	 *   return Math.floor(o.age / 10);
	 * });
	 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	 */
	var sortBy = rest(function(collection, iteratees) {
	  if (collection == null) {
	    return [];
	  }
	  var length = iteratees.length;
	  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
	    iteratees = [];
	  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
	    iteratees = [iteratees[0]];
	  }
	  iteratees = (iteratees.length == 1 && isArray(iteratees[0]))
	    ? iteratees[0]
	    : baseFlatten(iteratees, 1, isFlattenableIteratee);
	
	  return baseOrderBy(collection, iteratees, []);
	});
	
	module.exports = sortBy;


/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(230),
	    baseIteratee = __webpack_require__(244),
	    baseMap = __webpack_require__(304),
	    baseSortBy = __webpack_require__(305),
	    baseUnary = __webpack_require__(231),
	    compareMultiple = __webpack_require__(306),
	    identity = __webpack_require__(272);
	
	/**
	 * The base implementation of `_.orderBy` without param guards.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	 * @param {string[]} orders The sort orders of `iteratees`.
	 * @returns {Array} Returns the new sorted array.
	 */
	function baseOrderBy(collection, iteratees, orders) {
	  var index = -1;
	  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));
	
	  var result = baseMap(collection, function(value, key, collection) {
	    var criteria = arrayMap(iteratees, function(iteratee) {
	      return iteratee(value);
	    });
	    return { 'criteria': criteria, 'index': ++index, 'value': value };
	  });
	
	  return baseSortBy(result, function(object, other) {
	    return compareMultiple(object, other, orders);
	  });
	}
	
	module.exports = baseOrderBy;


/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(239),
	    isArrayLike = __webpack_require__(130);
	
	/**
	 * The base implementation of `_.map` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function baseMap(collection, iteratee) {
	  var index = -1,
	      result = isArrayLike(collection) ? Array(collection.length) : [];
	
	  baseEach(collection, function(value, key, collection) {
	    result[++index] = iteratee(value, key, collection);
	  });
	  return result;
	}
	
	module.exports = baseMap;


/***/ },
/* 305 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.sortBy` which uses `comparer` to define the
	 * sort order of `array` and replaces criteria objects with their corresponding
	 * values.
	 *
	 * @private
	 * @param {Array} array The array to sort.
	 * @param {Function} comparer The function to define sort order.
	 * @returns {Array} Returns `array`.
	 */
	function baseSortBy(array, comparer) {
	  var length = array.length;
	
	  array.sort(comparer);
	  while (length--) {
	    array[length] = array[length].value;
	  }
	  return array;
	}
	
	module.exports = baseSortBy;


/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	var compareAscending = __webpack_require__(307);
	
	/**
	 * Used by `_.orderBy` to compare multiple properties of a value to another
	 * and stable sort them.
	 *
	 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	 * specify an order of "desc" for descending or "asc" for ascending sort order
	 * of corresponding values.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {boolean[]|string[]} orders The order to sort by for each property.
	 * @returns {number} Returns the sort order indicator for `object`.
	 */
	function compareMultiple(object, other, orders) {
	  var index = -1,
	      objCriteria = object.criteria,
	      othCriteria = other.criteria,
	      length = objCriteria.length,
	      ordersLength = orders.length;
	
	  while (++index < length) {
	    var result = compareAscending(objCriteria[index], othCriteria[index]);
	    if (result) {
	      if (index >= ordersLength) {
	        return result;
	      }
	      var order = orders[index];
	      return result * (order == 'desc' ? -1 : 1);
	    }
	  }
	  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	  // that causes it, under certain circumstances, to provide the same value for
	  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	  // for more details.
	  //
	  // This also ensures a stable sort in V8 and other engines.
	  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	  return object.index - other.index;
	}
	
	module.exports = compareMultiple;


/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(114);
	
	/**
	 * Compares values to sort them in ascending order.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {number} Returns the sort order indicator for `value`.
	 */
	function compareAscending(value, other) {
	  if (value !== other) {
	    var valIsDefined = value !== undefined,
	        valIsNull = value === null,
	        valIsReflexive = value === value,
	        valIsSymbol = isSymbol(value);
	
	    var othIsDefined = other !== undefined,
	        othIsNull = other === null,
	        othIsReflexive = other === other,
	        othIsSymbol = isSymbol(other);
	
	    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
	        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
	        (valIsNull && othIsDefined && othIsReflexive) ||
	        (!valIsDefined && othIsReflexive) ||
	        !valIsReflexive) {
	      return 1;
	    }
	    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
	        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
	        (othIsNull && valIsDefined && valIsReflexive) ||
	        (!othIsDefined && valIsReflexive) ||
	        !othIsReflexive) {
	      return -1;
	    }
	  }
	  return 0;
	}
	
	module.exports = compareAscending;


/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(187),
	    isFunction = __webpack_require__(133);
	
	/**
	 * Checks if `value` is a flattenable array and not a `_.matchesProperty`
	 * iteratee shorthand.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	 */
	function isFlattenableIteratee(value) {
	  return isArray(value) && !(value.length == 2 && !isFunction(value[0]));
	}
	
	module.exports = isFlattenableIteratee;


/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	var baseIteratee = __webpack_require__(244),
	    baseTimes = __webpack_require__(184),
	    toInteger = __webpack_require__(137);
	
	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** Used as references for the maximum length and index of an array. */
	var MAX_ARRAY_LENGTH = 4294967295;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;
	
	/**
	 * Invokes the iteratee `n` times, returning an array of the results of
	 * each invocation. The iteratee is invoked with one argument; (index).
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 * @example
	 *
	 * _.times(3, String);
	 * // => ['0', '1', '2']
	 *
	 *  _.times(4, _.constant(true));
	 * // => [true, true, true, true]
	 */
	function times(n, iteratee) {
	  n = toInteger(n);
	  if (n < 1 || n > MAX_SAFE_INTEGER) {
	    return [];
	  }
	  var index = MAX_ARRAY_LENGTH,
	      length = nativeMin(n, MAX_ARRAY_LENGTH);
	
	  iteratee = baseIteratee(iteratee);
	  n -= MAX_ARRAY_LENGTH;
	
	  var result = baseTimes(length, iteratee);
	  while (++index < n) {
	    iteratee(index);
	  }
	  return result;
	}
	
	module.exports = times;


/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(109),
	    castSlice = __webpack_require__(118),
	    charsEndIndex = __webpack_require__(311),
	    stringToArray = __webpack_require__(121),
	    toString = __webpack_require__(108);
	
	/** Used to match leading and trailing whitespace. */
	var reTrimEnd = /\s+$/;
	
	/**
	 * Removes trailing whitespace or specified characters from `string`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category String
	 * @param {string} [string=''] The string to trim.
	 * @param {string} [chars=whitespace] The characters to trim.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {string} Returns the trimmed string.
	 * @example
	 *
	 * _.trimEnd('  abc  ');
	 * // => '  abc'
	 *
	 * _.trimEnd('-_-abc-_-', '_-');
	 * // => '-_-abc'
	 */
	function trimEnd(string, chars, guard) {
	  string = toString(string);
	  if (string && (guard || chars === undefined)) {
	    return string.replace(reTrimEnd, '');
	  }
	  if (!string || !(chars = baseToString(chars))) {
	    return string;
	  }
	  var strSymbols = stringToArray(string),
	      end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
	
	  return castSlice(strSymbols, 0, end).join('');
	}
	
	module.exports = trimEnd;


/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(227);
	
	/**
	 * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	 * that is not found in the character symbols.
	 *
	 * @private
	 * @param {Array} strSymbols The string symbols to inspect.
	 * @param {Array} chrSymbols The character symbols to find.
	 * @returns {number} Returns the index of the last unmatched string symbol.
	 */
	function charsEndIndex(strSymbols, chrSymbols) {
	  var index = strSymbols.length;
	
	  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	  return index;
	}
	
	module.exports = charsEndIndex;


/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(109),
	    castSlice = __webpack_require__(118),
	    isObject = __webpack_require__(134),
	    isRegExp = __webpack_require__(313),
	    reHasComplexSymbol = __webpack_require__(120),
	    stringSize = __webpack_require__(314),
	    stringToArray = __webpack_require__(121),
	    toInteger = __webpack_require__(137),
	    toString = __webpack_require__(108);
	
	/** Used as default options for `_.truncate`. */
	var DEFAULT_TRUNC_LENGTH = 30,
	    DEFAULT_TRUNC_OMISSION = '...';
	
	/** Used to match `RegExp` flags from their coerced string values. */
	var reFlags = /\w*$/;
	
	/**
	 * Truncates `string` if it's longer than the given maximum string length.
	 * The last characters of the truncated string are replaced with the omission
	 * string which defaults to "...".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category String
	 * @param {string} [string=''] The string to truncate.
	 * @param {Object} [options={}] The options object.
	 * @param {number} [options.length=30] The maximum string length.
	 * @param {string} [options.omission='...'] The string to indicate text is omitted.
	 * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
	 * @returns {string} Returns the truncated string.
	 * @example
	 *
	 * _.truncate('hi-diddly-ho there, neighborino');
	 * // => 'hi-diddly-ho there, neighbo...'
	 *
	 * _.truncate('hi-diddly-ho there, neighborino', {
	 *   'length': 24,
	 *   'separator': ' '
	 * });
	 * // => 'hi-diddly-ho there,...'
	 *
	 * _.truncate('hi-diddly-ho there, neighborino', {
	 *   'length': 24,
	 *   'separator': /,? +/
	 * });
	 * // => 'hi-diddly-ho there...'
	 *
	 * _.truncate('hi-diddly-ho there, neighborino', {
	 *   'omission': ' [...]'
	 * });
	 * // => 'hi-diddly-ho there, neig [...]'
	 */
	function truncate(string, options) {
	  var length = DEFAULT_TRUNC_LENGTH,
	      omission = DEFAULT_TRUNC_OMISSION;
	
	  if (isObject(options)) {
	    var separator = 'separator' in options ? options.separator : separator;
	    length = 'length' in options ? toInteger(options.length) : length;
	    omission = 'omission' in options ? baseToString(options.omission) : omission;
	  }
	  string = toString(string);
	
	  var strLength = string.length;
	  if (reHasComplexSymbol.test(string)) {
	    var strSymbols = stringToArray(string);
	    strLength = strSymbols.length;
	  }
	  if (length >= strLength) {
	    return string;
	  }
	  var end = length - stringSize(omission);
	  if (end < 1) {
	    return omission;
	  }
	  var result = strSymbols
	    ? castSlice(strSymbols, 0, end).join('')
	    : string.slice(0, end);
	
	  if (separator === undefined) {
	    return result + omission;
	  }
	  if (strSymbols) {
	    end += (result.length - end);
	  }
	  if (isRegExp(separator)) {
	    if (string.slice(end).search(separator)) {
	      var match,
	          substring = result;
	
	      if (!separator.global) {
	        separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
	      }
	      separator.lastIndex = 0;
	      while ((match = separator.exec(substring))) {
	        var newEnd = match.index;
	      }
	      result = result.slice(0, newEnd === undefined ? end : newEnd);
	    }
	  } else if (string.indexOf(baseToString(separator), end) != end) {
	    var index = result.lastIndexOf(separator);
	    if (index > -1) {
	      result = result.slice(0, index);
	    }
	  }
	  return result + omission;
	}
	
	module.exports = truncate;


/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(134);
	
	/** `Object#toString` result references. */
	var regexpTag = '[object RegExp]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `RegExp` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isRegExp(/abc/);
	 * // => true
	 *
	 * _.isRegExp('/abc/');
	 * // => false
	 */
	function isRegExp(value) {
	  return isObject(value) && objectToString.call(value) == regexpTag;
	}
	
	module.exports = isRegExp;


/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	var reHasComplexSymbol = __webpack_require__(120);
	
	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	    rsComboSymbolsRange = '\\u20d0-\\u20f0',
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsAstral = '[' + rsAstralRange + ']',
	    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',
	    rsFitz = '\\ud83c[\\udffb-\\udfff]',
	    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	    rsNonAstral = '[^' + rsAstralRange + ']',
	    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	    rsZWJ = '\\u200d';
	
	/** Used to compose unicode regexes. */
	var reOptMod = rsModifier + '?',
	    rsOptVar = '[' + rsVarRange + ']?',
	    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	    rsSeq = rsOptVar + reOptMod + rsOptJoin,
	    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
	
	/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
	
	/**
	 * Gets the number of symbols in `string`.
	 *
	 * @private
	 * @param {string} string The string to inspect.
	 * @returns {number} Returns the string size.
	 */
	function stringSize(string) {
	  if (!(string && reHasComplexSymbol.test(string))) {
	    return string.length;
	  }
	  var result = reComplexSymbol.lastIndex = 0;
	  while (reComplexSymbol.test(string)) {
	    result++;
	  }
	  return result;
	}
	
	module.exports = stringSize;


/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	var toString = __webpack_require__(108),
	    unescapeHtmlChar = __webpack_require__(316);
	
	/** Used to match HTML entities and HTML characters. */
	var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,
	    reHasEscapedHtml = RegExp(reEscapedHtml.source);
	
	/**
	 * The inverse of `_.escape`; this method converts the HTML entities
	 * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to
	 * their corresponding characters.
	 *
	 * **Note:** No other HTML entities are unescaped. To unescape additional
	 * HTML entities use a third-party library like [_he_](https://mths.be/he).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.6.0
	 * @category String
	 * @param {string} [string=''] The string to unescape.
	 * @returns {string} Returns the unescaped string.
	 * @example
	 *
	 * _.unescape('fred, barney, &amp; pebbles');
	 * // => 'fred, barney, & pebbles'
	 */
	function unescape(string) {
	  string = toString(string);
	  return (string && reHasEscapedHtml.test(string))
	    ? string.replace(reEscapedHtml, unescapeHtmlChar)
	    : string;
	}
	
	module.exports = unescape;


/***/ },
/* 316 */
/***/ function(module, exports) {

	/** Used to map HTML entities to characters. */
	var htmlUnescapes = {
	  '&amp;': '&',
	  '&lt;': '<',
	  '&gt;': '>',
	  '&quot;': '"',
	  '&#39;': "'",
	  '&#96;': '`'
	};
	
	/**
	 * Used by `_.unescape` to convert HTML entities to characters.
	 *
	 * @private
	 * @param {string} chr The matched character to unescape.
	 * @returns {string} Returns the unescaped character.
	 */
	function unescapeHtmlChar(chr) {
	  return htmlUnescapes[chr];
	}
	
	module.exports = unescapeHtmlChar;


/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	var baseUniq = __webpack_require__(318);
	
	/**
	 * Creates a duplicate-free version of an array, using
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * for equality comparisons, in which only the first occurrence of each
	 * element is kept.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @returns {Array} Returns the new duplicate free array.
	 * @example
	 *
	 * _.uniq([2, 1, 2]);
	 * // => [2, 1]
	 */
	function uniq(array) {
	  return (array && array.length)
	    ? baseUniq(array)
	    : [];
	}
	
	module.exports = uniq;


/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(223),
	    arrayIncludes = __webpack_require__(226),
	    arrayIncludesWith = __webpack_require__(229),
	    cacheHas = __webpack_require__(232),
	    createSet = __webpack_require__(319),
	    setToArray = __webpack_require__(213);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new duplicate free array.
	 */
	function baseUniq(array, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      length = array.length,
	      isCommon = true,
	      result = [],
	      seen = result;
	
	  if (comparator) {
	    isCommon = false;
	    includes = arrayIncludesWith;
	  }
	  else if (length >= LARGE_ARRAY_SIZE) {
	    var set = iteratee ? null : createSet(array);
	    if (set) {
	      return setToArray(set);
	    }
	    isCommon = false;
	    includes = cacheHas;
	    seen = new SetCache;
	  }
	  else {
	    seen = iteratee ? [] : result;
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value) : value;
	
	    value = (comparator || value !== 0) ? value : 0;
	    if (isCommon && computed === computed) {
	      var seenIndex = seen.length;
	      while (seenIndex--) {
	        if (seen[seenIndex] === computed) {
	          continue outer;
	        }
	      }
	      if (iteratee) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	    else if (!includes(seen, computed, comparator)) {
	      if (seen !== result) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	  }
	  return result;
	}
	
	module.exports = baseUniq;


/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	var Set = __webpack_require__(200),
	    noop = __webpack_require__(297),
	    setToArray = __webpack_require__(213);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/**
	 * Creates a set of `values`.
	 *
	 * @private
	 * @param {Array} values The values to add to the set.
	 * @returns {Object} Returns the new set.
	 */
	var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
	  return new Set(values);
	};
	
	module.exports = createSet;


/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	var baseUpdate = __webpack_require__(321),
	    castFunction = __webpack_require__(323);
	
	/**
	 * This method is like `_.set` except that accepts `updater` to produce the
	 * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
	 * is invoked with one argument: (value).
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.6.0
	 * @category Object
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The path of the property to set.
	 * @param {Function} updater The function to produce the updated value.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.update(object, 'a[0].b.c', function(n) { return n * n; });
	 * console.log(object.a[0].b.c);
	 * // => 9
	 *
	 * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
	 * console.log(object.x[0].y.z);
	 * // => 0
	 */
	function update(object, path, updater) {
	  return object == null ? object : baseUpdate(object, path, castFunction(updater));
	}
	
	module.exports = update;


/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(263),
	    baseSet = __webpack_require__(322);
	
	/**
	 * The base implementation of `_.update`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to update.
	 * @param {Function} updater The function to produce the updated value.
	 * @param {Function} [customizer] The function to customize path creation.
	 * @returns {Object} Returns `object`.
	 */
	function baseUpdate(object, path, updater, customizer) {
	  return baseSet(object, path, updater(baseGet(object, path)), customizer);
	}
	
	module.exports = baseUpdate;


/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(176),
	    castPath = __webpack_require__(264),
	    isIndex = __webpack_require__(136),
	    isKey = __webpack_require__(267),
	    isObject = __webpack_require__(134),
	    toKey = __webpack_require__(268);
	
	/**
	 * The base implementation of `_.set`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to set.
	 * @param {*} value The value to set.
	 * @param {Function} [customizer] The function to customize path creation.
	 * @returns {Object} Returns `object`.
	 */
	function baseSet(object, path, value, customizer) {
	  path = isKey(path, object) ? [path] : castPath(path);
	
	  var index = -1,
	      length = path.length,
	      lastIndex = length - 1,
	      nested = object;
	
	  while (nested != null && ++index < length) {
	    var key = toKey(path[index]);
	    if (isObject(nested)) {
	      var newValue = value;
	      if (index != lastIndex) {
	        var objValue = nested[key];
	        newValue = customizer ? customizer(objValue, key, nested) : undefined;
	        if (newValue === undefined) {
	          newValue = objValue == null
	            ? (isIndex(path[index + 1]) ? [] : {})
	            : objValue;
	        }
	      }
	      assignValue(nested, key, newValue);
	    }
	    nested = nested[key];
	  }
	  return object;
	}
	
	module.exports = baseSet;


/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(272);
	
	/**
	 * Casts `value` to `identity` if it's not a function.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Function} Returns cast function.
	 */
	function castFunction(value) {
	  return typeof value == 'function' ? value : identity;
	}
	
	module.exports = castFunction;


/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	var baseDifference = __webpack_require__(222),
	    isArrayLikeObject = __webpack_require__(186),
	    rest = __webpack_require__(235);
	
	/**
	 * Creates an array excluding all given values using
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {...*} [values] The values to exclude.
	 * @returns {Array} Returns the new array of filtered values.
	 * @see _.difference, _.xor
	 * @example
	 *
	 * _.without([1, 2, 1, 3], 1, 2);
	 * // => [3]
	 */
	var without = rest(function(array, values) {
	  return isArrayLikeObject(array)
	    ? baseDifference(array, values)
	    : [];
	});
	
	module.exports = without;


/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	__webpack_require__(326);
	/* tslint:disable */
	var styles = {};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = styles;
	/* tslint:enable */
	


/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(327);
	var loader = __webpack_require__(13);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(12)();
	// imports
	
	
	// module
	exports.push([module.id, "body{margin:0;padding:0}.SPPageChrome-app{position:fixed!important;top:0!important;width:100%}#SuiteNavPlaceHolder{right:0!important;position:fixed!important}#SuiteNavPlaceHolder:empty{display:none}", ""]);
	
	// exports


/***/ }
/******/ ])});;
//# sourceMappingURL=sp-webpart-workbench.js.map
(function(){
if (!window.__setWebpackPublicPathLoaderSrcRegistry__) window.__setWebpackPublicPathLoaderSrcRegistry__={};
var scripts = document.getElementsByTagName('script');
if (scripts && scripts.length) {
  for (var i = 0; i < scripts.length; i++) {
    if (!scripts[i]) continue;
    var path = scripts[i].getAttribute('src');
    if (path) window.__setWebpackPublicPathLoaderSrcRegistry__[path]=true;
  }
}
})();