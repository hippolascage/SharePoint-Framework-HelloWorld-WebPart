{"version":3,"sources":["stores/WebPartStore.ts"],"names":[],"mappings":";;;;;;;AAAA,4BAAqD,aAAa,CAAC,CAAA;AACnE,QAAO,cAAc,CAAC,CAAA;AAEtB;IAKE,0BAA0B;IAE1B;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,yBAAW,CAAC,EAAE,CAAC,CAAC;QAE7B,yGAAyG;QACzG,mBAAmB;QACnB,wBAAwB;IAC1B,CAAC;IAEM,oCAAa,GAApB;QAAA,iBA6BC;QA5BC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,2BAA2B;YAC3B,EAAE,CAAC,CAAE,MAAc,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,KAAK,GAAI,MAAc,CAAC,gBAAgB,CAAC;gBAChD,0BAA0B;gBACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,oBAAoB;gBACpB,sEAAsE;gBACtE,MAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC;qBAC9C,IAAI,CAAC,UAAC,QAAkB,IAAK,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;qBAE7C,IAAI,CAAC,UAAC,IAAS;oBAChB,0BAA0B;oBACxB,yBAAW,CAAC;wBACV,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;wBAClB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACzB,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC;qBACD,KAAK,CAAC,UAAC,EAAS;oBACf,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;oBAClB,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC,OAAO,CAAC;oBAC/B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACzB,CAAC,CAAC,CAAC;YACP,CAAC;QACH,CAAC;IACH,CAAC;IA7CD;QAAC,wBAAU;sDAAA;IACX;QAAC,wBAAU;mDAAA;IAEX;QAAC,wBAAU;+CAAA;IA2Cb,mBAAC;AAAD,CA/CA,AA+CC,IAAA;AA/CD;8BA+CC,CAAA","file":"stores/WebPartStore.js","sourcesContent":["import { observable, transaction, asReference } from 'mobservable';\r\nimport 'whatwg-fetch';\r\n\r\nexport default class WebPartStore {\r\n  @observable public errorMessage: string;\r\n  @observable public isLoading: boolean;\r\n  /* tslint:disable:no-any */\r\n  @observable public parts: { [key: string]: any};\r\n  /* tslint:enable:no-any */\r\n\r\n  constructor() {\r\n    this.isLoading = false;\r\n    this.errorMessage = undefined;\r\n    this.parts = asReference({});\r\n\r\n    // @todo: removing this as this is not required right now. Will cleanup this with other workbench cleanup\r\n    // at a later date.\r\n    // this.fetchWebParts();\r\n  }\r\n\r\n  public fetchWebParts(): void {\r\n    if (!this.isLoading) {\r\n      this.isLoading = true;\r\n\r\n      /* tslint:disable:no-any */\r\n      if ((window as any).webpartManifests) {\r\n        this.parts = (window as any).webpartManifests;\r\n      /* tslint:enable:no-any */\r\n        this.isLoading = false;\r\n      } else {\r\n        // Get the webparts!\r\n        // @todo: remove hardcoded url, add error handling, where is cancel...\r\n        window.fetch('http://localhost:5432/getwebparts')\r\n          .then((response: Response) => response.json())\r\n          /* tslint:disable:no-any */\r\n          .then((json: any) => {\r\n          /* tslint:enable:no-any */\r\n            transaction(() => {\r\n              this.parts = json;\r\n              this.isLoading = false;\r\n            });\r\n          })\r\n          .catch((ex: Error) => {\r\n            console.error(ex);\r\n            this.errorMessage = ex.message;\r\n            this.isLoading = false;\r\n          });\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}