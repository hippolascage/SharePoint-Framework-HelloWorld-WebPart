"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var mobservable_1 = require('mobservable');
require('whatwg-fetch');
var WebPartStore = (function () {
    /* tslint:enable:no-any */
    function WebPartStore() {
        this.isLoading = false;
        this.errorMessage = undefined;
        this.parts = mobservable_1.asReference({});
        // @todo: removing this as this is not required right now. Will cleanup this with other workbench cleanup
        // at a later date.
        // this.fetchWebParts();
    }
    WebPartStore.prototype.fetchWebParts = function () {
        var _this = this;
        if (!this.isLoading) {
            this.isLoading = true;
            /* tslint:disable:no-any */
            if (window.webpartManifests) {
                this.parts = window.webpartManifests;
                /* tslint:enable:no-any */
                this.isLoading = false;
            }
            else {
                // Get the webparts!
                // @todo: remove hardcoded url, add error handling, where is cancel...
                window.fetch('http://localhost:5432/getwebparts')
                    .then(function (response) { return response.json(); })
                    .then(function (json) {
                    /* tslint:enable:no-any */
                    mobservable_1.transaction(function () {
                        _this.parts = json;
                        _this.isLoading = false;
                    });
                })
                    .catch(function (ex) {
                    console.error(ex);
                    _this.errorMessage = ex.message;
                    _this.isLoading = false;
                });
            }
        }
    };
    __decorate([
        mobservable_1.observable
    ], WebPartStore.prototype, "errorMessage", void 0);
    __decorate([
        mobservable_1.observable
    ], WebPartStore.prototype, "isLoading", void 0);
    __decorate([
        mobservable_1.observable
    ], WebPartStore.prototype, "parts", void 0);
    return WebPartStore;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = WebPartStore;

//# sourceMappingURL=WebPartStore.js.map
