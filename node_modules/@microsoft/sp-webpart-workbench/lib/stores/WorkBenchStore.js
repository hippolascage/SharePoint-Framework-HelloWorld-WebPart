"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var mobservable_1 = require('mobservable');
var sp_client_base_1 = require('@microsoft/sp-client-base');
var DEFAULT_TITLE = 'SharePoint Web Part Workbench';
var WorkBenchStore = (function () {
    function WorkBenchStore() {
        this.appTitle = DEFAULT_TITLE;
        this.isEditing = true;
        this.isDetailsPaneVisible = false;
    }
    Object.defineProperty(WorkBenchStore.prototype, "displayMode", {
        get: function () {
            return this.isEditing ? sp_client_base_1.DisplayMode.Edit : sp_client_base_1.DisplayMode.Read;
        },
        enumerable: true,
        configurable: true
    });
    WorkBenchStore.prototype.toggleEdit = function () {
        this.isEditing = !this.isEditing;
    };
    WorkBenchStore.prototype.toggleDetailsPane = function () {
        this.isDetailsPaneVisible = !this.isDetailsPaneVisible;
    };
    __decorate([
        mobservable_1.observable
    ], WorkBenchStore.prototype, "isEditing", void 0);
    return WorkBenchStore;
}());
exports.WorkBenchStore = WorkBenchStore;

//# sourceMappingURL=WorkBenchStore.js.map
