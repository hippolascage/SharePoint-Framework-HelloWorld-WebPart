{"version":3,"sources":["components/commandBar/CommandBar.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,QAAO,mBAAmB,CAAC,CAAA;AAG3B,gCAAoB,mBAAmB,CAAC,CAAA;AAUxC;IAAwC,8BAA2C;IAIjF,oBAAY,KAA2B;QACrC,kBAAM,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3D,CAAC;IAEM,2BAAM,GAAb;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,eAAe,GAC5B,qBAAC,GAAG,IAAC,SAAS,EAAC,4BAA4B,GACzC,qBAAC,GAAG,IAAC,SAAS,EAAC,mBAAmB,GAChC,qBAAC,GAAG,IAAC,SAAS,EAAC,+BAA+B,GAC5C,qBAAC,CAAC,IAAC,SAAS,EAAC,wBAAwB,EAAC,OAAO,EAAG,IAAI,CAAC,KAAK,CAAC,iBAAmB,GAC5E,qBAAC,IAAI,IAAC,SAAS,EAAC,gDAAgD,EAAQ,EACxE,qBAAC,IAAI,IAAC,SAAS,EAAC,gEAAgE,GAC5E,yBAAO,CAAC,MAAQ,CAAO,CACzB,CACA,CACF,EACN,qBAAC,GAAG,IAAC,SAAS,EAAC,mBAAmB,GAChC,qBAAC,GAAG,IAAC,SAAS,EAAC,+BAA+B,GAC5C,qBAAC,CAAC,IAAC,SAAS,EAAC,wBAAwB,EAAC,OAAO,EAAG,IAAI,CAAC,KAAK,CAAC,iBAAmB,GAC5E,qBAAC,IAAI,IAAC,SAAS,EAAC,gDAAgD,EAAQ,EACxE,qBAAC,IAAI,IAAC,SAAS,EAAC,gEAAgE,GAC5E,yBAAO,CAAC,MAAQ,CAAO,CACzB,CACA,CACF,EACN,qBAAC,GAAG,IAAC,SAAS,EAAC,mBAAmB,GAChC,qBAAC,GAAG,IAAC,SAAS,EAAC,+BAA+B,GAC5C,qBAAC,CAAC,IAAC,SAAS,EAAC,wBAAwB,EAAC,OAAO,EAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAG,GAChF,qBAAC,IAAI,IAAC,SAAS,EAAC,6CAA6C,EAAQ,EACrE,qBAAC,IAAI,IAAC,SAAS,EAAC,gEAAgE,aAAe,CAC7F,CACA,CACF,CACF,EACN,qBAAC,GAAG,IAAC,SAAS,EAAC,wBAAwB,GACrC,qBAAC,GAAG,IAAC,SAAS,EAAC,mBAAmB,GAChC,qBAAC,GAAG,IAAC,SAAS,EAAC,+BAA+B,GAC5C,qBAAC,CAAC,IAAC,SAAS,EAAC,wBAAwB,GACnC,qBAAC,IAAI,IAAC,SAAS,EAAC,8CAA8C,EAAQ,EACtE,qBAAC,IAAI,IAAC,SAAS,EAAC,gEAAgE,UAAY,CAC1F,CACA,CACF,EACN,qBAAC,GAAG,IAAC,SAAS,EAAC,mBAAmB,GAChC,qBAAC,GAAG,IAAC,SAAS,EAAC,+BAA+B,GAC5C,qBAAC,CAAC,IAAC,SAAS,EAAC,wBAAwB,EAAC,OAAO,EAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAG,GAC7E,qBAAC,IAAI,IAAC,SAAS,EAAC,oDAAoD,EAAQ,EAC5E,qBAAC,IAAI,IAAC,SAAS,EAAC,gEAAgE,aAAe,CAC7F,CACA,CACF,CACF,CACF,CACP,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAC,eAAe,GAC5B,qBAAC,GAAG,IAAC,SAAS,EAAC,4BAA4B,GACzC,qBAAC,GAAG,IAAC,SAAS,EAAC,mBAAmB,GAChC,qBAAC,GAAG,IAAC,SAAS,EAAC,+BAA+B,GAC5C,qBAAC,CAAC,IAAC,SAAS,EAAC,wBAAwB,EAAC,OAAO,EAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAG,GAChF,qBAAC,IAAI,IAAC,SAAS,EAAC,gDAAgD,EAAQ,EACxE,qBAAC,IAAI,IAAC,SAAS,EAAC,gEAAgE,UAAY,CAC1F,CACA,CACF,CACF,CACF,CACP,CAAC;QACJ,CAAC;IACH,CAAC;IAEO,kCAAa,GAArB;QACE,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;IACnC,CAAC;IAEO,qCAAgB,GAAxB;QACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;IACnC,CAAC;IAEH,iBAAC;AAAD,CA1FA,AA0FC,CA1FuC,KAAK,CAAC,SAAS,GA0FtD;AA1FD;4BA0FC,CAAA","file":"components/commandBar/CommandBar.js","sourcesContent":["import * as React from 'react';\r\nimport './CommandBar.scss';\r\nimport { IPageStore } from '../page/PageStore';\r\nimport { IWorkBenchStore } from '../../stores/WorkBenchStore';\r\nimport strings from './CommandBar.resx';\r\n\r\nexport interface IPageCommandBarProps {\r\n  store: IPageStore;\r\n  appStore: IWorkBenchStore;\r\n  onClickMobileView: () => void;\r\n  onClickTabletView: () => void;\r\n  closeMobilePreview: () => void;\r\n}\r\n\r\nexport default class CommandBar extends React.Component<IPageCommandBarProps, void> {\r\n\r\n  private _pageStore: IPageStore;\r\n\r\n  constructor(props: IPageCommandBarProps) {\r\n    super(props);\r\n\r\n    this._pageStore = props.store;\r\n    this._onClickClear = this._onClickClear.bind(this);\r\n    this._onClickReadEdit = this._onClickReadEdit.bind(this);\r\n  }\r\n\r\n  public render(): React.ReactElement<IPageCommandBarProps> {\r\n    if (this.props.appStore.isEditing) {\r\n      return (\r\n        <div className='ms-CommandBar'>\r\n          <div className='ms-CommandBar-sideCommands'>\r\n            <div className='ms-CommandBarItem'>\r\n              <div className='ms-CommandBarItem-linkWrapper'>\r\n                <a className='ms-CommandBarItem-link' onClick={ this.props.onClickMobileView }>\r\n                  <span className='ms-CommandBarItem-icon ms-Icon ms-Icon--mobile'></span>\r\n                  <span className='ms-CommandBarItem-commandText ms-font-m ms-font-weight-regular'>\r\n                    { strings.Mobile }</span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className='ms-CommandBarItem'>\r\n              <div className='ms-CommandBarItem-linkWrapper'>\r\n                <a className='ms-CommandBarItem-link' onClick={ this.props.onClickTabletView }>\r\n                  <span className='ms-CommandBarItem-icon ms-Icon ms-Icon--tablet'></span>\r\n                  <span className='ms-CommandBarItem-commandText ms-font-m ms-font-weight-regular'>\r\n                    { strings.Tablet }</span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className='ms-CommandBarItem'>\r\n              <div className='ms-CommandBarItem-linkWrapper'>\r\n                <a className='ms-CommandBarItem-link' onClick={ this._onClickReadEdit.bind(this) }>\r\n                  <span className='ms-CommandBarItem-icon ms-Icon ms-Icon--eye'></span>\r\n                  <span className='ms-CommandBarItem-commandText ms-font-m ms-font-weight-regular'>Preview</span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='ms-CommandBar-mainArea'>\r\n            <div className='ms-CommandBarItem'>\r\n              <div className='ms-CommandBarItem-linkWrapper'>\r\n                <a className='ms-CommandBarItem-link'>\r\n                  <span className='ms-CommandBarItem-icon ms-Icon ms-Icon--save'></span>\r\n                  <span className='ms-CommandBarItem-commandText ms-font-m ms-font-weight-regular'>Save</span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className='ms-CommandBarItem'>\r\n              <div className='ms-CommandBarItem-linkWrapper'>\r\n                <a className='ms-CommandBarItem-link' onClick={ this._onClickClear.bind(this) }>\r\n                  <span className='ms-CommandBarItem-icon ms-Icon ms-Icon--reactivate'></span>\r\n                  <span className='ms-CommandBarItem-commandText ms-font-m ms-font-weight-regular'>Discard</span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className='ms-CommandBar'>\r\n          <div className='ms-CommandBar-sideCommands'>\r\n            <div className='ms-CommandBarItem'>\r\n              <div className='ms-CommandBarItem-linkWrapper'>\r\n                <a className='ms-CommandBarItem-link' onClick={ this._onClickReadEdit.bind(this) }>\r\n                  <span className='ms-CommandBarItem-icon ms-Icon ms-Icon--pencil'></span>\r\n                  <span className='ms-CommandBarItem-commandText ms-font-m ms-font-weight-regular'>Edit</span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  private _onClickClear(): void {\r\n    this._pageStore.clearPageState();\r\n  }\r\n\r\n  private _onClickReadEdit(): void {\r\n    this.props.appStore.toggleEdit();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"/src"}