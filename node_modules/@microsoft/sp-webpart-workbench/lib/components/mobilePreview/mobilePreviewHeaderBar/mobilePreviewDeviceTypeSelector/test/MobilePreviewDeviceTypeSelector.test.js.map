{"version":3,"sources":["components/mobilePreview/mobilePreviewHeaderBar/mobilePreviewDeviceTypeSelector/test/MobilePreviewDeviceTypeSelector.test.ts"],"names":[],"mappings":";AAAA,qBAAuB,MAAM,CAAC,CAAA;AAC9B,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,uBAAoC,QAAQ,CAAC,CAAA;AAE7C,8BAIO,sCAAsC,CAAC,CAAA;AAC9C,gDAEO,oCAAoC,CAAC,CAAA;AAE5C,QAAQ,CAAC,wCAAwC,EAAE;IACjD,IAAI,aAAqE,CAAC;IAC1E,2BAA2B;IAC3B,IAAI,cAAwE,CAAC;IAC7E,0BAA0B;IAE1B,UAAU,CAAC;QACT,aAAa,GAAG,cAAK,CACnB,KAAK,CAAC,aAAa,CAAC,uBAAa,EAAE,EAAE,UAAU,EAAE,0BAAU,CAAC,KAAK,EAAE,CAAC,CACrE,CAAC;QACF,cAAc,GAAG,aAAa,CAAC,IAAI,CAAC,yCAA+B,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,aAAa,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gEAAgE,EAAE;QACnE,aAAM,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,0BAAU,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;QAC9F,sBAAsB;QACtB,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAClD,aAAM,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,0BAAU,CAAC,MAAM,EAAE,2BAA2B,CAAC,CAAC;QAChG,qBAAqB;QACrB,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACnD,aAAM,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,0BAAU,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;IAChG,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","file":"components/mobilePreview/mobilePreviewHeaderBar/mobilePreviewDeviceTypeSelector/test/MobilePreviewDeviceTypeSelector.test.js","sourcesContent":["import { assert } from 'chai';\r\nimport * as React from 'react';\r\nimport { mount, ReactWrapper } from 'enzyme';\r\n\r\nimport MobilePreview, {\r\n  IMobilePreviewProps,\r\n  IMobilePreviewState,\r\n  DeviceType\r\n} from '../../../mobilePreview/MobilePreview';\r\nimport MobilePreviewDeviceTypeSelector, {\r\n IMobilePreviewDeviceTypeSelectorProps\r\n} from '../MobilePreviewDeviceTypeSelector';\r\n\r\ndescribe('Testing device type selector component', () => {\r\n  let mobilePreview: ReactWrapper<IMobilePreviewProps, IMobilePreviewState>;\r\n  /* tslint:disable:no-any */\r\n  let deviceSelector: ReactWrapper<IMobilePreviewDeviceTypeSelectorProps, any>;\r\n  /* tslint:enable:no-any */\r\n\r\n  beforeEach(() => {\r\n    mobilePreview = mount<IMobilePreviewProps, IMobilePreviewState>(\r\n      React.createElement(MobilePreview, { deviceType: DeviceType.Phone })\r\n    );\r\n    deviceSelector = mobilePreview.find(MobilePreviewDeviceTypeSelector);\r\n  });\r\n\r\n  afterEach(() => {\r\n    mobilePreview.unmount();\r\n  });\r\n\r\n  it('changes from phone to tablet and from tablet to phone on click', () => {\r\n    assert.equal(mobilePreview.state('deviceType'), DeviceType.Phone, 'device type equals phone');\r\n    // Click tablet button\r\n    deviceSelector.find('a').last().simulate('click');\r\n    assert.equal(mobilePreview.state('deviceType'), DeviceType.Tablet, 'device type equals tablet');\r\n    // Click phone button\r\n    deviceSelector.find('a').first().simulate('click');\r\n    assert.equal(mobilePreview.state('deviceType'), DeviceType.Phone, 'device type equals phone');\r\n  });\r\n\r\n});"],"sourceRoot":"/src"}