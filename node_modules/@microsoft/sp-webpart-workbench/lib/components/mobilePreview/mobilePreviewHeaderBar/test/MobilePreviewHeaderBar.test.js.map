{"version":3,"sources":["components/mobilePreview/mobilePreviewHeaderBar/test/MobilePreviewHeaderBar.test.ts"],"names":[],"mappings":";AAAA,qBAAuB,MAAM,CAAC,CAAA;AAC9B,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,uBAAoC,QAAQ,CAAC,CAAA;AAE7C,8BAIO,mCAAmC,CAAC,CAAA;AAC3C,gDAA4C,oEAAoE,CAAC,CAAA;AACjH,uCAEO,qDAAqD,CAAC,CAAA;AAC7D,sCAAkC,gDAAgD,CAAC,CAAA;AAEnF,QAAQ,CAAC,kCAAkC,EAAE;IAC3C,IAAI,aAAqE,CAAC;IAC1E,2BAA2B;IAC3B,IAAI,SAA0D,CAAC;IAC/D,0BAA0B;IAE1B,UAAU,CAAC;QACT,aAAa,GAAG,cAAK,CACnB,KAAK,CAAC,aAAa,CAAC,uBAAa,EAAE,EAAE,UAAU,EAAE,0BAAU,CAAC,KAAK,EAAE,CAAC,CACrE,CAAC;QACF,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,gCAAsB,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,aAAa,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE;QAC/B,aAAM,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,+BAAqB,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,wBAAwB,CAAC,CAAC;QACxF,aAAM,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,yCAA+B,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,wBAAwB,CAAC,CAAC;IACpG,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"components/mobilePreview/mobilePreviewHeaderBar/test/MobilePreviewHeaderBar.test.js","sourcesContent":["import { assert } from 'chai';\r\nimport * as React from 'react';\r\nimport { mount, ReactWrapper } from 'enzyme';\r\n\r\nimport MobilePreview, {\r\n  IMobilePreviewProps,\r\n  IMobilePreviewState,\r\n  DeviceType\r\n} from '../../mobilePreview/MobilePreview';\r\nimport MobilePreviewDeviceTypeSelector from '../mobilePreviewDeviceTypeSelector/MobilePreviewDeviceTypeSelector';\r\nimport MobilePreviewHeaderBar, {\r\n  IMobilePreviewHeaderBarProps\r\n} from '../../mobilePreviewHeaderBar/MobilePreviewHeaderBar';\r\nimport MobilePreviewURLEntry from '../mobilePreviewURLEntry/MobilePreviewURLEntry';\r\n\r\ndescribe('Testing MobilePreview header bar', () => {\r\n  let mobilePreview: ReactWrapper<IMobilePreviewProps, IMobilePreviewState>;\r\n  /* tslint:disable:no-any */\r\n  let headerBar: ReactWrapper<IMobilePreviewHeaderBarProps, any>;\r\n  /* tslint:enable:no-any */\r\n\r\n  beforeEach(() => {\r\n    mobilePreview = mount<IMobilePreviewProps, IMobilePreviewState>(\r\n      React.createElement(MobilePreview, { deviceType: DeviceType.Phone })\r\n    );\r\n    headerBar = mobilePreview.find(MobilePreviewHeaderBar);\r\n  });\r\n\r\n  afterEach(() => {\r\n    mobilePreview.unmount();\r\n  });\r\n\r\n  it('renders all the components', () => {\r\n    assert.equal(headerBar.find(MobilePreviewURLEntry).length, 1, 'contains URL entry bar');\r\n    assert.equal(headerBar.find(MobilePreviewDeviceTypeSelector).length, 1, 'contains URL entry bar');\r\n  });\r\n});"],"sourceRoot":"/src"}