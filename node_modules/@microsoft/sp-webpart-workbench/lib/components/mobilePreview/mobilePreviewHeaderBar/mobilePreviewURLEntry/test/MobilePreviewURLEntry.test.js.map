{"version":3,"sources":["components/mobilePreview/mobilePreviewHeaderBar/mobilePreviewURLEntry/test/MobilePreviewURLEntry.test.ts"],"names":[],"mappings":";AAAA,qBAAuB,MAAM,CAAC,CAAA;AAC9B,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,uBAAoC,QAAQ,CAAC,CAAA;AAC7C,uCAAuB,wBAAwB,CAAC,CAAA;AAEhD,8BAIO,sCAAsC,CAAC,CAAA;AAC9C,sCAEO,0BAA0B,CAAC,CAAA;AAClC,uCAAmC,8BAA8B,CAAC,CAAA;AAElE,QAAQ,CAAC,6BAA6B,EAAE;IACtC,IAAI,aAAqE,CAAC;IAC1E,2BAA2B;IAC3B,IAAI,QAAwD,CAAC;IAC7D,0BAA0B;IAE1B,UAAU,CAAC;QACT,aAAa,GAAG,cAAK,CACnB,KAAK,CAAC,aAAa,CAAC,uBAAa,EAAE,EAAE,UAAU,EAAE,0BAAU,CAAC,KAAK,EAAE,CAAC,CACrE,CAAC;QACF,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,gCAAsB,CAAC,CAAC,IAAI,CAAC,+BAAqB,CAAC,CAAC;IACpF,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,aAAa,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE;QACnC,IAAM,MAAM,GAAW,cAAc,CAAC;QACtC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,EAAC,KAAK,EAAE,MAAM,EAAC,EAAC,CAAC,CAAC;QACtE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAE5C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+DAA+D,EAAE;QAClE,IAAM,GAAG,GAAW,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC/C,QAAQ,CAAC,IAAI,CAAC,+BAAM,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACxC,aAAM,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"components/mobilePreview/mobilePreviewHeaderBar/mobilePreviewURLEntry/test/MobilePreviewURLEntry.test.js","sourcesContent":["import { assert } from 'chai';\r\nimport * as React from 'react';\r\nimport { mount, ReactWrapper } from 'enzyme';\r\nimport { Button } from 'office-ui-fabric-react';\r\n\r\nimport MobilePreview, {\r\n  IMobilePreviewProps,\r\n  IMobilePreviewState,\r\n  DeviceType\r\n} from '../../../mobilePreview/MobilePreview';\r\nimport MobilePreviewURLEntry, {\r\n IMobilePreviewURLEntryProps\r\n} from '../MobilePreviewURLEntry';\r\nimport MobilePreviewHeaderBar from '../../MobilePreviewHeaderBar';\r\n\r\ndescribe('Testing URL entry component', () => {\r\n  let mobilePreview: ReactWrapper<IMobilePreviewProps, IMobilePreviewState>;\r\n  /* tslint:disable:no-any */\r\n  let urlEntry: ReactWrapper<IMobilePreviewURLEntryProps, any>;\r\n  /* tslint:enable:no-any */\r\n\r\n  beforeEach(() => {\r\n    mobilePreview = mount<IMobilePreviewProps, IMobilePreviewState>(\r\n      React.createElement(MobilePreview, { deviceType: DeviceType.Phone })\r\n    );\r\n    urlEntry = mobilePreview.find(MobilePreviewHeaderBar).find(MobilePreviewURLEntry);\r\n  });\r\n\r\n  afterEach(() => {\r\n    mobilePreview.unmount();\r\n  });\r\n\r\n  it('changes the URL to users entry', () => {\r\n    const newURL: string = 'www.bing.com';\r\n    urlEntry.find('input').simulate('change', { target: {value: newURL}});\r\n    urlEntry.find('button').simulate('click');\r\n\r\n  });\r\n\r\n  it('url doesn\\'t change when user clicks submit with an empty url', () => {\r\n    const url: string = mobilePreview.state('url');\r\n    urlEntry.find(Button).simulate('click');\r\n    assert.equal(mobilePreview.state('url'), url);\r\n  });\r\n});"],"sourceRoot":"/src"}