{"version":3,"sources":["components/mobilePreview/mobilePreviewRotate/test/MobilePreviewRotate.test.ts"],"names":[],"mappings":";AAAA,qBAAuB,MAAM,CAAC,CAAA;AAC9B,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,uBAAoC,QAAQ,CAAC,CAAA;AAE7C,8BAIO,mCAAmC,CAAC,CAAA;AAC3C,oCAEO,+CAA+C,CAAC,CAAA;AAEvD,QAAQ,CAAC,wBAAwB,EAAE;IACjC,2BAA2B;IAC3B,IAAI,mBAAiE,CAAC;IACtE,IAAI,aAAqE,CAAC;IAC1E,0BAA0B;IAE1B,UAAU,CAAC;QACT,aAAa,GAAG,cAAK,CACnB,KAAK,CAAC,aAAa,CAAC,uBAAa,CAAC,CACnC,CAAC;QAEF,mBAAmB,GAAG,aAAa,CAAC,IAAI,CAAC,6BAAmB,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,aAAa,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE;QAChD,aAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE,iCAAiB,CAAC,QAAQ,EACrF,kDAAkD,CAAC,CAAC;QAEtD,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAEhD,aAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE,iCAAiB,CAAC,SAAS,EACtF,6CAA6C,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE;QAChD,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAChD,aAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE,iCAAiB,CAAC,SAAS,EACtF,mDAAmD,CAAC,CAAC;QAEvD,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAEhD,aAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE,iCAAiB,CAAC,QAAQ,EACrF,4CAA4C,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","file":"components/mobilePreview/mobilePreviewRotate/test/MobilePreviewRotate.test.js","sourcesContent":["import { assert } from 'chai';\r\nimport * as React from 'react';\r\nimport { mount, ReactWrapper } from 'enzyme';\r\n\r\nimport MobilePreview, {\r\n  DeviceOrientation,\r\n  IMobilePreviewProps,\r\n  IMobilePreviewState\r\n} from '../../mobilePreview/MobilePreview';\r\nimport MobilePreviewRotate, {\r\n  IMobilePreviewRotateProps\r\n} from '../../mobilePreviewRotate/MobilePreviewRotate';\r\n\r\ndescribe('Testing rotate feature', () => {\r\n  /* tslint:disable:no-any */\r\n  let mobilePreviewRotate: ReactWrapper<IMobilePreviewRotateProps, any>;\r\n  let mobilePreview: ReactWrapper<IMobilePreviewProps, IMobilePreviewState>;\r\n  /* tslint:enable:no-any */\r\n\r\n  beforeEach(() => {\r\n    mobilePreview = mount<IMobilePreviewProps, IMobilePreviewState>(\r\n      React.createElement(MobilePreview)\r\n    );\r\n\r\n    mobilePreviewRotate = mobilePreview.find(MobilePreviewRotate);\r\n  });\r\n\r\n  afterEach(() => {\r\n    mobilePreview.unmount();\r\n  });\r\n\r\n  it('changes from portrait to landscape on click', () => {\r\n    assert.equal(mobilePreviewRotate.prop('currentOrientation'), DeviceOrientation.Portrait,\r\n      'current orientation should start off as Portrait');\r\n\r\n    mobilePreviewRotate.find('a').simulate('click');\r\n\r\n    assert.equal(mobilePreviewRotate.prop('currentOrientation'), DeviceOrientation.Landscape,\r\n      'current orientation should now be Landscape');\r\n  });\r\n\r\n  it('changes from landscape to portrait on click', () => {\r\n    mobilePreviewRotate.find('a').simulate('click');\r\n    assert.equal(mobilePreviewRotate.prop('currentOrientation'), DeviceOrientation.Landscape,\r\n      'current orientation should start off as Landscape');\r\n\r\n    mobilePreviewRotate.find('a').simulate('click');\r\n\r\n    assert.equal(mobilePreviewRotate.prop('currentOrientation'), DeviceOrientation.Portrait,\r\n      'current orientation should now be Portrait');\r\n  });\r\n\r\n});"],"sourceRoot":"/src"}