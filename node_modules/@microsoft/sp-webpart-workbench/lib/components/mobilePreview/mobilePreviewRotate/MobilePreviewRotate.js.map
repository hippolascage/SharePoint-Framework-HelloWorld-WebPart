{"version":3,"sources":["components/mobilePreview/mobilePreviewRotate/MobilePreviewRotate.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,uCAAoB,wBAAwB,CAAC,CAAA;AAE7C,gDAAmB,mCAAmC,CAAC,CAAA;AAEvD,8BAAkC,gCAAgC,CAAC,CAAA;AAOnE;IAAiD,uCAAgD;IAC/F,6BAAY,KAAgC;QAC1C,kBAAM,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IAEM,oCAAM,GAAb;QACE,IAAM,eAAe,GAAW,4BAAG,CAAC,SAAS,EAAE,iBAAiB,EAAE,2BAA2B,EAC3F,yCAAM,CAAC,uBAAuB,CAAC,CAAC;QAElC,MAAM,CAAA,CACJ,qBAAC,GAAG,SACF,qBAAC,CAAC,IAAC,OAAO,EAAG,IAAI,CAAC,cAAgB,GAChC,qBAAC,IAAI,IAAC,SAAS,EAAG,eAAiB,EAAQ,CACzC,CACA,CACP,CAAC;IACJ,CAAC;IAEO,4CAAc,GAAtB;QACE,IAAM,WAAW,GAAsB,IAAI,CAAC,KAAK,CAAC,kBAAkB,KAAK,iCAAiB,CAAC,QAAQ;YAC/F,iCAAiB,CAAC,SAAS,GAAG,iCAAiB,CAAC,QAAQ,CAAC;QAE7D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IACnC,CAAC;IACH,0BAAC;AAAD,CA1BA,AA0BC,CA1BgD,KAAK,CAAC,SAAS,GA0B/D;AA1BD;qCA0BC,CAAA","file":"components/mobilePreview/mobilePreviewRotate/MobilePreviewRotate.js","sourcesContent":["import * as React from 'react';\r\nimport { css } from 'office-ui-fabric-react';\r\n\r\nimport styles from './MobilePreviewRotate.module.scss';\r\n\r\nimport { DeviceOrientation } from '../mobilePreview/MobilePreview';\r\n\r\nexport interface IMobilePreviewRotateProps {\r\n  onRotate: (orientation: DeviceOrientation) => void;\r\n  currentOrientation: DeviceOrientation;\r\n}\r\n\r\nexport default class MobilePreviewRotate extends React.Component<IMobilePreviewRotateProps, void> {\r\n  constructor(props: IMobilePreviewRotateProps) {\r\n    super(props);\r\n\r\n    this._onClickRotate = this._onClickRotate.bind(this);\r\n  }\r\n\r\n  public render(): React.ReactElement<{}> {\r\n    const rotateIconClass: string = css('ms-Icon', 'ms-Icon--reload', 'ms-fontColor-neutralLight',\r\n      styles.mobilePreviewRotateIcon);\r\n\r\n    return(\r\n      <div>\r\n        <a onClick={ this._onClickRotate }>\r\n          <span className={ rotateIconClass }></span>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onClickRotate(): void {\r\n    const orientation: DeviceOrientation = this.props.currentOrientation === DeviceOrientation.Portrait ?\r\n        DeviceOrientation.Landscape : DeviceOrientation.Portrait;\r\n\r\n    this.props.onRotate(orientation);\r\n  }\r\n}"],"sourceRoot":"/src"}