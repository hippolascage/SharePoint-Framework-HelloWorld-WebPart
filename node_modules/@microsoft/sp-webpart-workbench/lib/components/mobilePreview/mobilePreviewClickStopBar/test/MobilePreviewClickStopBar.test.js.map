{"version":3,"sources":["components/mobilePreview/mobilePreviewClickStopBar/test/MobilePreviewClickStopBar.test.ts"],"names":[],"mappings":"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","file":"components/mobilePreview/mobilePreviewClickStopBar/test/MobilePreviewClickStopBar.test.js","sourcesContent":["import { assert } from 'chai';\r\nimport * as React from 'react';\r\nimport { mount, ReactWrapper } from 'enzyme';\r\n\r\nimport MobilePreview, {\r\n  DeviceOrientation,\r\n  DeviceType,\r\n  IMobilePreviewProps,\r\n  IMobilePreviewState,\r\n  IDeviceList\r\n} from '../../mobilePreview/MobilePreview';\r\nimport MobilePreviewClickStopBar, {\r\n  IMobilePreviewClickStopBarProps\r\n} from '../../mobilePreviewClickStopBar/MobilePreviewClickStopBar';\r\nimport MobilePreviewClickStop from '../../mobilePreviewClickStop/MobilePreviewClickStop';\r\nimport MobilePreviewDimensionInput from '../../mobilePreviewDimensionInput/MobilePreviewDimensionInput';\r\nimport MobilePreviewRotate from '../../mobilePreviewRotate/MobilePreviewRotate';\r\n\r\ndescribe('Testing MobilePreview click stop bar', () => {\r\n  let mobilePreview: ReactWrapper<IMobilePreviewProps, IMobilePreviewState>;\r\n  /* tslint:disable:no-any */\r\n  let clickStopBar: ReactWrapper<IMobilePreviewClickStopBarProps, any>;\r\n  /* tslint:enable:no-any */\r\n  const deviceList: IDeviceList = {\r\n    phones: [\r\n      { name: 'Phone 1', width: 100, height: 200 },\r\n      { name: 'Phone 2', width: 200, height: 100 },\r\n      { name: 'Phone 3', width: 50, height: 80 }\r\n    ],\r\n    tablets: [\r\n      { name: 'Tablet 1', width: 300, height: 400 },\r\n      { name: 'Tablet 2', width: 400, height: 300 },\r\n      { name: 'Tablet 3', width: 200, height: 200 }\r\n    ],\r\n    desktops: []\r\n  };\r\n\r\n  beforeEach(() => {\r\n    mobilePreview = mount<IMobilePreviewProps, IMobilePreviewState>(\r\n      React.createElement(MobilePreview, {\r\n        deviceType: DeviceType.Phone,\r\n        devices: deviceList\r\n      })\r\n    );\r\n    clickStopBar = mobilePreview.find(MobilePreviewClickStopBar);\r\n  });\r\n\r\n  afterEach(() => {\r\n    mobilePreview.unmount();\r\n  });\r\n\r\n  it('renders the correct number of click stops', () => {\r\n    assert.equal(clickStopBar.find(MobilePreviewClickStop).length, 3, '3 click stops for 3 devices');\r\n  });\r\n\r\n  it('renders click stops in correct order', () => {\r\n    assert.equal(mobilePreview.state('currentOrientation'), DeviceOrientation.Portrait,\r\n      'current orientation should now be Portrait');\r\n\r\n    // Check that the click stops render in order from largest to smallest width\r\n    assert.equal(clickStopBar.find(MobilePreviewClickStop).first().props().device.name,\r\n      'Phone 2', 'longest click stop');\r\n    assert.equal(clickStopBar.find(MobilePreviewClickStop).at(1).props().device.name,\r\n      'Phone 1', 'middle click stop');\r\n    assert.equal(clickStopBar.find(MobilePreviewClickStop).last().props().device.name,\r\n      'Phone 3', 'shortest click stop');\r\n  });\r\n\r\n  it('renders click stops correctly after switching to tablet mode', () => {\r\n    // Change to tablet mode to check how the devices re-sort\r\n    mobilePreview.setState({\r\n      currentDevice: deviceList.tablets[0],\r\n      currentOrientation: DeviceOrientation.Landscape,\r\n      deviceType: DeviceType.Tablet,\r\n      url: mobilePreview.state('url')\r\n    });\r\n\r\n    assert.equal(mobilePreview.state('deviceType'), DeviceType.Tablet, 'Device type is now tablet');\r\n\r\n    assert.equal(mobilePreview.state('currentOrientation'), DeviceOrientation.Landscape,\r\n      'current orientation should now be Landscape');\r\n\r\n    assert.equal(clickStopBar.find(MobilePreviewClickStop).first().props().device.name,\r\n      'Tablet 2', 'longest click stop');\r\n    assert.equal(clickStopBar.find(MobilePreviewClickStop).at(1).props().device.name,\r\n      'Tablet 1', 'middle click stop');\r\n    assert.equal(clickStopBar.find(MobilePreviewClickStop).last().props().device.name,\r\n      'Tablet 3', 'shortest click stop');\r\n  });\r\n\r\n  it('renders correct click stops after a rotate', () => {\r\n    assert.equal(mobilePreview.state('currentOrientation'), DeviceOrientation.Portrait,\r\n      'current orientation should now be Portrait');\r\n\r\n    mobilePreview.find(MobilePreviewRotate).find('a').simulate('click');\r\n\r\n    assert.equal(mobilePreview.state('currentOrientation'), DeviceOrientation.Landscape,\r\n      'current orientation should now be Landscape');\r\n\r\n    assert.equal(clickStopBar.find(MobilePreviewClickStop).first().props().device.name,\r\n      'Phone 1', 'longest click stop');\r\n    assert.equal(clickStopBar.find(MobilePreviewClickStop).at(1).props().device.name,\r\n      'Phone 2', 'middle click stop');\r\n    assert.equal(clickStopBar.find(MobilePreviewClickStop).last().props().device.name,\r\n      'Phone 3', 'shortest click stop');\r\n  });\r\n\r\n  it('shows the Custom Device label when a user changes the dimensions', () => {\r\n    /* tslint:disable:no-any */\r\n    const input: ReactWrapper<React.HTMLAttributes, any> =\r\n      mobilePreview.find(MobilePreviewDimensionInput).find('input').first();\r\n    /* tslint:enable:no-any */\r\n    // Change the dimensions to switch to a custom device\r\n    input.simulate('change', {target: {value: 60}});\r\n\r\n    assert.equal(clickStopBar.find('#clickStopBarLabel').text(), 'Custom Device', ' label says \"Custom Device\"');\r\n  });\r\n\r\n  it('changes back to device label from Custom Device when clicking a click stop', () => {\r\n    /* tslint:disable:no-any */\r\n    const input: ReactWrapper<React.HTMLAttributes, any> =\r\n      mobilePreview.find(MobilePreviewDimensionInput).find('input').first();\r\n    /* tslint:enable:no-any */\r\n    // Change the dimensions to switch to a custom device\r\n    input.simulate('change', {target: {value: 60}});\r\n\r\n    clickStopBar.find(MobilePreviewClickStop).first().simulate('click');\r\n    assert.notEqual(clickStopBar.find('#clickStopBarLabel').text(), 'Custom Device',\r\n      ' label no longer says \"Custom Device\"');\r\n  });\r\n\r\n});"],"sourceRoot":"/src"}