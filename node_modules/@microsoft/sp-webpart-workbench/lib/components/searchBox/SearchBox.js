"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var React = require('react');
require('./SearchBox.scss');
var SearchBox = (function (_super) {
    __extends(SearchBox, _super);
    function SearchBox() {
        _super.call(this);
        this.state = {
            isActive: false,
            value: ''
        };
        this._onClose = this._onClose.bind(this);
        this._onInputBlur = this._onInputBlur.bind(this);
        this._onInputChange = this._onInputChange.bind(this);
        this._onInputFocus = this._onInputFocus.bind(this);
        this._onInputKeyPress = this._onInputKeyPress.bind(this);
    }
    SearchBox.prototype.render = function () {
        var label = this.props.label;
        return (React.createElement("div", {className: 'ms-SearchBox' + (this.state.isActive ? ' is-active' : '')}, React.createElement("input", {className: 'ms-SearchBox-field', onBlur: this._onInputBlur, onChange: this._onInputChange, onFocus: this._onInputFocus, onKeyPress: this._onInputKeyPress, value: this.state.value}), React.createElement("label", {className: 'ms-SearchBox-label', style: {
            display: this.state.isActive || this.state.value ? 'none' : 'block'
        }}, React.createElement("i", {className: 'ms-SearchBox-icon ms-Icon ms-Icon--search'}), label), React.createElement("button", {className: 'ms-SearchBox-closeButton', onMouseDown: this._onClose}, React.createElement("i", {className: 'ms-Icon ms-Icon--x'}))));
    };
    SearchBox.prototype.getValue = function () {
        return this.state.value;
    };
    SearchBox.prototype.setValue = function (value) {
        this.setState({
            isActive: this.state.isActive,
            value: value
        });
    };
    ;
    SearchBox.prototype._onClose = function () {
        this.setState({
            isActive: false,
            value: ''
        });
    };
    SearchBox.prototype._onInputBlur = function () {
        this.setState({
            isActive: false,
            value: this.state.value
        });
    };
    SearchBox.prototype._onInputChange = function (e) {
        this.setState({
            isActive: this.state.isActive,
            value: e.target.value
        });
        if (this.props.onChange) {
            this.props.onChange(e.target.value);
        }
    };
    SearchBox.prototype._onInputFocus = function () {
        this.setState({
            isActive: true,
            value: this.state.value
        });
    };
    SearchBox.prototype._onInputKeyPress = function (e) {
        var value = this.getValue();
        if (value && e.charCode === 13 /* Enter */ && this.props.onSearch) {
            this.props.onSearch(this.getValue());
        }
    };
    return SearchBox;
}(React.Component));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = SearchBox;

//# sourceMappingURL=SearchBox.js.map
