{"version":3,"sources":["components/zoneHost/ZoneHost.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,+BAA4B,2BAA2B,CAAC,CAAA;AAExD,QAAO,iBAAiB,CAAC,CAAA;AAazB;IAAsC,4BAA+C;IAQnF;QACE,iBAAO,CAAC;QAER,IAAI,CAAC,KAAK,GAAG;YACX,UAAU,EAAE,KAAK;SAClB,CAAC;IACJ,CAAC;IAEM,yBAAM,GAAb;QACE,MAAM,CAAC,CACL,qBAAC,GAAG,IACF,SAAS,EAAG,IAAI,CAAC,aAAa,EAAI,EAClC,GAAG,EAAC,UAAU,EACd,UAAU,EAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAG,EAC1C,WAAW,EAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAG,qBAGtC,CACT,CAAC;IACJ,CAAC;IAEM,oCAAiB,GAAxB;QACE,2BAA2B;QAC3B,IAAM,SAAS,GAAsC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QAC1E,0BAA0B;QAE1B,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACd,IAAM,eAAe,GAAgB,IAAI,CAAC,IAAI,CAAC,QAAuB,CAAC;YACvE,2BAA2B;YAC3B,IAAM,KAAK,GAAQ,IAAI,SAAS,CAAC,eAAe,CAAC,CAAC;YAClD,0BAA0B;YAE1B,KAAK,CAAC,MAAM,CAAC,4BAAW,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IAEO,gCAAa,GAArB;QACE,MAAM,CAAC,UAAU;YACV,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,aAAa,GAAG,EAAE,CAAC;YAC3C,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,uBAAuB,GAAG,EAAE,CAAC,CAAC;IAChE,CAAC;IAEO,8BAAW,GAAnB,UAAoB,EAAmB;QACrC,EAAE,CAAC,cAAc,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC;YACZ,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;IACL,CAAC;IAEO,+BAAY,GAApB,UAAqB,EAAmB;QACtC,IAAI,CAAC,QAAQ,CAAC;YACZ,UAAU,EAAE,KAAK;SAClB,CAAC,CAAC;IACL,CAAC;IA5Da,yBAAgB,GAAW,WAAW,CAAC;IA8DvD,eAAC;AAAD,CA/DA,AA+DC,CA/DqC,KAAK,CAAC,SAAS,GA+DpD;AA/DD;0BA+DC,CAAA","file":"components/zoneHost/ZoneHost.js","sourcesContent":["import * as React from 'react';\r\nimport { DisplayMode } from '@microsoft/sp-client-base';\r\n\r\nimport './ZoneHost.scss';\r\n\r\nexport interface IZoneHostProps {\r\n  /* tslint:disable:no-any */\r\n  addinType: new (element: HTMLElement) => any;\r\n  /* tslint:enable:no-any */\r\n  isEditing?: boolean;\r\n}\r\n\r\nexport interface IZoneHostState {\r\n  isDropping: boolean;\r\n}\r\n\r\nexport default class ZoneHost extends React.Component<IZoneHostProps, IZoneHostState> {\r\n  public static columnDefinition: string = 'ms-u-sm12';\r\n\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    zoneArea: HTMLDivElement;\r\n  };\r\n\r\n  public constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isDropping: false\r\n    };\r\n  }\r\n\r\n  public render(): React.ReactElement<IZoneHostProps> {\r\n    return (\r\n      <div\r\n        className={ this._getClassName() }\r\n        ref='zoneArea'\r\n        onDragOver={ this._onDragOver.bind(this) }\r\n        onDragLeave={ this._onDragLeave.bind(this) }>\r\n\r\n        I am a webpart.\r\n        </div>\r\n    );\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    /* tslint:disable:no-any */\r\n    const addinType: new (element: HTMLElement) => any = this.props.addinType;\r\n    /* tslint:enable:no-any */\r\n\r\n    if (addinType) {\r\n      const zoneAreaElement: HTMLElement = this.refs.zoneArea as HTMLElement;\r\n      /* tslint:disable:no-any */\r\n      const addin: any = new addinType(zoneAreaElement);\r\n      /* tslint:enable:no-any */\r\n\r\n      addin.render(DisplayMode.Read);\r\n    }\r\n  }\r\n\r\n  private _getClassName(): string {\r\n    return 'ZoneHost' +\r\n           (this.props.isEditing ? ' is-editing' : '') +\r\n           (this.state.isDropping ? ' ZoneHost--isDropping' : '');\r\n  }\r\n\r\n  private _onDragOver(ev: React.DragEvent): void {\r\n    ev.preventDefault();\r\n    this.setState({\r\n      isDropping: true\r\n    });\r\n  }\r\n\r\n  private _onDragLeave(ev: React.DragEvent): void {\r\n    this.setState({\r\n      isDropping: false\r\n    });\r\n  }\r\n\r\n}\r\n\r\n"],"sourceRoot":"/src"}