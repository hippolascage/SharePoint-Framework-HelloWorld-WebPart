import { ServiceScope, IServiceScopeProvider } from '@microsoft/sp-client-base';
export interface IPageDefinition {
    officeHeaderTitle: string;
    hasOfficeHeader: boolean;
    hasCommandBar: boolean;
    hasNavPane: boolean;
    hasDetailsPane: boolean;
}
export interface IPageStore extends IServiceScopeProvider {
    pageDefinition: IPageDefinition;
    setSerializeCallback: (callback: () => string) => void;
    logSerializedStateCallback: (callback: (b: boolean) => string) => void;
    setClearCallback: (callback: () => void) => void;
    getPageState: () => string;
    clearPageState: () => void;
    getPageReadyPromise(): Promise<void>;
}
export declare class PageStore implements IPageStore {
    _clearPage: () => void;
    pageDefinition: IPageDefinition;
    private _serviceScope;
    private _PAGE_DATA_KEY;
    private _autoSave;
    private _serializePage;
    private _resolvePageReady;
    private _pageReadyPromise;
    constructor(serviceScope: ServiceScope);
    serviceScope: ServiceScope;
    setSerializeCallback(callback: () => string): void;
    logSerializedStateCallback(callback: (b: boolean) => string): void;
    setClearCallback(callback: () => void): void;
    update(options: IPageDefinition): void;
    savePageState(): void;
    clearPageState(): void;
    getPageState(): string;
    getPageReadyPromise(): Promise<void>;
    setPageReady(): void;
}
