{"version":3,"sources":["components/page/ConnectedPage.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAE/B,qBAAiB,QAAQ,CAAC,CAAA;AAI1B;IAA2C,iCAA2B;IAAtE;QAA2C,8BAA2B;IActE,CAAC;IAHQ,8BAAM,GAAb;QACE,MAAM,CAAC,oBAAC,cAAI,GAAC,KAAK,EAAG,IAAI,CAAC,OAAO,CAAC,SAAW,EAAC,QAAQ,EAAG,IAAI,CAAC,OAAO,CAAC,QAAU,EAAG,CAAC;IACtF,CAAC;IAZa,0BAAY,GAAO;QAC/B,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;QAC5C,QAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;KAC5C,CAAC;IAUJ,oBAAC;AAAD,CAdA,AAcC,CAd0C,KAAK,CAAC,SAAS,GAczD;AAdD;+BAcC,CAAA","file":"components/page/ConnectedPage.js","sourcesContent":["import * as React from 'react';\r\n\r\nimport Page from './Page';\r\nimport { PageStore } from './PageStore';\r\nimport { WorkBenchStore } from '../../stores/WorkBenchStore';\r\n\r\nexport default class ConnectedPage extends React.Component<void, void> {\r\n  public static contextTypes: {} = {\r\n    pageStore: React.PropTypes.object.isRequired,\r\n    appStore: React.PropTypes.object.isRequired\r\n  };\r\n\r\n  public context: {\r\n    pageStore: PageStore,\r\n    appStore: WorkBenchStore\r\n  };\r\n\r\n  public render(): React.ReactElement<{}> {\r\n    return <Page store={ this.context.pageStore } appStore={ this.context.appStore } />;\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}