{"version":3,"sources":["components/page/Page.tsx"],"names":[],"mappings":"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","file":"components/page/Page.js","sourcesContent":["import * as React from 'react';\r\n\r\nimport { observer } from 'mobservable-react';\r\nimport NavPane from '../navPane/NavPane';\r\nimport { IPageStore, IPageDefinition } from './PageStore';\r\nimport { Canvas } from '@microsoft/sp-client-preview';\r\nimport { IWorkBenchStore } from '../../stores/WorkBenchStore';\r\n/* tslint:disable:max-line-length */\r\nimport styles from '@microsoft/sp-client-preview/lib/local/clientSideWebParts/propertyPane/propertyPaneController/PropertyPaneController.module.scss';\r\n/* tslint:enable:max-line-length */\r\n\r\nimport './Page.scss';\r\n\r\nexport interface IPageProps {\r\n  store: IPageStore;\r\n  appStore: IWorkBenchStore;\r\n}\r\n\r\n@observer\r\nexport default class Page extends React.Component<IPageProps, void> {\r\n  private _canvas: Canvas;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this._canvas = new Canvas(\r\n      // @todo (SPPPlat VSO bug #189028) This is a workaround for a TypeScript compiler bug\r\n      // that we reported.  After the compiler is fixed, we will remove the typecast.\r\n      /* tslint:disable:no-any */\r\n      this.props.store.serviceScope as any,\r\n      /* tslint:disable:no-any */\r\n      document.querySelector('#Canvas') as HTMLDivElement,\r\n      this.props.appStore.displayMode\r\n    );\r\n\r\n    // Don't render webparts until the page is ready\r\n    this.props.store.getPageReadyPromise().then(() => {\r\n      this._canvas.render(this.props.store.getPageState());\r\n\r\n      // @todo: the canvas has a bug and needs any empty array in order to render. Ideally render() should\r\n      // render an empty canvas.\r\n      this.props.store.setClearCallback(this._clearPage.bind(this));\r\n      this.props.store.setSerializeCallback(() => { return this._canvas.serialize(); });\r\n      this.props.store.logSerializedStateCallback((): string => {\r\n        return this._canvas.serialize();\r\n      });\r\n    });\r\n  }\r\n\r\n  public componentWillReceiveProps(props: IPageProps): void {\r\n    if (this._canvas) {\r\n      this._canvas.displayMode = this.props.appStore.displayMode;\r\n    }\r\n  }\r\n\r\n  public render(): React.ReactElement<IPageProps> {\r\n    const {\r\n      hasOfficeHeader,\r\n      hasNavPane,\r\n      hasCommandBar,\r\n      hasDetailsPane\r\n    }: IPageDefinition = this.props.store.pageDefinition;\r\n\r\n    const rootClass: string = _getClassName(\r\n      'Page',\r\n      {\r\n        'Page--hasHeader': hasOfficeHeader,\r\n        'Page--hasNavPane': hasNavPane,\r\n        'Page--hasCommandBar': hasCommandBar,\r\n        'Page--hasDetailsPane': hasDetailsPane\r\n      });\r\n\r\n    return (\r\n      <div className={ rootClass }>\r\n\r\n        <div className='Page-belowHeader'>\r\n\r\n          { hasNavPane\r\n            ? <NavPane/>\r\n            /* tslint:disable:no-null-keyword */\r\n            : null\r\n            /* tslint:enable:no-null-keyword */\r\n          }\r\n\r\n          <div id='pageContent' className='Page-content'>\r\n            <div id='Canvas'/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _clearPage(): void {\r\n    this._canvas.render();\r\n\r\n    // Removing the property pane with slide effect, when discard is clicked.\r\n    const propertyPaneContainer: HTMLDivElement =\r\n      document.getElementById('propertyPaneContainer') as HTMLDivElement;\r\n    if (propertyPaneContainer) {\r\n      propertyPaneContainer.classList.remove(styles.showPane);\r\n\r\n      // This is to see the slide effect of the property pane and then empty the container.\r\n      window.setTimeout(() => {\r\n        while (propertyPaneContainer.firstChild) {\r\n          propertyPaneContainer.removeChild(propertyPaneContainer.firstChild);\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n}\r\n\r\nfunction _getClassName(baseClass: string, map: { [key: string]: boolean }): string {\r\n  let className: string = baseClass;\r\n\r\n  for (const flag in map) {\r\n    if (map.hasOwnProperty(flag) && map[flag]) {\r\n      className += ' ' + flag;\r\n    }\r\n  }\r\n\r\n  return className;\r\n}\r\n"],"sourceRoot":"/src"}