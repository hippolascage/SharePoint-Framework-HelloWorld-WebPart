{"version":3,"sources":["spWebpartWorkbench.tsx"],"names":[],"mappings":";;;;;;AAAA,OAAO,CAAC,0BAA0B,CAAC,CAAC;AAEpC,uCAAuC;AACvC,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,sCAAsC;AACtC,IAAY,QAAQ,WAAM,WAAW,CAAC,CAAA;AACtC,kCAAsC,8BAA8B,CAAC,CAAA;AACrE,iCAAyB,6BAA6B,CAAC,CAAA;AAEvD,0BAA0B,kCAAkC,CAAC,CAAA;AAE7D,+BAA+B,yBAAyB,CAAC,CAAA;AACzD,0BAA0B,6BAA6B,CAAC,CAAA;AAExD,QAAO,yBAAyB,CAAC,CAAA;AAEjC;IAAiC,sCAAqB;IAAtD;QAAiC,8BAAqB;IA6BtD,CAAC;IA1BW,mCAAM,GAAhB;QAAA,iBAmBC;QAlBC,qFAAqF;QACrF,+EAA+E;QAC/E,2BAA2B;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,qBAAS,CAAC,IAAI,CAAC,KAAK,CAAC,YAAmB,CAAC,CAAC;QAChE,0BAA0B;QAE1B,4EAA4E;QAC5E,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAClD,0BAAY,CAAC,uBAAuB,EAAE,CAAC,IAAI,CAAC;gBAC1C,+BAA+B;gBAC/B,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;gBACxC,8BAA8B;gBAE9B,KAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;YACjC,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QACjC,CAAC;IACH,CAAC;IAES,qCAAQ,GAAlB;QACE,IAAM,cAAc,GAAmB,IAAI,+BAAc,EAAE,CAAC;QAE5D,QAAQ,CAAC,MAAM,CAAC,oBAAC,qBAAS,GAAC,KAAK,EAAG,cAAgB,EAAC,SAAS,EAAG,IAAI,CAAC,UAAY,EAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACzG,CAAC;IACH,yBAAC;AAAD,CA7BA,AA6BC,CA7BgC,yCAAqB,GA6BrD;AAGD;kBAAe,IAAI,kBAAkB,EAA2B,CAAC;AACjE,+BAA+B","file":"spWebpartWorkbench.js","sourcesContent":["require('set-webpack-public-path!');\r\n\r\n/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport * as ReactDOM from 'react-dom';\r\nimport { ClientSideApplication } from '@microsoft/sp-client-preview';\r\nimport moduleLoader from '@microsoft/sp-module-loader';\r\n\r\nimport { WorkBench } from './components/Workbench/Workbench';\r\n\r\nimport { WorkBenchStore } from './stores/WorkBenchStore';\r\nimport { PageStore } from './components/page/PageStore';\r\n\r\nimport './workbench.module.scss';\r\n\r\nclass SpWebpartWorkbench extends ClientSideApplication {\r\n  private _pageStore: PageStore;\r\n\r\n  protected onLoad(): void {\r\n    // @todo (SPPPlat VSO bug #189028) This is a workaround for a TypeScript compiler bug\r\n    // that we reported.  After the compiler is fixed, we will remove the typecast.\r\n    /* tslint:disable:no-any */\r\n    this._pageStore = new PageStore(this.shell.serviceScope as any);\r\n    /* tslint:enable:no-any */\r\n\r\n    // Only attempt to load debug manifests if we're running on a SharePoint box\r\n    if (!window.location.hostname.match(/localhost/i)) {\r\n      moduleLoader.forceLoadDebugManifests().then(() => {\r\n        /* tslint:disable:no-console */\r\n        console.debug('Debug manifests loaded');\r\n        /* tslint:enable:no-console */\r\n\r\n        this._pageStore.setPageReady();\r\n      });\r\n    } else {\r\n      this._pageStore.setPageReady();\r\n    }\r\n  }\r\n\r\n  protected onRender(): void {\r\n    const workbenchstore: WorkBenchStore = new WorkBenchStore();\r\n\r\n    ReactDOM.render(<WorkBench store={ workbenchstore } pageStore={ this._pageStore } />, this.domElement);\r\n  }\r\n}\r\n\r\n/* tslint:disable:export-name */\r\nexport default new SpWebpartWorkbench() as ClientSideApplication;\r\n/* tslint:enable:export-name */\r\n"],"sourceRoot":"/src"}