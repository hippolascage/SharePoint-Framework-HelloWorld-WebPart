{"version":3,"sources":["api/workbenchPage.ts"],"names":[],"mappings":"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","file":"api/workbenchPage.js","sourcesContent":["import * as path from 'path';\r\nimport * as os from 'os';\r\nimport * as fs from 'fs';\r\n\r\nimport { IServeTaskConfig } from 'gulp-core-build-serve/lib/ServeTask';\r\nimport { resolvePackage } from '@microsoft/sp-build-core-tasks/lib/utilities/Resolve';\r\n\r\n// Set up some base constants\r\nconst projectRootPath: string = process.cwd();\r\nconst workbenchRootPath: string = resolvePackage('@microsoft/sp-webpart-workbench', projectRootPath);\r\nconst hostname: string = os.hostname();\r\n\r\n// Get the running project's serve.json\r\nlet serveConfig: IServeTaskConfig;\r\ntry {\r\n  serveConfig = require(path.join(projectRootPath, 'config', 'serve.json'));\r\n} catch (e) {\r\n  // Could not load serve config, setting defaults.\r\n  serveConfig = {\r\n    port: 4321,\r\n    initialPage: ''\r\n  };\r\n}\r\n\r\n// Generate a favicon URL. Chrome will request one if we don't give a URL, so in order to avoid an error in the\r\n// console we'll give a URL.\r\nconst faviconUrl: string = getUrlForPath(path.join(workbenchRootPath, 'dist', 'assets', 'server-icon.png'));\r\n\r\n// Find the module loader.\r\nconst moduleLoaderPackageName: string = '@microsoft/sp-module-loader';\r\nlet moduleLoaderUrl: string;\r\ntry {\r\n  const moduleLoaderPoackagePath: string = resolvePackage(moduleLoaderPackageName, workbenchRootPath);\r\n  const moduleLoaderPath: string = path.join(moduleLoaderPoackagePath, 'dist', 'sp-module-loader.js');\r\n  moduleLoaderUrl = getUrlForPath(moduleLoaderPath);\r\n} catch (e) {\r\n  // Unable to get the module loader URL. We'll inform the user if they try to load the workbench page.\r\n}\r\n\r\n// Get the manifests.js URL.\r\nconst tempDirPath: string = path.join(projectRootPath, 'temp');\r\nconst manifestsJsPath: string = path.join(tempDirPath, 'manifests.js');\r\nconst manifestJsUrl: string = getUrlForPath(manifestsJsPath);\r\n\r\nfunction getUrlForPath(filePath: string): string {\r\n  const relativePath: string = path.relative(projectRootPath, filePath);\r\n  return `http://${hostname}:${serveConfig.port}/${relativePath.replace(/\\\\/g,'/')}`;\r\n}\r\n\r\nexport function generateWorkbenchPageContent(): string {\r\n  let head: string;\r\n  let body: string;\r\n  if (!moduleLoaderUrl) {\r\n    body = getErrorBody('Module loader could not be resolved. Unable to load workbench');\r\n  } else {\r\n    head = `\r\n  <script type=\"text/javascript\" src=\"${manifestJsUrl}\"></script>\r\n  <script type=\"text/javascript\" src=\"${moduleLoaderUrl}\"></script>\r\n  <script type=\"text/javascript\">\r\n    window.DEBUG = true;\r\n    window.ENVIRONMENTTYPE = 'Local';\r\n    window.SP = {};\r\n    // This is a hack to work around a react-redux issue.\r\n    window.process = { env: { NODE_ENV: 'production' } };\r\n\r\n    window.preloadedData = {\r\n      'clientSideApplicationId': '8be81a5c-af38-4bb2-af97-afa3b64dfbed',\r\n      manifests: debugManifests.getManifests(),\r\n      spPageContextInfo: {\r\n        'currentCultureName': 'en-us',\r\n        'siteId': '00000000-0000-4000-0000-111111111111',\r\n        'userDisplayName': 'User 1',\r\n        'userLoginName': 'user1@contoso.com',\r\n        'webAbsoluteUrl': 'https://wwww.contoso.com/sites/workbench',\r\n        'webId': '00000000-0000-4000-0000-222222222222',\r\n        'webPermMasks': { High: 0x7FFFFFFF, Low: 0xFFFFFFFF },\r\n        'webServerRelativeUrl': '/sites/workbench',\r\n        'webTitle': 'Local Workbench'\r\n      }\r\n    };\r\n\r\n  </script>`;\r\n\r\n  body = `\r\n  <script type=\"text/javascript\">\r\n    window.spModuleLoader.start(window.preloadedData);\r\n  </script>`;\r\n  }\r\n  return getPageWithBodyAndHead(body, head);\r\n}\r\n\r\nfunction getErrorBody(serrorMessage: string): string {\r\n  return `\r\n  <span style=\"font-weight:bold;color:red;font-size:20px;\">\r\n    ${serrorMessage}\r\n  </span>`;\r\n}\r\n\r\nfunction getPageWithBodyAndHead(body: string, head?: string): string {\r\n  return `<!doctype html>\r\n<html dir=\"ltr\">\r\n<head>\r\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n\r\n  <title>SharePoint Web Part Workbench</title>\r\n\r\n  <link rel=\"shortcut icon\" href=\"${faviconUrl}\" />\r\n  <link rel=\"stylesheet\" href=\"https://appsforoffice.microsoft.com/fabric/2.0.1/fabric.components.min.css\">\r\n${head || ''}\r\n</head>\r\n<body>\r\n${body}\r\n</body>\r\n</html>\r\n`;\r\n}\r\n\r\nconst workbenchFilePath: string = path.join(tempDirPath, 'workbench.html');\r\nfs.writeFileSync(workbenchFilePath, generateWorkbenchPageContent());\r\n\r\nconst redirectPath: string = getUrlForPath(workbenchFilePath);\r\n\r\n/* tslint:disable:no-any */\r\nexport default function workbenchPage(request: any, response: any): void {\r\n/* tslint:enable:no-any */\r\n  response.redirect(redirectPath);\r\n}\r\n"],"sourceRoot":"/src"}