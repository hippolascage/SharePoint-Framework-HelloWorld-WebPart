"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
require('set-webpack-public-path!');
/* tslint:disable:no-unused-variable */
var React = require('react');
/* tslint:enable:no-unused-variable */
var ReactDOM = require('react-dom');
var sp_client_preview_1 = require('@microsoft/sp-client-preview');
var sp_module_loader_1 = require('@microsoft/sp-module-loader');
var Workbench_1 = require('./components/Workbench/Workbench');
var WorkBenchStore_1 = require('./stores/WorkBenchStore');
var PageStore_1 = require('./components/page/PageStore');
require('./workbench.module.scss');
var SpWebpartWorkbench = (function (_super) {
    __extends(SpWebpartWorkbench, _super);
    function SpWebpartWorkbench() {
        _super.apply(this, arguments);
    }
    SpWebpartWorkbench.prototype.onLoad = function () {
        var _this = this;
        // @todo (SPPPlat VSO bug #189028) This is a workaround for a TypeScript compiler bug
        // that we reported.  After the compiler is fixed, we will remove the typecast.
        /* tslint:disable:no-any */
        this._pageStore = new PageStore_1.PageStore(this.shell.serviceScope);
        /* tslint:enable:no-any */
        // Only attempt to load debug manifests if we're running on a SharePoint box
        if (!window.location.hostname.match(/localhost/i)) {
            sp_module_loader_1.default.forceLoadDebugManifests().then(function () {
                /* tslint:disable:no-console */
                console.debug('Debug manifests loaded');
                /* tslint:enable:no-console */
                _this._pageStore.setPageReady();
            });
        }
        else {
            this._pageStore.setPageReady();
        }
    };
    SpWebpartWorkbench.prototype.onRender = function () {
        var workbenchstore = new WorkBenchStore_1.WorkBenchStore();
        ReactDOM.render(React.createElement(Workbench_1.WorkBench, {store: workbenchstore, pageStore: this._pageStore}), this.domElement);
    };
    return SpWebpartWorkbench;
}(sp_client_preview_1.ClientSideApplication));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = new SpWebpartWorkbench();
/* tslint:enable:export-name */

//# sourceMappingURL=spWebpartWorkbench.js.map
