{"version":3,"sources":["rules/a11yRoleRule.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAGH,IAAY,IAAI,WAAM,iBAAiB,CAAC,CAAA;AACxC,6BAA4C,uBAAuB,CAAC,CAAA;AAEpE,uHAAuH;AACvH,IAAM,KAAK,GAAW,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAE/D,yCAAyC;AACzC,IAAM,UAAU,GAAa,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,KAAK,CAAC,IAAI,CAAC,CAAC,UAAU,KAAK,KAAK,EAAhC,CAAgC,CAAC,CAAC;AAEjG;IACE,MAAM,CAAC,mEAAmE;QACxE,wFAAwF,CAAC;AAC7F,CAAC;AAHe,qCAA6B,gCAG5C,CAAA;AAED,qCAA4C,eAAuB;IACjE,MAAM,CAAC,8BAA2B,eAAe,oDAAgD;QAC/F,0EAA0E;QAC1E,wDAAwD,CAAC;AAC7D,CAAC;AAJe,mCAA2B,8BAI1C,CAAA;AAED,yEAAyE;AACzE;IAA0B,wBAAuB;IAAjD;QAA0B,8BAAuB;IAIjD,CAAC;IAHQ,oBAAK,GAAZ,UAAa,UAAyB;QACpC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IACrF,CAAC;IACH,WAAC;AAAD,CAJA,AAIC,CAJyB,IAAI,CAAC,KAAK,CAAC,YAAY,GAIhD;AAJY,YAAI,OAIhB,CAAA;AAED;IAAiC,sCAAe;IAAhD;QAAiC,8BAAe;IAiChD,CAAC;IAhCQ,8CAAiB,GAAxB,UAAyB,IAAqB;QAC5C,EAAE,CAAC,CAAC,0BAAW,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC;QACT,CAAC;QAED,IAAM,QAAQ,GAAW,6BAAc,CAAC,IAAI,CAAC,CAAC;QAE9C,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,0EAA0E;YAC1E,kFAAkF;YAClF,IAAM,gBAAgB,GAAa,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAE7E,EAAE,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAhC,CAAgC,CAAC,CAAC,CAAC,CAAC;gBACrE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAChC,IAAI,CAAC,QAAQ,EAAE,EACf,IAAI,CAAC,QAAQ,EAAE,EACf,2BAA2B,CAAC,QAAQ,CAAC,CACtC,CAAC,CAAC;YACL,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CACR,CAAC,IAAI,CAAC,WAAW;YACjB,QAAQ,KAAK,EAAE,CAAC,uDAAuD;QACzE,CAAC,CAAC,CAAC;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAChC,IAAI,CAAC,QAAQ,EAAE,EACf,IAAI,CAAC,QAAQ,EAAE,EACf,6BAA6B,EAAE,CAChC,CAAC,CAAC;QACL,CAAC;QAED,gBAAK,CAAC,iBAAiB,YAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IACH,yBAAC;AAAD,CAjCA,AAiCC,CAjCgC,IAAI,CAAC,UAAU,GAiC/C","file":"rules/a11yRoleRule.js","sourcesContent":["/**\r\n * @copyright Microsoft Corporation. All rights reserved.\r\n *\r\n * @a11yRole tslint rule of accessibility.\r\n */\r\n\r\nimport * as ts from 'typescript';\r\nimport * as Lint from 'tslint/lib/lint';\r\nimport { getPropName, getLiteralText } from '../utils/JsxAttribute';\r\n\r\n// Roles definition is from https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/src/util/attributes/role.json\r\nconst roles: Object = require('../utils/attributes/role.json');\r\n\r\n// The array of non-abstract valid rules.\r\nconst validRoles: string[] = Object.keys(roles).filter(role => roles[role].isAbstract === false);\r\n\r\nexport function getFailureStringUndefinedRole(): string {\r\n  return `'role' attribute undefined. You would like to select a role from ` +\r\n    `https://www.w3.org/TR/wai-aria/roles#role_definitions, or simply remove this attribute`;\r\n}\r\n\r\nexport function getFailureStringInvalidRole(invalidRoleName: string): string {\r\n  return `Invalid role attribute '${invalidRoleName}', elements with ARIA roles must use a valid, ` +\r\n    `non-abstract ARIA role. A reference to role definitions can be found at ` +\r\n    `https://www.w3.org/TR/wai-aria/roles#role_definitions.`;\r\n}\r\n\r\n// SOX #234814 Add optimization for applying jsx rules only on tsx files.\r\nexport class Rule extends Lint.Rules.AbstractRule {\r\n  public apply(sourceFile: ts.SourceFile): Lint.RuleFailure[] {\r\n    return this.applyWithWalker(new A11yRoleRuleWalker(sourceFile, this.getOptions()));\r\n  }\r\n}\r\n\r\nclass A11yRoleRuleWalker extends Lint.RuleWalker {\r\n  public visitJsxAttribute(node: ts.JsxAttribute): void {\r\n    if (getPropName(node).toUpperCase() !== 'ROLE') {\r\n      return;\r\n    }\r\n\r\n    const roleName: string = getLiteralText(node);\r\n\r\n    if (roleName) {\r\n      // Splitted by space doesn't mean the multiple role definition is correct,\r\n      // just because this rule is not checking if it is using multiple role definition.\r\n      const normalizedValues: string[] = String(roleName).toUpperCase().split(' ');\r\n\r\n      if (normalizedValues.some(value => validRoles.indexOf(value) === -1)) {\r\n        this.addFailure(this.createFailure(\r\n          node.getStart(),\r\n          node.getWidth(),\r\n          getFailureStringInvalidRole(roleName)\r\n        ));\r\n      }\r\n    } else if (\r\n      !node.initializer || // Check syntax like <div role />\r\n      roleName === '' // Check syntax like <div role='' /> or <div role=\"\" />\r\n    ) {\r\n      this.addFailure(this.createFailure(\r\n        node.getStart(),\r\n        node.getWidth(),\r\n        getFailureStringUndefinedRole()\r\n      ));\r\n    }\r\n\r\n    super.visitJsxAttribute(node);\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}