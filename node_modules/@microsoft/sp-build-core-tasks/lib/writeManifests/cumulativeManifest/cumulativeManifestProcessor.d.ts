import * as gulp from 'gulp';
import { IClientSideComponentManifest } from '@microsoft/sp-module-interfaces';
import { GulpTask } from 'gulp-core-build';
export interface ICumulativeManifestOptions {
    /**
     * IDs of manifests to exclude from the manifest map file.
     */
    ignoreOutputManifestIds?: string[];
    /**
     * The base path for debug manifests. Expected to match the result of the "debugBasePath" function passed to the
     *  WriteManifestsTask task.
     */
    baseUrl?: string;
}
export default class CumulativeManifestProcessor {
    private _options;
    private _parentTask;
    constructor(options: ICumulativeManifestOptions, parentTask: GulpTask<{}>);
    /**
     * Ths function:
     *  1. discovers all packages referenced in package.json
     *  2a. looks for a file in each discovered project's temp folder called manifests.json
     *  2b. looks for <id>.manifest.json files in the dist folder
     *  3. keeps a record of all of the manifests discovered in thereferenced projects, and resolves duplicates by
     *      taking the newest file
     *  4. generates new base URLs for each of the referenced projects' manifests to make them valid when "gulp serve"
     *      is run from this current project's directory
     *  5. collects all of these discovered manifests and the debugManifests parameter and generates an array of all
     *      manifests
     *  6. filters this array by the ignoreOutputManifestIds options
     *  7. drops a JSON file in the temp directory called manifests.json containing this array
     *  9. drops an initialization script in the temp directory called manifests.js that
     *      exports two functions. One that retruns the array with the manifests' base URLs as fully-qualified, and the
     *      other with manifests' base URLs as relative to the page root.
     */
    generateCumulativeManifest(gulp: gulp.Gulp, debugManifests: IClientSideComponentManifest[]): NodeJS.ReadWriteStream[];
    private _discoverManifestsForPackage(packagePath, forceSearch?);
}
