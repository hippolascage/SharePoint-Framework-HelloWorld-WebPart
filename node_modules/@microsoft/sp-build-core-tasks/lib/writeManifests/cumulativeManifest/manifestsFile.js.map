{"version":3,"sources":["writeManifests/cumulativeManifest/manifestsFile.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAGH,IAAY,GAAG,WAAM,KAAK,CAAC,CAAA;AAE3B,IAAM,cAAc,GAAmC,OAAO,CAAC,YAAY,CAAC,CAAC;AAE7E;IACE,uBAAuB;IACvB,IAAM,SAAS,GAAmC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC;IAC7F,SAAS,CAAC,OAAO,CAAC,UAAC,QAAsC;QACvD,IAAM,QAAQ,GAAa,QAAQ,CAAC,YAAY,CAAC,sBAAsB,CAAC;QACxE,IAAM,OAAO,GAAY,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAChD,QAAQ,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC;AAVe,6BAAqB,wBAUpC,CAAA;AAED;IACE,MAAM,CAAC,cAAc,CAAC;AACxB,CAAC;AAFe,oBAAY,eAE3B,CAAA","file":"writeManifests/cumulativeManifest/manifestsFile.js","sourcesContent":["/**\r\n * @copyright Microsoft Corporation. All rights reserved.\r\n *\r\n * @file manifestsFile.ts\r\n */\r\n\r\nimport { IClientSideComponentManifest } from '@microsoft/sp-module-interfaces';\r\nimport * as url from 'url';\r\n\r\nconst manfiestsArray: IClientSideComponentManifest[] = require('manifests!');\r\n\r\nexport function getLocalPageManifests(): IClientSideComponentManifest[] {\r\n  // Clone manfiestsArray\r\n  const manifests: IClientSideComponentManifest[] = JSON.parse(JSON.stringify(manfiestsArray));\r\n  manifests.forEach((manifest: IClientSideComponentManifest): void => {\r\n    const baseUrls: string[] = manifest.loaderConfig.internalModuleBaseUrls;\r\n    const baseUrl: url.Url = url.parse(baseUrls[0]);\r\n    baseUrls[0] = baseUrl.path;\r\n  });\r\n\r\n  return manifests;\r\n}\r\n\r\nexport function getManifests(): IClientSideComponentManifest[] {\r\n  return manfiestsArray;\r\n}\r\n"],"sourceRoot":"/source/"}