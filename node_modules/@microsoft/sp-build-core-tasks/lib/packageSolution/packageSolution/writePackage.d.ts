/// <reference path="node-zip.d.ts" />
/**
 * @file writePackage.ts
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 *
 * Writes a package xml object to disk, in both raw and zipped format
 */
import 'es6-promise';
import IXml from './models/packageXml/IXml';
import IOpenDocumentConventionXml from './models/packageXml/IOpenDocumentConventionXml';
import IPackageXml from './models/packageXml/IPackageXml';
import IFeatureXml from './models/packageXml/IFeatureXml';
import { IPackageSolutionTaskConfig } from '../PackageSolutionTask';
/**
 * Writes the ISolutionXml object containing the solution package xml to the disk using provided config
 */
export default function writePackage(solution: IPackageXml, config: IPackageSolutionTaskConfig): Promise<any>;
/**
 * Ensures that the contents of config.paths.debugDir have been deleted
 */
export declare function cleanRawPackageDirectory(config: IPackageSolutionTaskConfig): Promise<void>;
export declare function writeFeature(feature: IFeatureXml, config: IPackageSolutionTaskConfig, zip: ZipPackage): Promise<any>;
export declare function writeXmlFile(file: IXml, config: IPackageSolutionTaskConfig, zip: ZipPackage): Promise<void>;
export declare function writeODCFile(file: IOpenDocumentConventionXml, config: IPackageSolutionTaskConfig, zip: ZipPackage): Promise<any>;
