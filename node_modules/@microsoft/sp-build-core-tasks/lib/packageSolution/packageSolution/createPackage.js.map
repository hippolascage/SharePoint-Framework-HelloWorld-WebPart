{"version":3,"sources":["packageSolution/packageSolution/createPackage.ts"],"names":[],"mappings":"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","file":"packageSolution/packageSolution/createPackage.js","sourcesContent":["/**\r\n * @file createPackage.ts\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * Creates a client-side app package and writes it to disk\r\n */\r\n\r\nimport 'es6-promise';\r\nimport colors = require('colors');\r\n\r\nimport { IPackageSolutionTaskConfig } from '../PackageSolutionTask';\r\nimport IPackageXml from './models/packageXml/IPackageXml';\r\nimport IResources from './models/packageXml/IResources';\r\nimport normalizeSolutionDefinition from './utils/normalizeSolutionDefinition';\r\nimport createSolutionXml from './xmlGenerators/createSolutionXml';\r\nimport readCustomFeatures, { ICustomFeatures } from './utils/readCustomFeatures';\r\nimport readResources from './utils/readResources';\r\nimport writePackage from './writePackage';\r\n\r\nimport { IClientSideComponentManifest } from '@microsoft/sp-module-interfaces';\r\n\r\n/**\r\n * Creates and writes a package to disk using a package definition and manifest mapping\r\n */\r\nexport default\r\n  function createPackage(config: IPackageSolutionTaskConfig, manifests: Map<string, IClientSideComponentManifest>):\r\n  Promise<void> {\r\n  // @todo instead of using try/catch we should move config validation to a separate function\r\n  try {\r\n    console.log(colors.yellow('\\nVerifying configuration...'));\r\n\r\n    if (!manifests || !manifests.size) {\r\n      throw new Error('The webparts manifests list is empty. ' +\r\n        'Please ensure you have done a build and that your config file is pointed at the correct folder.');\r\n    }\r\n\r\n    if (!config.paths.zippedPackage || config.paths.zippedPackage === '') {\r\n      throw new Error('The package-solution.json config is missing a package name.');\r\n    }\r\n\r\n    console.log(colors.green('Done!\\n'));\r\n\r\n    console.log(colors.yellow('Normalizing solution information...'));\r\n    normalizeSolutionDefinition(config.solution, manifests);\r\n    console.log(colors.green('Done!\\n'));\r\n\r\n    console.log(colors.yellow('Reading feature_xml/ folder...'));\r\n    return readCustomFeatures(config).then(\r\n      (customFeatures: ICustomFeatures) => {\r\n        console.log(colors.green('Done!\\n'));\r\n        console.log(colors.yellow('Reading resources...'));\r\n        return readResources(config).then(\r\n          (resources: IResources) => {\r\n            console.log(colors.green('Done!\\n'));\r\n\r\n            console.log(colors.yellow('Generating solution XML...'));\r\n            const solutionXml: IPackageXml =\r\n              createSolutionXml(config.solution, customFeatures.customFeatureFilepath, resources);\r\n            console.log(colors.green('Done!\\n'));\r\n\r\n            solutionXml.customFiles = customFeatures.files;\r\n\r\n            console.log(colors.yellow(`Writing solution XML to ${config.paths.debugDir}...`));\r\n            return writePackage(solutionXml, config).then(\r\n              () => {\r\n                console.log(colors.green('Done!\\n'));\r\n                console.log(colors.bold.green('ALL DONE!\\n'));\r\n              },\r\n              (error) => {\r\n                console.error(colors.red(error));\r\n              }\r\n            );\r\n          }\r\n        );\r\n      },\r\n      (error) => {\r\n        console.error(colors.red(error));\r\n      }\r\n    );\r\n\r\n  } catch (error) {\r\n    console.error(colors.red(error));\r\n    if (error.stack) {\r\n      console.error(error.stack);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}