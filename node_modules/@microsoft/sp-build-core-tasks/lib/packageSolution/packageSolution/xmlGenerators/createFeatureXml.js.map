{"version":3,"sources":["packageSolution/packageSolution/xmlGenerators/createFeatureXml.ts"],"names":[],"mappings":"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","file":"packageSolution/packageSolution/xmlGenerators/createFeatureXml.js","sourcesContent":["/**\r\n * @file createFeatureXml.ts\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * Creates an package's Feature.Xml\r\n */\r\n\r\nimport * as XmlGenerator from 'xml';\r\nimport { merge } from 'lodash';\r\n\r\nimport createRelationshipsXml, { IRelationship } from './createRelationshipsXml';\r\nimport createComponentXml from './createComponentXml';\r\nimport createWebPartXml from './createWebPartXml';\r\nimport ComponentType from '../models/ComponentType';\r\nimport IFeature from '../models/packageDefinition/IFeature';\r\nimport IComponent from '../models/packageDefinition/IComponent';\r\nimport IResources from '../models/packageXml/IResources';\r\nimport IFeatureXml from '../models/packageXml/IFeatureXml';\r\nimport IXml from '../models/packageXml/IXml';\r\nimport IOpenDocumentConventionXml from '../models/packageXml/IOpenDocumentConventionXml';\r\nimport serializationOptions from './serializationOptions';\r\n\r\nexport default function createFeatureXml(feature: IFeature, resources: IResources): IFeatureXml {\r\n  feature = merge({\r\n    version: '1.0.0.0'\r\n  }, feature) as IFeature;\r\n\r\n  const featureXmlFile: string = `feature_${feature.id}.xml`;\r\n\r\n  const featureXml: IOpenDocumentConventionXml = {\r\n    filename: featureXmlFile,  // ensure this is unique\r\n    /* tslint:disable:no-null-keyword */\r\n    relationships: null,\r\n    /* tslint:enable:no-null-keyword */\r\n    xml: XmlGenerator({\r\n      Feature: [\r\n        {\r\n          _attr: {\r\n            xmlns: 'http://schemas.microsoft.com/sharepoint/',\r\n            Title: feature.title,\r\n            Description: feature.description,\r\n            Id: feature.id,\r\n            Version: feature.version,\r\n            Scope: 'Web', // @todo change to Site scope\r\n            Hidden: 'FALSE'\r\n          }\r\n        }\r\n      ]\r\n    }, serializationOptions)\r\n  };\r\n\r\n  const configXml: IXml = {\r\n    filename: `${featureXmlFile}.config.xml`,\r\n    xml: XmlGenerator({\r\n      AppPartConfig: [\r\n        {\r\n          _attr: {\r\n            xmlns: 'http://schemas.microsoft.com/sharepoint/2012/app/partconfiguration'\r\n          }\r\n        },\r\n        {\r\n          Id: feature.id // @todo needs to be a unique id, different from feature.id\r\n        }\r\n      ]\r\n    }, serializationOptions)\r\n  };\r\n\r\n  const componentsXml: IXml[] = feature.components.map((component: IComponent) => {\r\n    return createComponentXml(component, feature.id);\r\n  });\r\n\r\n  const webpartsXml: IXml[] = [];\r\n  for (const componentId in feature.components) {\r\n    if (feature.components[componentId]) {\r\n      const component: IComponent = feature.components[componentId];\r\n      if (component.type === ComponentType.WebPart) {\r\n        webpartsXml.push(createWebPartXml(component, feature.id));\r\n      }\r\n    }\r\n  }\r\n\r\n  const relationshipsXml: IXml = createRelationshipsXml(featureXmlFile,\r\n        [\r\n          {\r\n            type: 'partconfiguration',\r\n            target: configXml.filename\r\n          } as IRelationship\r\n        ].concat(\r\n          componentsXml.map((component: IXml): IRelationship => {\r\n            return {\r\n              type: 'feature-elementmanifest',\r\n              target: component.filename\r\n            };\r\n          })\r\n        ).concat(\r\n          webpartsXml.map((webpart: IXml): IRelationship => {\r\n            return {\r\n              type: 'feature-elementfile',\r\n              target: webpart.filename\r\n            };\r\n          })\r\n        ).concat( (resources.localizedResourcePaths.length > 0) ?\r\n          resources.localizedResourcePaths.map((filename: string) => {\r\n            return {\r\n              type: 'content-resource',\r\n              target: filename\r\n            };\r\n          })\r\n          : []\r\n        ).concat( (resources.defaultResourcePath)\r\n          ? {\r\n              type: 'content-defaultresource',\r\n              target: resources.defaultResourcePath\r\n          }\r\n          : []\r\n        )\r\n  );\r\n\r\n  return {\r\n    filename: featureXml.filename,\r\n    xml: featureXml.xml,\r\n    relationships: relationshipsXml,\r\n    config: configXml,\r\n    components: componentsXml.concat(webpartsXml)\r\n  };\r\n}\r\n"],"sourceRoot":"/source/"}