/**
 * @file createComponentXml.ts
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 *
 * Creates an package's Element.Xml for a WebPart or ClientSideSolution
 */
/// <reference path='./xml.d.ts' />
"use strict";
var path = require('path');
var XmlGenerator = require('xml');
var ComponentType_1 = require('../models/ComponentType');
var serializationOptions_1 = require('./serializationOptions');
function createComponentXml(options, featureId) {
    if (options.type === ComponentType_1.default.Application) {
        return {
            filename: path.posix.join(featureId, "Application_" + options.id + ".xml"),
            xml: XmlGenerator({
                Elements: [
                    {
                        ClientSideComponent: [
                            {
                                _attr: {
                                    Name: options.name,
                                    Id: options.id,
                                    ComponentManifest: options.manifest,
                                    Type: 'Application'
                                }
                            }
                        ]
                    },
                    {
                        _attr: {
                            xmlns: 'http://schemas.microsoft.com/sharepoint/'
                        }
                    }
                ]
            }, serializationOptions_1.default)
        };
    }
    else {
        // @todo Note that the options.id is NOT necessarily the feature ID
        return {
            filename: path.posix.join(featureId, "WebPart_" + options.id + ".xml"),
            xml: XmlGenerator({
                Elements: [
                    {
                        ClientSideComponent: [
                            {
                                _attr: {
                                    Name: options.name,
                                    Id: options.id,
                                    ComponentManifest: options.manifest,
                                    Type: 'WebPart'
                                }
                            }
                        ]
                    },
                    {
                        Module: [
                            {
                                _attr: {
                                    Name: options.name,
                                    Url: '_catalogs/wp',
                                    List: '113'
                                }
                            },
                            {
                                File: [
                                    {
                                        _attr: {
                                            Path: path.posix.join(featureId, "WebPart_" + options.id + ".webpart"),
                                            Url: "WebPart_" + options.id + ".webpart",
                                            Type: 'GhostableInLibrary',
                                            IgnoreIfAlreadyExists: 'TRUE'
                                        }
                                    },
                                    {
                                        Property: [
                                            {
                                                _attr: {
                                                    Name: 'Group',
                                                    Value: 'Custom'
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        _attr: {
                            xmlns: 'http://schemas.microsoft.com/sharepoint/'
                        }
                    }
                ]
            }, serializationOptions_1.default)
        };
    }
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = createComponentXml;

//# sourceMappingURL=createComponentXml.js.map
