import * as gulp from 'gulp';
import { GulpTask } from 'gulp-core-build';
import { compiler as webpackCompiler } from 'webpack';
import { IClientSideComponentManifest } from '@microsoft/sp-module-interfaces';
import { IBundleEntry } from './configureWebpack/ConfigureWebpackTask';
import { IDeployEntry } from './copyAssets/CopyAssetsTask';
/**
 * Configuration for a non-AMD external module
 */
export interface INonAMDExternalModuleConfig {
    /**
     * The path or URL to the bundled external non-AMD file
     */
    path: string;
    /**
     * The name of the global variable where an non-AMD dependency drops its exports
     */
    globalName: string;
    /**
     * The names of the non-AMD dependencies for this project
     */
    globalDependencies: string[];
}
/**
 * Common properties that are shared between tasks.
 */
export interface IOdspGulpTaskProperties {
    webpackStats?: webpackCompiler.Stats;
    manifests?: {
        [key: string]: IClientSideComponentManifest;
    };
    externals?: {
        [name: string]: string | INonAMDExternalModuleConfig;
    };
    entries?: IBundleEntry[];
    deployEntries?: IDeployEntry[];
    localizedResources?: {
        [key: string]: string;
    };
    discoveredLocalizedResources?: {
        [key: string]: ILocaleMap;
    };
}
export interface ILocaleMap {
    [locale: string]: string;
}
export default class OdspGulpTask<TASK_CONFIG> extends GulpTask<TASK_CONFIG> {
    executeTask(gulp: gulp.Gulp, completeCallback: (error?: string) => void): NodeJS.ReadWriteStream | Promise<any>;
    protected properties: IOdspGulpTaskProperties;
    protected getManifest(manifestPath: string): IClientSideComponentManifest;
    protected getChecksum(data: any): string;
}
