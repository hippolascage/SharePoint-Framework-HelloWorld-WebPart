{"version":3,"sources":["deployAzureStorage/uploadCDN/azureStorage/uploadFileToAzure.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;;AAEH,4CAA4C;AAE5C,QAAO,aAAa,CAAC,CAAA;AAErB,2BAC6B,WAA8B,EAAE,aAAqB,EACrD,aAAqB,EAAE,cAAuB;IACzE,cAAc,GAAG,cAAc,GAAG,cAAc,GAAG,aAAa,CAAC;IAEjE,MAAM,CAAC,IAAI,OAAO,CAChB,UAAC,QAA0C,EAAE,MAA8B;QACzE,IAAI,CAAC;YACH,WAAW,CAAC,4BAA4B,CAAC,aAAa,EAAE,cAAc,EAAE,aAAa,EAC5C,UAAC,KAAc,EAAE,MAAe,EAC/B,QAAwB;gBAChE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACV,MAAM,CAAC,IAAI,KAAK,CAAC,4BAA0B,cAAc,cAAS,aAAe,CAAC,CAAC,CAAC;gBACtF,CAAC;gBACD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACX,OAAO,CAAC,GAAG,CAAC,oBAAkB,cAAgB,CAAC,CAAC;gBAClD,CAAC;gBACD,QAAQ,CAAC,WAAW,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;QACL,CAAE;QAAA,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC,CACF,CAAC;AACJ,CAAC;AAxBD;mCAwBC,CAAA","file":"deployAzureStorage/uploadCDN/azureStorage/uploadFileToAzure.js","sourcesContent":["/**\r\n * @file uploadFileToAzure.ts\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * Uploads an individual file to an Azure Blob Service instance, wrapped in a promise\r\n */\r\n\r\n/// <reference path='./azureStorage.d.ts' />\r\n\r\nimport 'es6-promise';\r\n\r\nexport default\r\n  function uploadFileToAzure(blobService: IAzureBlobService, containerName: string,\r\n                             localFilename: string, serverFilename?: string): Promise<IAzureBlobService> {\r\n  serverFilename = serverFilename ? serverFilename : localFilename;\r\n\r\n  return new Promise<IAzureBlobService>(\r\n    (complete: (svc: IAzureBlobService) => void, reject: (error: Error) => void) => {\r\n      try {\r\n        blobService.createBlockBlobFromLocalFile(containerName, serverFilename, localFilename,\r\n                                                 (error: boolean, result: boolean,\r\n                                                  response: IAzureResponse) => {\r\n          if (error) {\r\n            reject(new Error(`Unable to upload file: ${serverFilename} from ${localFilename}`));\r\n          }\r\n          if (result) {\r\n            console.log(`Uploaded file: ${serverFilename}`);\r\n          }\r\n          complete(blobService);\r\n        });\r\n      } catch (error) {\r\n        reject(new Error(error));\r\n      }\r\n    }\r\n  );\r\n}\r\n"],"sourceRoot":"/source/"}