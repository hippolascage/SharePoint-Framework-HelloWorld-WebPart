/**
 * @file uploadFileToAzure.ts
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 *
 * Uploads an individual file to an Azure Blob Service instance, wrapped in a promise
 */
"use strict";
/// <reference path='./azureStorage.d.ts' />
require('es6-promise');
function uploadFileToAzure(blobService, containerName, localFilename, serverFilename) {
    serverFilename = serverFilename ? serverFilename : localFilename;
    return new Promise(function (complete, reject) {
        try {
            blobService.createBlockBlobFromLocalFile(containerName, serverFilename, localFilename, function (error, result, response) {
                if (error) {
                    reject(new Error("Unable to upload file: " + serverFilename + " from " + localFilename));
                }
                if (result) {
                    console.log("Uploaded file: " + serverFilename);
                }
                complete(blobService);
            });
        }
        catch (error) {
            reject(new Error(error));
        }
    });
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = uploadFileToAzure;

//# sourceMappingURL=uploadFileToAzure.js.map
