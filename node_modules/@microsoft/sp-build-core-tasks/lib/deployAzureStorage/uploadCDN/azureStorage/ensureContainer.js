/**
 * @file ensureBlobService.d.ts
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 *
 * Creates a container on an Azure Blob Service connection object
 */
/// <reference path='./azureStorage.d.ts' />
"use strict";
require('es6-promise');
function ensureContainer(blobService, containerName, containerOptions) {
    if (!containerOptions) {
        containerOptions = {
            publicAccessLevel: 'blob'
        };
    }
    return new Promise(function (complete, reject) {
        try {
            blobService.createContainerIfNotExists(containerName, containerOptions, function (error, result, response) {
                if (error) {
                    reject(new Error("Unable to create container: " + containerName));
                }
                if (result) {
                    console.log("Created container: " + containerName);
                }
                else {
                    console.log("Container {" + containerName + "} exists!");
                }
                complete(blobService);
            });
        }
        catch (error) {
            reject(new Error(error));
        }
    });
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ensureContainer;

//# sourceMappingURL=ensureContainer.js.map
