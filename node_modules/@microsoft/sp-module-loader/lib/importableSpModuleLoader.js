"use strict";
/* tslint:disable:no-any */
var importableSpModuleLoader = window.spModuleLoader;
/* tslint:enable:no-any */
// Return a dummy module loader if the module loader isn't present on the page. This occurs during unit tests.
if (!importableSpModuleLoader) {
    importableSpModuleLoader = {
        combokeys: undefined,
        loadScript: function () { return Promise.reject(new Error('Module loader not present')); },
        loadStandardLibraryModule: function () { return Promise.reject(new Error('Module loader not present')); },
        loadManifestModules: function () { return Promise.reject(new Error('Module loader not present')); },
        importManifests: function () { throw new Error('Module loader not present'); },
        forceLoadDebugManifests: function () { throw new Error('Module loader not present'); },
        getManifests: function () { return []; },
        loadCss: function () { throw new Error('Module loader not present'); }
    };
}
exports.combokeys = importableSpModuleLoader ? importableSpModuleLoader.combokeys : undefined;
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = importableSpModuleLoader;

//# sourceMappingURL=importableSpModuleLoader.js.map
