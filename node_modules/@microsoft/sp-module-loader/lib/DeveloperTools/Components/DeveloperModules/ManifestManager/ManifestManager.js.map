{"version":3,"sources":["DeveloperTools/Components/DeveloperModules/ManifestManager/ManifestManager.tsx"],"names":[],"mappings":"AAAA;;;GAGG;;;;;;;AAEH,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAE/B,qCAAiC,wCAAwC,CAAC,CAAA;AAE1E,6CAAyC,wDAAwD,CAAC,CAAA;AAElG,6BAAyB,6BAA6B,CAAC,CAAA;AACvD,gCAA4B,mCAAmC,CAAC,CAAA;AAEhE,4CAAmB,+BAA+B,CAAC,CAAA;AAOnD;IAA6C,mCAA0C;IAErF;QAFF,iBAkDC;QA/CG,iBAAO,CAAC;QAyCF,cAAS,GAAe;YAC9B,KAAI,CAAC,QAAQ,CAAC;gBACZ,SAAS,EAAE,8BAAoB,CAAC,mBAAmB;gBACnD,kBAAkB,EAAE,8BAAoB,CAAC,kBAAkB;aAC5D,CAAC,CAAC;QACL,CAAC,CAAC;QA7CA,IAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,8BAAoB,CAAC,mBAAmB;YACnD,kBAAkB,EAAE,8BAAoB,CAAC,kBAAkB;SAC5D,CAAC;IACJ,CAAC;IAEM,2CAAiB,GAAxB;QACE,8BAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACnD,CAAC;IAEM,8CAAoB,GAA3B;QACE,8BAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACtD,CAAC;IAEM,gCAAM,GAAb;QAAA,iBAwBC;QAvBC,IAAM,gBAAgB,GAAwB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAClG,IAAM,kBAAkB,GAA2B,gBAAgB;cAC/D,oBAAC,yBAAe,GAAC,QAAQ,EAAE,gBAAiB,EAAG;cAC/C,qBAAC,GAAG,IAAC,SAAS,EAAE,qCAAM,CAAC,2BAA4B,0BAE7C,CAAC;QAEX,MAAM,CAAE,qBAAC,GAAG,IAAC,SAAS,EAAE,qCAAM,CAAC,SAAU,GAC/B,qBAAC,GAAG,IAAC,SAAS,EAAE,qCAAM,CAAC,qBAAsB,GAC3C,oBAAC,sBAAY,GAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAU,EAChC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAmB,EAClD,+BAA+B,EAAE,UAAC,kBAA0B;YAC1D,EAAE,CAAC,CAAC,kBAAkB,KAAK,KAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBACzD,kBAAkB,GAAG,SAAS,CAAC;YACjC,CAAC;YAED,sCAA4B,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;QAClE,CAAE,EAAG,CACf,EACN,qBAAC,GAAG,IAAC,SAAS,EAAE,qCAAM,CAAC,wBAAyB,GAC7C,kBAAmB,CAChB,CACF,CAAC;IACjB,CAAC;IAQH,sBAAC;AAAD,CAlDA,AAkDC,CAlD4C,KAAK,CAAC,SAAS,GAkD3D;AAlDD;iCAkDC,CAAA","file":"DeveloperTools/Components/DeveloperModules/ManifestManager/ManifestManager.js","sourcesContent":["/**\r\n * @file ManifestManager.tsx\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\nimport ManifestManagerStore from './../../../Stores/ManifestManagerStore';\r\nimport { IManifestStoreEntry } from './../../../../ManifestStore';\r\nimport ManifestManagerActionCreator from './../../../ActionCreators/ManifestManagerActionCreator';\r\n\r\nimport ManifestList from './ManifestList/ManifestList';\r\nimport ManifestDetails from './ManifestDetails/ManifestDetails';\r\n\r\nimport styles from './ManifestManager.module.scss';\r\n\r\nexport interface IManifestManagerState {\r\n  manifests: { [id: string]: IManifestStoreEntry };\r\n  selectedManifestId: string;\r\n}\r\n\r\nexport default class ManifestManager extends React.Component<{}, IManifestManagerState> {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      manifests: ManifestManagerStore.registeredManifests,\r\n      selectedManifestId: ManifestManagerStore.selectedManifestId\r\n    };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    ManifestManagerStore.addListener(this._setState);\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    ManifestManagerStore.removeListener(this._setState);\r\n  }\r\n\r\n  public render(): React.ReactElement<{}> {\r\n    const selectedManifest: IManifestStoreEntry = this.state.manifests[this.state.selectedManifestId];\r\n    const manifestDetailsBox: React.ReactElement<{}> = selectedManifest\r\n      ? <ManifestDetails manifest={selectedManifest} />\r\n      : <div className={styles.noManifestSelectedContainer}>\r\n          No manifest selected\r\n        </div>;\r\n\r\n    return  <div className={styles.container}>\r\n              <div className={styles.manifestListContainer}>\r\n                <ManifestList manifests={this.state.manifests}\r\n                              selectedManifestId={this.state.selectedManifestId}\r\n                              manifestSelectionChangedHandler={(selectedManifestId: string): void => {\r\n                                if (selectedManifestId === this.state.selectedManifestId) {\r\n                                  selectedManifestId = undefined;\r\n                                }\r\n\r\n                                ManifestManagerActionCreator.selectManifest(selectedManifestId);\r\n                              }} />\r\n              </div>\r\n              <div className={styles.manifestDetailsContainer}>\r\n                {manifestDetailsBox}\r\n              </div>\r\n            </div>;\r\n  }\r\n\r\n  private _setState: () => void = (): void => {\r\n    this.setState({\r\n      manifests: ManifestManagerStore.registeredManifests,\r\n      selectedManifestId: ManifestManagerStore.selectedManifestId\r\n    });\r\n  };\r\n}"],"sourceRoot":"/src"}