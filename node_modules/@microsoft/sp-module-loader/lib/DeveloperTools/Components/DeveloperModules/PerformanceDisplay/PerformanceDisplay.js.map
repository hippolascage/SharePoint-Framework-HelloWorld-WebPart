{"version":3,"sources":["DeveloperTools/Components/DeveloperModules/PerformanceDisplay/PerformanceDisplay.tsx"],"names":[],"mappings":";;;;;;AAAA;;;GAGG;AACH,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAE/B,+CAAmB,kCAAkC,CAAC,CAAA;AACtD,iCAA8B,qCAAqC,CAAC,CAAA;AACpE,kCAA8B,uCAAuC,CAAC,CAAA;AACtE,wCAEO,yCAAyC,CAAC,CAAA;AAqBjD;IAAgD,sCAA+C;IAE7F;QAFF,iBAwDC;QArDG,iBAAO,CAAC;QA6CF,cAAS,GAAe;YAC9B,KAAI,CAAC,QAAQ,CAAC;gBACZ,SAAS,EAAE,iCAAuB,CAAC,eAAe;gBAClD,IAAI,EAAE,iCAAuB,CAAC,IAAI;gBAClC,SAAS,EAAE,iCAAuB,CAAC,SAAS;gBAC5C,YAAY,EAAE,iCAAuB,CAAC,YAAY;aACnD,CAAC,CAAC;QACL,CAAC,CAAC;QAlDA,IAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,iCAAuB,CAAC,eAAe;YAClD,IAAI,EAAE,iCAAuB,CAAC,IAAI;YAClC,SAAS,EAAE,iCAAuB,CAAC,SAAS;YAC5C,YAAY,EAAE,iCAAuB,CAAC,YAAY;SACnD,CAAC;IACJ,CAAC;IAEM,8CAAiB,GAAxB;QACE,iCAAuB,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACtD,CAAC;IAEM,iDAAoB,GAA3B;QACE,iCAAuB,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACzD,CAAC;IAEM,mCAAM,GAAb;QAEE,IAAM,YAAY,GAAW,CAAC,wCAAM,CAAC,YAAY,EAAE,wCAAM,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAExF,iDAAiD;QACjD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,CACL,qBAAC,GAAG,IAAC,SAAS,EAAG,YAAc,mCAE7B,qBAAC,EAAE,QAAE,qBAAiB,IAAI,CAAC,KAAK,CAAC,YAAc,CAC3C,CACP,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,CACP,qBAAC,GAAG,IAAC,SAAS,EAAG,wCAAM,CAAC,2BAA6B,GACnD,oBAAC,2BAAiB,GAAC,SAAS,EAAG,IAAI,CAAC,KAAK,CAAC,SAAW,EAAC,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,IAAM,EAAE,EAC3F,qBAAC,GAAG,IAAC,SAAS,EAAG,wCAAM,CAAC,cAAgB,GACtC,oBAAC,0BAAgB,GACf,SAAS,EAAG,IAAI,CAAC,KAAK,CAAC,SAAW,EAClC,SAAS,EAAG,IAAI,CAAC,KAAK,CAAC,SAAW,EAClC,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,IAAM,EAAE,CACnC,CACF,CACL,CAAC;QACJ,CAAC;IACH,CAAC;IAUH,yBAAC;AAAD,CAxDA,AAwDC,CAxD+C,KAAK,CAAC,SAAS,GAwD9D;AAxDD;oCAwDC,CAAA","file":"DeveloperTools/Components/DeveloperModules/PerformanceDisplay/PerformanceDisplay.js","sourcesContent":["/**\r\n * @file PerformanceDisplay.tsx\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n */\r\nimport * as React from 'react';\r\n\r\nimport styles from './PerformanceDisplay.module.scss';\r\nimport  PerformanceGraph from './PerformanceGraph/PerformanceGraph';\r\nimport PerformanceHeader from './PerformanceHeader/PerformanceHeader';\r\nimport PerformanceDisplayStore, {\r\n  IPerfItem\r\n} from '../../../Stores/PerformanceDisplayStore';\r\n\r\nexport interface IPerformanceDisplayState {\r\n  /**\r\n   * Objects that contain the data points that will be displayed\r\n   */\r\n  perfItems: IPerfItem[];\r\n  /**\r\n   * Integer value representing the total loading time percieved by the user\r\n   */\r\n  eupl: number;\r\n  /**\r\n   * Integer value that gives the time in ms that the page started loading, measured from navigation start\r\n   */\r\n  startTime: number;\r\n  /**\r\n   * If an error has occurred, this will be set to a message detailing the nature of the error\r\n   */\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PerformanceDisplay extends React.Component<void, IPerformanceDisplayState> {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      perfItems: PerformanceDisplayStore.performanceData,\r\n      eupl: PerformanceDisplayStore.eupl,\r\n      startTime: PerformanceDisplayStore.startTime,\r\n      errorMessage: PerformanceDisplayStore.errorMessage\r\n    };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    PerformanceDisplayStore.addListener(this._setState);\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    PerformanceDisplayStore.removeListener(this._setState);\r\n  }\r\n\r\n  public render(): React.ReactElement<{}> {\r\n\r\n    const errorMessage: string = [styles.errorMessage, styles.msFontColorRedDark].join(' ');\r\n\r\n    // @todo (VSO bug 236724): localize these strings\r\n    if (this.state.errorMessage) {\r\n      return (\r\n        <div className={ errorMessage }>\r\n          Sorry, something went wrong.\r\n          <br/>Error Message: { this.state.errorMessage }\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n      <div className={ styles.performanceDisplayContainer }>\r\n        <PerformanceHeader perfItems={ this.state.perfItems } overallDuration={ this.state.eupl }/>\r\n        <div className={ styles.graphContainer }>\r\n          <PerformanceGraph\r\n            perfItems={ this.state.perfItems }\r\n            startTime={ this.state.startTime }\r\n            overallDuration={ this.state.eupl }/>\r\n        </div>\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  private _setState: () => void = (): void => {\r\n    this.setState({\r\n      perfItems: PerformanceDisplayStore.performanceData,\r\n      eupl: PerformanceDisplayStore.eupl,\r\n      startTime: PerformanceDisplayStore.startTime,\r\n      errorMessage: PerformanceDisplayStore.errorMessage\r\n    });\r\n  };\r\n}"],"sourceRoot":"/src"}