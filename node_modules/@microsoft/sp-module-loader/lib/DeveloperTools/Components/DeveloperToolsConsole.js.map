{"version":3,"sources":["DeveloperTools/Components/DeveloperToolsConsole.tsx"],"names":[],"mappings":"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","file":"DeveloperTools/Components/DeveloperToolsConsole.js","sourcesContent":["/**\r\n * @file DeveloperToolsConsole.tsx\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\nimport DeveloperToolsConsoleActionCreator from './../ActionCreators/DeveloperToolsConsoleActionCreator';\r\nimport DeveloperToolsConsoleStore from './../Stores/DeveloperToolsConsoleStore';\r\nimport ManifestManager from './DeveloperModules/ManifestManager/ManifestManager';\r\nimport PerformanceDisplay from './DeveloperModules/PerformanceDisplay/PerformanceDisplay';\r\nimport Tabs from './Tabs/Tabs';\r\n\r\nimport styles from './DeveloperToolsConsole.module.scss';\r\n\r\n/**\r\n * @todo (VSO bug 236724): localize these strings\r\n * Const variables for the tab keys. Used to help keep things consistent and clean when the number of tabs grows\r\n */\r\nconst manifests: string = 'manifests';\r\nconst performance: string = 'performance';\r\n\r\nconst tabs: { [id: string]: string } = {\r\n  [manifests]: 'Manifests',\r\n  [performance]: 'Performance'\r\n};\r\n\r\nexport interface IDeveloperToolsConsoleState {\r\n  visible: boolean;\r\n  topPosition: number;\r\n  selectedTabId: string;\r\n}\r\n\r\nexport default class DeveloperToolsConsole extends React.Component<void, IDeveloperToolsConsoleState> {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      topPosition: DeveloperToolsConsoleStore.height,\r\n      visible: DeveloperToolsConsoleStore.visible,\r\n      selectedTabId: DeveloperToolsConsoleStore.selectedTabId\r\n    };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    DeveloperToolsConsoleStore.addListener(this._setState);\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    DeveloperToolsConsoleStore.removeListener(this._setState);\r\n  }\r\n\r\n  public render(): React.ReactElement<{}> {\r\n    if (this.state.visible) {\r\n      let developerModule: React.ReactElement<{}>;\r\n      switch (this.state.selectedTabId) {\r\n        case manifests:\r\n          developerModule = <ManifestManager />;\r\n          break;\r\n        case performance:\r\n          developerModule = <PerformanceDisplay />;\r\n          break;\r\n\r\n        default:\r\n          developerModule = <div className={styles.notImplementedModule}>\r\n                              NOT IMPLEMENTED\r\n                            </div>;\r\n          break;\r\n      }\r\n\r\n      return  <div  className={styles.container}\r\n                    style={{ height: `${this.state.topPosition * 100}%` }}>\r\n                <div  className={styles.resizeBar}\r\n                      draggable={true}\r\n                      onDrag={this._onDrag}>\r\n                </div>\r\n                <div>\r\n                  <button onClick={(): void => DeveloperToolsConsoleActionCreator.showHideConsole(false) }\r\n                          className={[styles.closeButton, 'ms-Icon--x', 'ms-Icon'].join(' ')} />\r\n\r\n                  <Tabs tabs={tabs}\r\n                        selectedId={this.state.selectedTabId}\r\n                        selectionHandler={(id: string): void => DeveloperToolsConsoleActionCreator.selectTab(id)}/>\r\n\r\n                  <div className={styles.developerModuleArea}>\r\n                    {developerModule}\r\n                  </div>\r\n                </div>\r\n              </div>;\r\n    } else {\r\n      /* tslint:disable:no-null-keyword */\r\n      return null;\r\n      /* tslint:enable:no-null-keyword */\r\n    }\r\n  }\r\n\r\n  private _onDrag: (e: React.DragEvent) => void = (e: React.DragEvent): void => {\r\n    /* tslint:disable:no-any */\r\n    const mouseEvent: React.MouseEvent = (e as any) as React.MouseEvent;\r\n    /* tslint:enable:no-any */\r\n\r\n    if (mouseEvent.pageY !== 0) {\r\n      const height: number = (document.documentElement.clientHeight - mouseEvent.pageY) /\r\n                             document.documentElement.clientHeight;\r\n      DeveloperToolsConsoleActionCreator.resizeConsole(height);\r\n    }\r\n  };\r\n\r\n  private _setState: () => void = (): void => {\r\n    this.setState({\r\n      topPosition: DeveloperToolsConsoleStore.height,\r\n      visible: DeveloperToolsConsoleStore.visible,\r\n      selectedTabId: DeveloperToolsConsoleStore.selectedTabId\r\n    });\r\n  };\r\n}\r\n"],"sourceRoot":"/src"}