{"version":3,"sources":["DeveloperTools/Stores/DeveloperToolsConsoleStore.ts"],"names":[],"mappings":"AAAA;;;GAGG;;;;;;;AAGH,0BAAsB,aAAa,CAAC,CAAA;AAEpC,6CAAyC,2CAA2C,CAAC,CAAA;AACrF,+CAA2C,6CAA6C,CAAC,CAAA;AACzF,gCAA4B,8BAA8B,CAAC,CAAA;AAE3D,IAAM,cAAc,GAAW,CAAC,GAAG,CAAC,CAAC;AACrC,IAAM,UAAU,GAAW,CAAC,GAAG,CAAC,CAAC;AACjC,IAAM,UAAU,GAAW,CAAC,GAAG,CAAC,CAAC;AAEjC;IAAgD,8CAAS;IA4BvD;QACE,iBAAO,CAAC;QACR,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAElD,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;IACpC,CAAC;IA/BD,sBAAkB,sCAAQ;aAA1B;YACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,SAAS,GAAG,IAAI,0BAA0B,EAAE,CAAC;YACpD,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,8CAAM;aAAjB;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;;;OAAA;IAED,sBAAW,+CAAO;aAAlB;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;;;OAAA;IAED,sBAAW,qDAAa;aAAxB;YACE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;;;OAAA;IAeD;;OAEG;IACI,kDAAa,GAApB,UAAqB,MAAe;QAClC,EAAE,CAAC,CAAC,MAAM,YAAY,sCAA4B,CAAC,CAAC,CAAC;YACnD,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,UAAU,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;YAC5B,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,UAAU,CAAC,CAAC,CAAC;gBACvC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;YAC5B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;YAC/B,CAAC;YAED,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,YAAY,wCAA8B,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC;YAC5B,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,YAAY,yBAAe,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,KAAK,CAAC;YACnC,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;IACH,CAAC;IACH,iCAAC;AAAD,CA3DA,AA2DC,CA3D+C,mBAAS,GA2DxD;AA3DY,kCAA0B,6BA2DtC,CAAA;AAID;kBAAe,0BAA0B,CAAC,QAAsC,CAAC;AACjF,+BAA+B","file":"DeveloperTools/Stores/DeveloperToolsConsoleStore.js","sourcesContent":["/**\r\n * @file DeveloperToolsConsoleStore.ts\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n */\r\n\r\nimport IAction from '../Actions/IAction';\r\nimport BaseStore from './BaseStore';\r\n\r\nimport DeveloperConsoleResizeAction from './../Actions/DeveloperConsoleResizeAction';\r\nimport DeveloperConsoleShowHideAction from './../Actions/DeveloperConsoleShowHideAction';\r\nimport SelectTabAction from './../Actions/SelectTabAction';\r\n\r\nconst DEFAULT_HEIGHT: number = 1 / 4;\r\nconst MIN_HEIGHT: number = 1 / 6;\r\nconst MAX_HEIGHT: number = 3 / 4;\r\n\r\nexport class DeveloperToolsConsoleStore extends BaseStore {\r\n\r\n  private static _instance: DeveloperToolsConsoleStore;\r\n\r\n  public static get instance(): DeveloperToolsConsoleStore {\r\n    if (!this._instance) {\r\n      this._instance = new DeveloperToolsConsoleStore();\r\n    }\r\n\r\n    return this._instance;\r\n  }\r\n\r\n  public get height(): number {\r\n    return this._height;\r\n  }\r\n\r\n  public get visible(): boolean {\r\n    return this._visible;\r\n  }\r\n\r\n  public get selectedTabId(): string {\r\n    return this._selectedTabId;\r\n  }\r\n\r\n  private _height: number;\r\n  private _visible: boolean;\r\n  private _selectedTabId: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this.addProcessActionCallback(this.processAction);\r\n\r\n    this._height = DEFAULT_HEIGHT;\r\n    this._visible = false;\r\n    this._selectedTabId = 'manifests';\r\n  }\r\n\r\n  /**\r\n   * Processes the action fired\r\n   */\r\n  public processAction(action: IAction): void {\r\n    if (action instanceof DeveloperConsoleResizeAction) {\r\n      if (action.height >= MAX_HEIGHT) {\r\n        this._height = MAX_HEIGHT;\r\n      } else if (action.height <= MIN_HEIGHT) {\r\n        this._height = MIN_HEIGHT;\r\n      } else {\r\n        this._height = action.height;\r\n      }\r\n\r\n      this.emitChange();\r\n    } else if (action instanceof DeveloperConsoleShowHideAction) {\r\n      this._visible = action.show;\r\n      this.emitChange();\r\n    } else if (action instanceof SelectTabAction) {\r\n      this._selectedTabId = action.tabId;\r\n      this.emitChange();\r\n    }\r\n  }\r\n}\r\n\r\n// instantiate the store so it can start listening to dispatch events\r\n/* tslint:disable:export-name */\r\nexport default DeveloperToolsConsoleStore.instance as DeveloperToolsConsoleStore;\r\n/* tslint:enable:export-name */\r\n"],"sourceRoot":"/src"}