/**
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 *
 * @file DebugManifestProvider.ts
 */
import { IClientSideComponentManifest } from '@microsoft/sp-module-interfaces';
export interface IManifestMap {
    [id: string]: IClientSideComponentManifest;
}
/**
 * This class assists with parsing debug manifests from the URL fragment or from sessionStorage.
 *
 * --- NEW APPROACH ---
 * We allow developers to specify a set of manifests in the URL to override the manifests we get from the server.
 * The format is: <url-to-page>.aspx#debugManifestsFile=<path to manfiests init script>
 *
 * When a manifest file is specified in the URL, we cache its contents in sessionStorage so the developer doesn't need
 * to supply it on every request. This class also reads the "reset=1" query parameter to clear the cached debug
 * manifests from sessionStorage.
 *
 * --- OLD APPROACH ---
 * We allow developers to specify a set of manifests in the URL to override the manifests we get from the server.
 * The format is: <url-to-page>.aspx#debugManifests=<URL-encoded JSON object>
 * And the format of the JSON object is:
 *  {
 *    "manifest-id-1": { <manifest object> },
 *    "manifest-id-2": { <manifest object> }
 *  }
 *
 * When a manifest is specified in the URL, we cache it in sessionStorage so the developer doesn't need to
 * supply it on every request. This class also reads the "reset=1" query parameter to clear the cached debug
 * manifests from sessionStorage.
 *
 * This is a temporary implementation until we update the build tools to support a more developer-friendly approach.
 * VSO#201640.
 */
export default class DebugManifestProvider {
    private static _instance;
    static instance: DebugManifestProvider;
    getDebugManifests(noCache?: boolean, alternativeManifestsFile?: string): Promise<IManifestMap>;
    private _trySetSessionStorageManifests(localDebugManifests);
    private _parseManifestsFileFromFragementQueryParameter(clearParamter);
    private _parseManifestsFromFragementQueryParameter();
    private _getAndClearFragmentQueryParameter(parameter, clearParamter?);
    /**
     * Parse a string as querystring parameters. VSO:201753 to replace with standard library.
     */
    private _parseQueryParameters(queryParameterString);
}
