{"version":3,"sources":["SPModuleLoader.ts"],"names":[],"mappings":"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","file":"SPModuleLoader.js","sourcesContent":["/**\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * @file SPModuleLoader.ts\r\n */\r\n\r\nrequire('set-webpack-public-path!');\r\n\r\nimport * as Combokeys from 'combokeys';\r\nimport * as URL from 'url';\r\n\r\nimport {\r\n  IClientSideComponentManifest,\r\n\r\n  IBundleReference,\r\n  IStandardLibraryModule,\r\n  standardLibraryModules\r\n} from '@microsoft/sp-module-interfaces';\r\n\r\nimport DeveloperTools from './DeveloperTools/DeveloperTools';\r\nimport SystemJsWrapper from './SystemJsWrapper';\r\nimport ManifestStore from './ManifestStore';\r\nimport DebugManifestProvider from './DebugManifestProvider';\r\n\r\nexport interface ISPModuleLoader {\r\n  combokeys: typeof Combokeys;\r\n\r\n  /* tslint:disable:no-any */\r\n  loadScript(scriptSource: string, globalExportsName?: string): Promise<any>;\r\n  /* tslint:enable:no-any */\r\n\r\n  /* tslint:disable:no-any */\r\n  loadStandardLibraryModule(standardLibraryModule: IStandardLibraryModule): Promise<any>;\r\n  /* tslint:enable:no-any */\r\n\r\n  /* tslint:disable:no-any */\r\n  loadManifestModules(idOrManifest: string | IClientSideComponentManifest): Promise<any>;\r\n  /* tslint:enable:no-any */\r\n\r\n  importManifests(manifests: IClientSideComponentManifest[], overwriteExisting: boolean): void;\r\n\r\n  forceLoadDebugManifests(): Promise<void>;\r\n\r\n  getManifests(): IClientSideComponentManifest[];\r\n\r\n  loadCss(url: string): void;\r\n}\r\n\r\nexport interface IPartialSpPageContextInfo {\r\n  currentUICultureName: string;\r\n}\r\n\r\nexport interface IApplicationPreloadedData {\r\n  clientSideApplicationId: string;\r\n  clientSideApplicationManifest: IClientSideComponentManifest;\r\n  manifests: IClientSideComponentManifest[];\r\n  spPageContextInfo: IPartialSpPageContextInfo;\r\n}\r\n\r\ninterface IDeveloperToolsWrapper {\r\n  default: typeof DeveloperTools;\r\n}\r\n\r\nlet _allowDebug: boolean = undefined;\r\nexport function ensureDebugAllowed(ask: boolean = true): boolean {\r\n  if (!ask || _allowDebug !== undefined) {\r\n    return !!_allowDebug;\r\n  } else {\r\n    // Inform the user that they might be loading debug manifests\r\n    _allowDebug = confirm('WARNING: This page is requesting to load unsafe scripts, which could potentially harm ' +\r\n                          'your computer! Do not proceed unless you trust the developer and understand the risks.\\n\\n' +\r\n                          'If you are unsure, click \"Cancel.\"');\r\n    return _allowDebug;\r\n  }\r\n}\r\n\r\n/**\r\n * The global module loader for SP client-side applications and webparts.\r\n *\r\n * This is an API that lives in a global variable on the window, similar to how systemJS works.\r\n *\r\n * @public\r\n */\r\nexport default class SPModuleLoader implements ISPModuleLoader {\r\n  private static _instance: SPModuleLoader;\r\n  private static _headElement: HTMLHeadElement;\r\n\r\n  public static get instance(): SPModuleLoader {\r\n    if (!this._instance) {\r\n      this._instance = new SPModuleLoader();\r\n    }\r\n\r\n    return this._instance;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   *\r\n   * Combokeys reference. Placed here so any other component can use it without having to bundle it again.\r\n   */\r\n  public combokeys: typeof Combokeys = Combokeys;\r\n\r\n  private _developerTools: DeveloperTools;\r\n\r\n  constructor() {\r\n    // Watching for hotkeys on the whole document.\r\n    const fullWindowCombokeys: Combokeys.Combokeys = new Combokeys(document.documentElement);\r\n\r\n    // Bind the debugger to \"ctrl+shift+`\"\r\n    fullWindowCombokeys.bind('ctrl+shift+`', (): void => this._toggleDeveloperTools());\r\n\r\n    // Easter egg - Konami code. Obfuscate, so it's not obvious from looking at the minimized source.\r\n    const keyMap: { [id: number]: string } = require('combokeys/helpers/special-keys-map');\r\n    fullWindowCombokeys.bind([keyMap[38], keyMap[38], keyMap[40], keyMap[40], keyMap[37],\r\n                    keyMap[39], keyMap[37], keyMap[39], 'b', 'a', keyMap[13]].join(' '), (): void => {\r\n      const audio: HTMLAudioElement =\r\n        new Audio(require('file?name=[sha512:hash:base32:7]_[hash:16].[ext]!./Windows_95_Startup.mp3'));\r\n      audio.volume = 0.25;\r\n      audio.play();\r\n    });\r\n\r\n    if (!SPModuleLoader._headElement) {\r\n      SPModuleLoader._headElement = document.getElementsByTagName('head')[0];\r\n    }\r\n  }\r\n\r\n  public initialize(preloadedData: IApplicationPreloadedData): Promise<void> {\r\n    return new Promise<void>((resolve: () => void) => {\r\n        ManifestStore.instance.populateManifests(preloadedData);\r\n        this._loadDebugManifests().then(() => {\r\n            if (preloadedData && preloadedData.spPageContextInfo) {\r\n              SystemJsWrapper.instance.currentLocale = preloadedData.spPageContextInfo.currentUICultureName;\r\n            }\r\n\r\n            resolve();\r\n          });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the component manifest by id.\r\n   *\r\n   * @param id - GUID id of the component.\r\n   */\r\n  /* tslint:disable:no-any */\r\n  public getManifestById(id: string): any {\r\n  /* tslint:enable:no-any */\r\n    return ManifestStore.instance.getManifestById(id);\r\n  }\r\n\r\n  /**\r\n   * This is called by the page scripts to start loading the framework. Do not call it from your own code.\r\n   */\r\n  public start(preloadedData: IApplicationPreloadedData): void {\r\n    this.initialize(preloadedData).then(() => {\r\n      if (preloadedData) {\r\n        const applicationManifestId: string = preloadedData.clientSideApplicationId\r\n          ? preloadedData.clientSideApplicationId\r\n          : (preloadedData.clientSideApplicationManifest\r\n            ? preloadedData.clientSideApplicationManifest.id\r\n            : undefined);\r\n\r\n        const manifest: IClientSideComponentManifest =\r\n          ManifestStore.instance.getManifestById(applicationManifestId);\r\n        if (manifest) {\r\n          const platformModule: IStandardLibraryModule = standardLibraryModules['@microsoft/sp-client-preview'];\r\n\r\n          let loadingComplete: boolean = false;\r\n\r\n          Promise.all([\r\n            this.loadStandardLibraryModule(platformModule), // Load the platform in addition to the application\r\n            SystemJsWrapper.instance.loadManifestModules(manifest.id, manifest.loaderConfig)\r\n          ])\r\n            /* tslint:disable:no-any */\r\n            .then((modules: any[]) => {\r\n            /* tslint:enable:no-any */\r\n              loadingComplete = true;\r\n\r\n              /* tslint:disable:no-any */\r\n              const platform: any = modules[0];\r\n              /* tslint:enable:no-any */\r\n              const application: {} = modules[1];\r\n\r\n              if (!platform || !application) {\r\n                throw new Error(`@microsoft/sp-client-preview or ${manifest.loaderConfig.entryModuleId} failed ` +\r\n                                'to load.');\r\n              } else {\r\n                try {\r\n                  platform._spShell.start(application, preloadedData);\r\n                } catch (e) {\r\n                  console.error(`Error loading application. Error: ${e}`);\r\n                  throw e;\r\n                }\r\n              }\r\n\r\n              // @todo VSO #210443: preload WebPart manifests\r\n            }).catch((e) => {\r\n              if (!loadingComplete) {\r\n                console.error(`${manifest.loaderConfig.entryModuleId} failed to load. Error: ${e}`);\r\n              }\r\n\r\n              throw e;\r\n            });\r\n        } else {\r\n          throw new Error('Invalid manifest.');\r\n        }\r\n      } else {\r\n        throw new Error('Invalid preloaded data.');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Given a URL, load a script.\r\n   *\r\n   * @param {scriptSource} The script URL.\r\n   * @param {globalExportsName} (optional) If the script isn't an AMD mdoule and loads a global member on the page,\r\n   *                  specify the global member's name.\r\n   * @returns A promse containing the loaded module.\r\n   */\r\n  /* tslint:disable:no-any */\r\n  public loadScript(scriptSource: string, globalExportsName?: string): Promise<any> {\r\n  /* tslint:enable:no-any */\r\n    return SystemJsWrapper.instance.loadScript(scriptSource, globalExportsName);\r\n  }\r\n\r\n  /**\r\n   * Load a standard library manifest.\r\n   *\r\n   * @param {standardLibraryModule} The standard library module object.\r\n   * @returns A promse containing the loaded module.\r\n   */\r\n  /* tslint:disable:no-any */\r\n  public loadStandardLibraryModule(standardLibraryModule: IStandardLibraryModule, moduleName?: string): Promise<any> {\r\n  /* tslint:enable:no-any */\r\n    if (NPM_BUILD) {\r\n      // Special case for NPM modules to resolve React, React-DOM, and Flux\r\n\r\n      /* tslint:disable:no-any */\r\n      const resultPromise: Promise<any> = this._npmLoadPackage(moduleName);\r\n      /* tslint:enable:no-any */\r\n      if (resultPromise) {\r\n        return resultPromise;\r\n      }\r\n    }\r\n\r\n    const references: IBundleReference[] =\r\n      [standardLibraryModule.bundleReference].concat(standardLibraryModule.aliases || []);\r\n\r\n    return this._internalLoadManifestModules(references);\r\n  }\r\n\r\n  /**\r\n   * Load a manifest, or resolve a manifest ID and load it.\r\n   *\r\n   * @param {idOrManifest} The ID of a manifest, the manifest payload, or an array of IDs. In the case of an array\r\n   *                        of IDs, all of the IDs are considered equally valid, so pick the first one that's resolvable\r\n   *                        to a manifest.\r\n   * @returns A promse containing the loaded module.\r\n   */\r\n  /* tslint:disable:no-any */\r\n  public loadManifestModules(idOrManifest: string | IClientSideComponentManifest): Promise<any> {\r\n  /* tslint:enable:no-any */\r\n    if (typeof idOrManifest === 'string') {\r\n      return this._internalLoadManifestModules([{\r\n        id: idOrManifest as string\r\n      }]);\r\n    } else {\r\n      const manifest: IClientSideComponentManifest = idOrManifest as IClientSideComponentManifest;\r\n      return this._internalLoadManifestModules(manifest);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads additional manifests into the manifest store, updating existing manifests.\r\n   *\r\n   * @param {manifests} The manifests to load into the store.\r\n   */\r\n  public importManifests(manifests: IClientSideComponentManifest[], overwriteExisting: boolean = false): void {\r\n    ManifestStore.instance.importManifests(manifests, overwriteExisting);\r\n  }\r\n\r\n  /**\r\n   * If debug manfiests haven't already been loaded, force them to load without prompting the user.\r\n   *\r\n   * @returns A promise that is fulfilled when the manifests are loaded.\r\n   */\r\n  public forceLoadDebugManifests(): Promise<void> {\r\n    return this._loadDebugManifests(true, true, 'http://localhost:4321/temp/manifests.js');\r\n  }\r\n\r\n  /**\r\n   * Get all registered manifests.\r\n   *\r\n   * @returns All registered manifests.\r\n   */\r\n  public getManifests(): IClientSideComponentManifest[] {\r\n    return ManifestStore.instance.getAllManifests();\r\n  }\r\n\r\n  /**\r\n   * Inserts a <link ... /> tag for a stylesheet.\r\n   *\r\n   * @param {url} - The CSS file URL.\r\n   */\r\n  public loadCss(url: string): void {\r\n    const linkTag: HTMLLinkElement = document.createElement('link');\r\n    linkTag.rel = 'stylesheet';\r\n    linkTag.type = 'text/css';\r\n    linkTag.href = url;\r\n\r\n    SPModuleLoader._headElement.appendChild(linkTag);\r\n  }\r\n\r\n  private _loadDebugManifests(noPrompt: boolean = false,\r\n                              noCache: boolean = false,\r\n                              alternativeManifestsFile?: string): Promise<void> {\r\n    if (noPrompt) {\r\n      _allowDebug = true;\r\n    }\r\n\r\n    return DebugManifestProvider.instance.getDebugManifests(noCache, alternativeManifestsFile).then(\r\n      (debugManifests: { [id: string]: IClientSideComponentManifest }) => {\r\n        ManifestStore.instance.populateDebugManifests(debugManifests);\r\n        ensureDebugAllowed(debugManifests && Object.keys(debugManifests).length > 0);\r\n      });\r\n  }\r\n\r\n  private _internalLoadManifestModules(referenceOrManifest: IBundleReference[] | IClientSideComponentManifest):\r\n  /* tslint:disable:no-any */\r\n      Promise<any> {\r\n  /* tslint:enable:no-any */\r\n    const references: IBundleReference[] = referenceOrManifest as IBundleReference[];\r\n    let manifest: IClientSideComponentManifest;\r\n    let entryName: string;\r\n    if (references.length) {\r\n      // We have an array of manifests, so find the first one that matches\r\n      for (const reference of references) {\r\n        manifest = ManifestStore.instance.getManifestById(reference.id);\r\n        if (manifest) {\r\n          entryName = reference.entryName;\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      manifest = referenceOrManifest as IClientSideComponentManifest;\r\n    }\r\n\r\n    if (manifest) {\r\n      return SystemJsWrapper.instance.loadManifestModules(manifest.id, manifest.loaderConfig, entryName);\r\n    } else {\r\n      throw new Error(`Manifest \"${JSON.stringify(referenceOrManifest)}\" not found.`);\r\n    }\r\n  }\r\n\r\n  private _toggleDeveloperTools(): void {\r\n    if (this._developerTools) {\r\n      this._developerTools.toggleDeveloperTools();\r\n    } else {\r\n      const loadDeveloperTools: () => void = (): void => {\r\n        require.ensure(['./DeveloperTools/DeveloperTools'], (require: ((path: string) => IDeveloperToolsWrapper)) => {\r\n          const developerToolsClass: typeof DeveloperTools = require('./DeveloperTools/DeveloperTools').default;\r\n          this._developerTools = developerToolsClass.instance;\r\n          this._developerTools.initialize();\r\n\r\n          this._developerTools.showHideDeveloperTools(true);\r\n        }, 'developer-tools');\r\n      };\r\n\r\n      // If we're building an NPM module, we need to make sure React, Flux, and React-DOM aren't bundled. Instead,\r\n      // we'll load them from node_modules.\r\n      if (NPM_BUILD) {\r\n        // Ensure the fake react, flux, and react-dom modules are included in this chunk\r\n        require('react');\r\n        require('flux');\r\n        require('react-dom');\r\n\r\n        /* tslint:disable:no-any */\r\n        const reactPromise: Promise<any> = this._npmLoadPackage('react');\r\n        const fluxPromise: Promise<any> = this._npmLoadPackage('flux');\r\n        const reactDomPromise: Promise<any> = this._npmLoadPackage('react-dom');\r\n        /* tslint:enable:no-any */\r\n\r\n        Promise.all([reactPromise, reactDomPromise, fluxPromise])\r\n               .then((results: any[]) => { // tslint:disable-line:no-any\r\n                 /* tslint:disable:no-any */\r\n                 const react: any = results[0];\r\n                 const reactDom: any = results[1];\r\n                 const flux: any = results[2];\r\n                 /* tslint:enable:no-any */\r\n\r\n                 // Inject react, react-dom, and flux into the module cache\r\n                 require.cache[require.resolveWeak('react')].exports = react;\r\n                 require.cache[require.resolveWeak('react-dom')].exports = reactDom;\r\n                 require.cache[require.resolveWeak('flux')].exports = flux;\r\n\r\n                 loadDeveloperTools();\r\n               });\r\n      } else {\r\n        loadDeveloperTools();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function contains some magic to load special packages (React, React-DOM, and Flux) while we're serving\r\n   *  from a local workbench without bunding any of them.\r\n   */\r\n  /* tslint:disable:no-any */\r\n  private _npmLoadPackage(packageName: string): Promise<any> {\r\n  /* tslint:enable:no-any */\r\n    if (NPM_BUILD) {\r\n      const url: typeof URL = require('url');\r\n      const relativeReactUrl: string = '__RELATIVE_REACT_PATH__';\r\n      const relativeFluxUrl: string = '__RELATIVE_FLUX_PATH__';\r\n\r\n      if (relativeReactUrl === '__RELATIVE_' + 'REACT_PATH__' ||\r\n          relativeFluxUrl  === '__RELATIVE_' + 'FLUX_PATH__') {\r\n        // If the package hasn't been installed (i.e. - it's NPMX linked), don't try to load from incorrect paths\r\n        return undefined;\r\n      }\r\n\r\n      const reactUrl: string = url.resolve(__webpack_public_path__, relativeReactUrl);\r\n      const fluxUrl: string = url.resolve(__webpack_public_path__, relativeFluxUrl);\r\n\r\n      // Stick these on the SPModuleLoader object\r\n      /* tslint:disable:no-any */\r\n      const staticContainer: {\r\n        _reactPromise: Promise<any>,\r\n        _fluxPromise: Promise<any>\r\n      } = SPModuleLoader as any;\r\n      /* tslint:enable:no-any */\r\n\r\n      if (!staticContainer._reactPromise) {\r\n       staticContainer._reactPromise = this.loadScript(reactUrl);\r\n      }\r\n\r\n      if (!staticContainer._fluxPromise) {\r\n        staticContainer._fluxPromise = this.loadScript(fluxUrl);\r\n      }\r\n\r\n      switch (packageName) {\r\n        case 'react':\r\n          return staticContainer._reactPromise;\r\n\r\n        case 'react-dom':\r\n          /* tslint:disable:no-any */\r\n          return staticContainer._reactPromise.then((react: any) => react.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\r\n          /* tslint:enable:no-any */\r\n\r\n        case 'flux':\r\n          return staticContainer._fluxPromise;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}