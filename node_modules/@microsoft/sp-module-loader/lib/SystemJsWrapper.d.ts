import { IClientSideComponentLoaderConfig } from '@microsoft/sp-module-interfaces';
/**
 * Our wrapper around SystemJS for loading our own modules.
 */
export default class SystemJsWrapper {
    private static _instance;
    static instance: SystemJsWrapper;
    /**
     * Map from a serial ID to the associated loader config.
     */
    private _manifestMap;
    private _currentLocale;
    private _componentCache;
    private _parentMap;
    /**
     * Given a loader config, load a module.
     *
     * @param {manifest} A manifest loader config.
     * @param {id} The manifest's ID
     * @returns A promise containing the loaded module.
     */
    loadManifestModules(id: string, manifest: IClientSideComponentLoaderConfig, entryName?: string, preloadDependencies?: boolean): Promise<any>;
    /**
     * Given a URL, load a script.
     *
     * @param {scriptSrc} The script URL.
     * @param {globalExportsName} (optional) If the script isn't an AMD module and loads a global member on the page,
     *                  specify the global member's name.
     * @return A promise containing the loaded module.
     */
    loadScript(scriptSrc: string, globalExportsName: string): Promise<any>;
    /**
     * Set the current locale.
     *
     * @param {locale} The user's locale.
     */
    currentLocale: string;
    private _initialize();
    /**
     * Resolve a path to the min or debug version of a script. Currently only min versions are supported.
     */
    private _resolvePath(path);
}
