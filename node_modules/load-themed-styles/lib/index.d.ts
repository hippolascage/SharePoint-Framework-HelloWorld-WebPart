/**
 * An IThemingInstruction can specify a rawString to be preserved or a theme slot and a default value
 * to use if that slot is not specified by the theme.
 */
export interface IThemingInstruction {
    theme?: string;
    defaultValue?: string;
    rawString?: string;
}
export declare type ThemableArray = Array<IThemingInstruction>;
/**
 * Loads a set of style text. If it is registered too early, we will register it when the window.load
 * event is fired.
 * @param {string | ThemableArray} styles Themable style text to register.
 */
export declare function loadStyles(styles: string | ThemableArray): void;
/**
 * Registers a set theme tokens to find and replace. If styles were already registered, they will be
 * replaced.
 * @param {any} theme JSON object of theme tokens to values.
 */
export declare function loadTheme(theme: any): void;
/**
 * Find theme tokens and replaces them with provided theme values.
 * @param {string} styles Tokenized styles to fix.
 */
export declare function detokenize(styles: string): string;
/**
 * Split tokenized CSS into an array of strings and theme specification objects
 * @param {string} styles Tokenized styles to split.
 */
export declare function splitStyles(styles: string): ThemableArray;
